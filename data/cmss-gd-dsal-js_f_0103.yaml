- en: Exercises
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
  zh: 练习
- en: The following exercises provide you with the opportunity to practice with recursion.
    The solutions to these exercises are found in the section [`Chapter 10`](f_0215.xhtml#recursively.recurse.with.recursion.solutions).
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 以下练习为您提供了练习递归的机会。这些练习的解决方案可以在章节[`第10章`](f_0215.xhtml#recursively.recurse.with.recursion.solutions)中找到。
- en: The following function prints every other number from a low number to a high
    number。For example，if `low` is 0 and `high` is 10，it would print：
  id: totrans-2
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 以下函数打印从低数字到高数字的每个其他数字。例如，如果`low`是0而`high`是10，它将打印：
- en: '| ​  | 0 |'
  id: totrans-3
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 0 |'
- en: '| ​  | 2 |'
  id: totrans-4
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 2 |'
- en: '| ​  | 4 |'
  id: totrans-5
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 4 |'
- en: '| ​  | 6 |'
  id: totrans-6
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 6 |'
- en: '| ​  | 8 |'
  id: totrans-7
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 8 |'
- en: '| ​  | 10 |'
  id: totrans-8
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 10 |'
- en: Identify the base case in the function：
  id: totrans-9
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_NORMAL
  zh: 确定函数中的基例：
- en: '| ​  | `function` `printEveryOther(low, high)` { |'
  id: totrans-10
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `function` `printEveryOther(low, high)` { |'
- en: '| ​  | `if` (low > high) { `return`; } |'
  id: totrans-11
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `if` (low > high) { `return`; } |'
- en: '| ​  |  |'
  id: totrans-12
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `console.log(low)`; |'
  id: totrans-13
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `console.log(low)`; |'
- en: '| ​  | `printEveryOther(low + 2, high)`; |'
  id: totrans-14
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `printEveryOther(low + 2, high)`; |'
- en: '| ​  | } |'
  id: totrans-15
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: My kid was playing with my computer and changed my `factorial` function so that
    it computes `factorial` based on `(number - 2)` instead of `(number - 1)`。He also
    changed `number <= 1` to `number === 1`。Predict what will happen when we run `factorial(10)`
    using this function：
  id: totrans-16
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 我的小孩在我的电脑上玩耍，改变了我的`factorial`函数，使其基于`(number - 2)`而不是`(number - 1)`来计算`factorial`。他还将`number
    <= 1`改为`number === 1`。预测使用这个函数运行`factorial(10)`时会发生什么：
- en: '| ​  | `function` `factorial(number)` { |'
  id: totrans-17
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `function` `factorial(number)` { |'
- en: '| ​  | `if` (number === 1) { |'
  id: totrans-18
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `if` (number === 1) { |'
- en: '| ​  | `return` 1; |'
  id: totrans-19
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` 1; |'
- en: '| ​  | } `else` { |'
  id: totrans-20
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } `else` { |'
- en: '| ​  | `return` `number` * `factorial(number - 2)`; |'
  id: totrans-21
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` `number` * `factorial(number - 2)`; |'
- en: '| ​  | } |'
  id: totrans-22
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  | } |'
  id: totrans-23
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: Following is a function in which we pass in two numbers called `low` and `high`。The
    function returns the sum of all the numbers from `low` to `high`。For example,
    if `low` is 1 and `high` is 10，the function will return the sum of all numbers
    from 1 to 10，which is 55。However，our code is missing the base case and will run
    indefinitely！Fix the code by adding the correct base case：
  id: totrans-24
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 以下是一个函数，我们传入两个数字，称为`low`和`high`。该函数返回从`low`到`high`的所有数字的总和。例如，如果`low`是1而`high`是10，该函数将返回从1到10的所有数字的总和，即55。然而，我们的代码缺少基例，将无限运行！通过添加正确的基例来修复代码：
- en: '| ​  | `function` `sum(low, high)` { |'
  id: totrans-25
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `function` `sum(low, high)` { |'
- en: '| ​  | `return` `high` + `sum(low, high - 1)`; |'
  id: totrans-26
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` `high` + `sum(low, high - 1)`; |'
- en: '| ​  | } |'
  id: totrans-27
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: Here’s an array containing both numbers and arrays, which in turn contain numbers
    and arrays：
  id: totrans-28
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 这是一个包含数字和数组的数组，数组内又包含数字和数组：
- en: '| ​  | `array` = [ 1, |'
  id: totrans-29
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `array` = [ 1, |'
- en: '| ​  | 2, |'
  id: totrans-30
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 2, |'
- en: '| ​  | 3, |'
  id: totrans-31
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 3, |'
- en: '| ​  | [4, 5, 6], |'
  id: totrans-32
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | [4, 5, 6], |'
- en: '| ​  | 7, |'
  id: totrans-33
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 7, |'
- en: '| ​  | [8, |'
  id: totrans-34
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | [8, |'
- en: '| ​  | [9, 10, 11, |'
  id: totrans-35
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | [9, 10, 11, |'
- en: '| ​  | [12, 13, 14] |'
  id: totrans-36
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | [12, 13, 14] |'
- en: '| ​  | ] |'
  id: totrans-37
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | ] |'
- en: '| ​  | ], |'
  id: totrans-38
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | ], |'
- en: '| ​  | [15, 16, 17, 18, 19, |'
  id: totrans-39
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | [15, 16, 17, 18, 19, |'
- en: '| ​  | [20, 21, 22, |'
  id: totrans-40
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | [20, 21, 22, |'
- en: '| ​  | [23, 24, 25, |'
  id: totrans-41
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | [23, 24, 25, |'
- en: '| ​  | [26, 27, 29] |'
  id: totrans-42
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | [26, 27, 29] |'
- en: '| ​  | ], 30, 31 |'
  id: totrans-43
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | ], 30, 31 |'
- en: '| ​  | ], 32 |'
  id: totrans-44
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | ], 32 |'
- en: '| ​  | ], 33 |'
  id: totrans-45
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | ], 33 |'
- en: '| ​  | ] |'
  id: totrans-46
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | ] |'
- en: Write a recursive function that prints all the numbers (and just numbers)。
  id: totrans-47
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_NORMAL
  zh: 编写一个递归函数，打印所有数字（仅数字）。
- en: Copyright © 2024, The Pragmatic Bookshelf.
  id: totrans-48
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 版权所有 © 2024, The Pragmatic Bookshelf.
