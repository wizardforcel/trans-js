- en: 'Module 15:'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 第15模块：
- en: '|'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Internationalization (i18n) in Vue.js
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js中的国际化（i18n）
- en: '|'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: 'In the interconnected world of web development, creating applications that
    cater to a global audience involves addressing language and cultural differences.
    The module "Internationalization (i18n) in Vue.js" takes a pivotal role in the
    book "Vue.js Essentials: For Responsive Web Development," guiding readers through
    the intricate process of incorporating internationalization features into Vue.js
    applications. Within these pages, developers will gain comprehensive insights
    into i18n principles, techniques, and best practices, empowering them to build
    web applications that are accessible and user-friendly across diverse linguistic
    and cultural contexts.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '在互联的网页开发世界中，创建能够服务全球用户的应用程序，涉及到语言和文化差异的处理。模块《Vue.js中的国际化（i18n）》在《Vue.js Essentials:
    For Responsive Web Development》一书中起着关键作用，指导读者了解将国际化功能集成到Vue.js应用程序中的复杂过程。在这些页面中，开发者将深入了解i18n的原理、技术和最佳实践，使他们能够构建在不同语言和文化背景下均易于访问和使用的网页应用程序。'
- en: Recognizing the Necessity of Internationalization in Web Development
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 认识到国际化在网页开发中的必要性
- en: Before delving into the specifics of i18n in Vue.js, it is essential to recognize
    the necessity of internationalization in modern web development. This module commences
    by highlighting the challenges associated with language barriers and cultural
    nuances. Readers will gain an understanding of how internationalization fosters
    inclusivity, enabling applications to transcend linguistic boundaries and provide
    a tailored user experience to individuals from diverse backgrounds and regions.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入了解Vue.js中i18n的具体内容之前，首先需要认识到现代网页开发中国际化的必要性。本模块首先突出语言障碍和文化差异所带来的挑战。读者将了解国际化如何促进包容性，使应用程序能够超越语言的界限，为来自不同背景和地区的用户提供量身定制的体验。
- en: 'Vue-i18n Basics: Principles and Implementation'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Vue-i18n基础：原理与实现
- en: Central to the success of i18n in Vue.js is the Vue-i18n library, designed to
    facilitate the implementation of internationalization features seamlessly. This
    segment explores the basics of Vue-i18n, guiding readers through its principles
    and the fundamental concepts of message formatting, pluralization, and date/time
    localization. By grasping these foundational elements, developers gain the knowledge
    needed to integrate Vue-i18n effectively into their Vue.js projects and enhance
    their applications' linguistic flexibility.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在Vue.js中，i18n成功的核心是Vue-i18n库，它旨在无缝地实现国际化功能。本节将探讨Vue-i18n的基础，带领读者了解其原理以及消息格式化、复数形式和日期/时间本地化的基本概念。通过掌握这些基础知识，开发者将获得将Vue-i18n有效集成到Vue.js项目中的技能，增强应用程序的语言灵活性。
- en: Dynamic Locale Switching and Component-Level Localization
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 动态语言切换与组件级本地化
- en: The module delves into advanced i18n concepts, such as dynamic locale switching
    and component-level localization. Readers will explore strategies for enabling
    users to dynamically switch between different locales, providing a tailored experience
    based on their language preferences. Additionally, the segment covers component-level
    localization, empowering developers to localize specific components independently,
    ensuring a nuanced and context-specific internationalization approach within the
    application.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本模块深入探讨了高级国际化（i18n）概念，如动态区域设置切换和组件级本地化。读者将探索使用户能够在不同语言环境之间动态切换的策略，根据他们的语言偏好提供量身定制的体验。此外，本节还涵盖了组件级本地化，使开发者能够独立地本地化特定组件，从而确保在应用程序中采取细致且具有上下文特定的国际化方法。
- en: Handling Complex Content and Accessibility in Multilingual Apps
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 处理多语言应用中的复杂内容和可访问性
- en: Building on the basics, this part of the module tackles more intricate aspects
    of i18n in Vue.js, such as handling complex content and ensuring accessibility
    in multilingual applications. Developers will gain insights into strategies for
    managing dynamic content, handling translation of complex UI elements, and ensuring
    that internationalized applications remain accessible to users with diverse language
    preferences and assistive technology requirements.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在基础内容的基础上，本模块的这一部分解决了Vue.js中国际化的更复杂方面，如处理复杂内容和确保多语言应用的可访问性。开发者将深入了解管理动态内容、处理复杂UI元素翻译的策略，以及确保国际化应用在满足多样化语言偏好和辅助技术需求的用户群体中仍然具有可访问性。
- en: '"Internationalization (i18n) in Vue.js" stands as a pivotal module within "Vue.js
    Essentials: For Responsive Web Development," providing readers with a comprehensive
    guide to implementing internationalization features in Vue.js applications. By
    unraveling the necessity of internationalization, exploring Vue-i18n basics, and
    delving into advanced i18n concepts, developers gain the knowledge and skills
    needed to create web applications that transcend linguistic and cultural barriers.
    This module serves as an indispensable resource for developers committed to building
    inclusive, globally accessible, and multilingual Vue.js applications that cater
    to the diverse needs of users around the world.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '《Vue.js中的国际化（i18n）》是《Vue.js Essentials: For Responsive Web Development》中的一个关键模块，为读者提供了在Vue.js应用程序中实现国际化功能的全面指南。通过揭示国际化的必要性、探索Vue-i18n基础知识，并深入研究高级i18n概念，开发者将获得创建超越语言和文化障碍的Web应用所需的知识和技能。本模块是开发者构建包容性、全球可访问和多语言Vue.js应用程序的不可或缺的资源，旨在满足全球用户的多样化需求。'
- en: Setting Up and Configuring i18n
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置和配置 i18n
- en: 'Within the "Internationalization (i18n) in Vue.js" module of "Vue.js Essentials:
    For Responsive Web Development," the section on "Setting Up and Configuring i18n"
    embarks on a journey to empower Vue.js developers with the tools to create multilingual
    applications. In a globalized digital landscape, the ability to seamlessly present
    content in diverse languages is not just a feature but a necessity. This section
    equips developers with the knowledge and skills to integrate internationalization
    effectively, enhancing the reach and user experience of Vue.js applications.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在《Vue.js 基础：响应式 Web 开发》中的“Vue.js 国际化（i18n）”模块里，“设置和配置 i18n”部分帮助 Vue.js 开发者掌握创建多语言应用的工具。在全球化的数字环境中，能够无缝呈现不同语言的内容不仅是一个功能，更是一种必要性。本部分为开发者提供了有效集成国际化的知识与技能，从而提升
    Vue.js 应用的用户覆盖范围和体验。
- en: '1\. Installation of vue-i18n: Laying the Foundation for Multilingual Support'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 安装 vue-i18n：为多语言支持打下基础
- en: Installing vue-i18n via npm
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 npm 安装 vue-i18n
- en: npm install vue-i18n
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: npm install vue-i18n
- en: The initial step involves installing the vue-i18n package, a versatile and widely
    adopted library for handling internationalization in Vue.js applications. By leveraging
    npm, developers can effortlessly integrate vue-i18n into their projects, paving
    the way for the seamless incorporation of multilingual features.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 初步步骤是安装 vue-i18n 包，这是一个功能强大且被广泛使用的库，用于处理 Vue.js 应用中的国际化。通过使用 npm，开发者可以轻松地将 vue-i18n
    集成到项目中，为顺利加入多语言功能铺平道路。
- en: '2\. Configuration of i18n Instance: Tailoring Language Settings'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 配置 i18n 实例：定制语言设置
- en: // Creating and configuring the i18n instance
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: // 创建和配置 i18n 实例
- en: import Vue from 'vue';
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: import Vue from 'vue';
- en: import VueI18n from 'vue-i18n';
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: import VueI18n from 'vue-i18n';
- en: Vue.use(VueI18n);
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.use(VueI18n);
- en: const i18n = new VueI18n({
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: const i18n = new VueI18n({
- en: 'locale: ''en'', // Default language'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 'locale: ''zh'', // 默认语言'
- en: 'messages: {'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 'messages: {'
- en: 'en: {'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 'en: {'
- en: // English language messages
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: // 英语语言消息
- en: 'welcome: ''Welcome to our Vue.js app!'','
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 'welcome: ''欢迎来到我们的 Vue.js 应用！'','
- en: // ...
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '},'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'es: {'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 'es: {'
- en: // Spanish language messages
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: // 西班牙语语言消息
- en: 'welcome: ''¡Bienvenido a nuestra aplicación Vue.js!'','
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 'welcome: ''¡Bienvenido a nuestra aplicación Vue.js!'','
- en: // ...
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '},'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: // Additional language messages can be added as needed
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: // 可根据需要添加其他语言消息
- en: '},'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '});'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: export default i18n;
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: export default i18n;
- en: The creation and configuration of the i18n instance set the stage for tailoring
    language settings within the Vue.js application. The locale property defines the
    default language, and the messages object encapsulates language-specific messages.
    Developers can easily extend this structure to accommodate additional languages,
    creating a comprehensive and flexible foundation for internationalization.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 创建和配置 i18n 实例为在 Vue.js 应用中定制语言设置奠定了基础。locale 属性定义了默认语言，messages 对象封装了特定语言的消息。开发者可以轻松扩展这个结构，以适应更多语言，从而为国际化构建一个全面而灵活的基础。
- en: '3\. Integrating i18n with Vue Components: Seamless Language Switching'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 将 i18n 与 Vue 组件集成：无缝的语言切换
- en: <!-- Integrating i18n with Vue components -->
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 将 i18n 与 Vue 组件集成 -->
- en: <template>
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h1>{{ $t('welcome') }}</h1>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: <h1>{{ $t('welcome') }}</h1>
- en: <!-- Additional multilingual content -->
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 其他多语言内容 -->
- en: </div>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: // Component-specific language settings
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: // 组件特定的语言设置
- en: 'i18n: {'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 'i18n: {'
- en: 'messages: {'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 'messages: {'
- en: 'en: {'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 'en: {'
- en: 'welcome: ''Welcome to our Vue.js app!'','
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 'welcome: ''欢迎使用我们的 Vue.js 应用程序！'','
- en: // ...
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '},'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'es: {'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 'es: {'
- en: 'welcome: ''¡Bienvenido a nuestra aplicación Vue.js!'','
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 'welcome: ''¡Bienvenido a nuestra aplicación Vue.js!'','
- en: // ...
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '},'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: // ...
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '},'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: The integration of i18n with Vue components facilitates seamless language switching
    within the application. The $t method enables the retrieval of language-specific
    messages, dynamically adapting content based on the selected language. This approach
    ensures that developers can easily create multilingual components without compromising
    on code readability and maintainability.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 将 i18n 与 Vue 组件集成，能够在应用程序中实现无缝的语言切换。`$t` 方法使得能够检索特定语言的消息，动态地根据选择的语言调整内容。这种方法确保开发者能够轻松创建多语言组件，而不影响代码的可读性和可维护性。
- en: Crafting Inclusive Vue.js Applications with i18n
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 构建具有包容性的 Vue.js 应用程序与 i18n
- en: The "Setting Up and Configuring i18n" section empowers Vue.js developers to
    embark on a journey towards crafting inclusive and multilingual applications.
    By leveraging the vue-i18n library, configuring the i18n instance, and seamlessly
    integrating i18n with Vue components, developers can break down language barriers
    and provide a personalized and accessible user experience. As the digital landscape
    continues to embrace diversity, mastering internationalization with i18n becomes
    not just a skill but an essential aspect of responsible Vue.js development, ensuring
    that applications resonate with users across the globe.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 《设置与配置 i18n》部分使 Vue.js 开发者能够开始构建具有包容性和多语言支持的应用程序之旅。通过利用 vue-i18n 库、配置 i18n 实例并将
    i18n 与 Vue 组件无缝集成，开发者可以打破语言障碍，提供个性化和易于访问的用户体验。随着数字环境不断接受多样性，掌握 i18n 的国际化不仅是一项技能，更是负责任的
    Vue.js 开发的一个必要方面，确保应用程序能够与全球用户产生共鸣。
- en: Translating Content in Vue.js
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Vue.js 中内容翻译
- en: 'The "Internationalization (i18n) in Vue.js" module of "Vue.js Essentials: For
    Responsive Web Development" delves into the intricacies of creating applications
    that transcend language barriers. The section on "Translating Content in Vue.js"
    becomes the linchpin, providing developers with the insights and techniques needed
    to imbue their Vue.js applications with robust multilingual capabilities.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 《Vue.js 精要：响应式网页开发》中的“Vue.js 中的国际化 (i18n)”模块深入探讨了创建超越语言障碍的应用程序的复杂性。“Vue.js 中内容翻译”部分成为关键，为开发者提供了在其
    Vue.js 应用程序中融入强大多语言功能所需的洞见和技术。
- en: 1\. Leveraging Vue-i18n for Dynamic Content Translation
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 利用 Vue-i18n 动态翻译内容
- en: <!-- Utilizing Vue-i18n for dynamic content translation in Vue components -->
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 在 Vue 组件中使用 Vue-i18n 实现动态内容翻译 -->
- en: <template>
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h1>{{ $t('greeting') }}</h1>
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: <h1>{{ $t('greeting') }}</h1>
- en: <p>{{ $t('introduction') }}</p>
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ $t('introduction') }}</p>
- en: </div>
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: // Component-specific language settings
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: // 组件特定的语言设置
- en: 'i18n: {'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 'i18n: {'
- en: 'messages: {'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 'messages: {'
- en: 'en: {'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 'en: {'
- en: 'greeting: ''Hello!'','
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 'greeting: ''Hello!'','
- en: 'introduction: ''Welcome to our Vue.js app.'','
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 'introduction: ''Welcome to our Vue.js app.'','
- en: // ...
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '},'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'es: {'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 'es: {'
- en: 'greeting: ''¡Hola!'','
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 'greeting: ''¡Hola!'','
- en: 'introduction: ''Bienvenido a nuestra aplicación Vue.js.'','
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 'introduction: ''Bienvenido a nuestra aplicación Vue.js.'','
- en: // ...
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '},'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: // ...
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '},'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: The integration of Vue-i18n within Vue components facilitates dynamic content
    translation. The $t method is employed to fetch translated messages based on the
    selected language, ensuring that greetings, introductions, and other textual content
    seamlessly adapt to the user's linguistic preferences.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: Vue 组件中集成 Vue-i18n 可实现动态内容翻译。通过使用 $t 方法，可以根据选择的语言获取翻译后的消息，确保问候语、介绍及其他文本内容能无缝适应用户的语言偏好。
- en: '2\. Dynamic Language Switching: Empowering Users with Choice'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 动态语言切换：赋予用户选择权
- en: <!-- Dynamic language switching UI in Vue.js application -->
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- Vue.js 应用中的动态语言切换 UI -->
- en: <template>
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <select v-model="selectedLanguage" @change="changeLanguage">
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: <select v-model="selectedLanguage" @change="changeLanguage">
- en: <option v-for="lang in supportedLanguages" :key="lang" :value="lang">{{ lang
    }}</option>
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: <option v-for="lang in supportedLanguages" :key="lang" :value="lang">{{ lang
    }}</option>
- en: </select>
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: </select>
- en: </div>
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'selectedLanguage: ''en'','
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 'selectedLanguage: ''en'','
- en: 'supportedLanguages: [''en'', ''es'', ''fr'', ''de'', ''ja''], // Add more languages
    as needed'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 'supportedLanguages: [''en'', ''es'', ''fr'', ''de'', ''ja''], // 根据需要添加更多语言'
- en: '};'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'methods: {'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 'methods: {'
- en: changeLanguage() {
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: changeLanguage() {
- en: this.$i18n.locale = this.selectedLanguage;
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: this.$i18n.locale = this.selectedLanguage;
- en: '},'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: To empower users with language choices, a dynamic language-switching UI is implemented.
    The <select> element allows users to choose their preferred language from a list
    of supported languages. The changeLanguage method updates the i18n instance's
    locale, triggering a seamless transition between languages without requiring a
    page reload.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 为了赋予用户语言选择的权利，实现了动态语言切换的用户界面。<select> 元素允许用户从支持的语言列表中选择他们偏好的语言。changeLanguage
    方法更新 i18n 实例的语言环境，实现语言之间的无缝切换，无需重新加载页面。
- en: '3\. Pluralization and Formatting: Addressing Linguistic Nuances'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 复数化和格式化：处理语言的细微差别
- en: <!-- Handling pluralization and formatting in Vue-i18n -->
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 在 Vue-i18n 中处理复数化和格式化 -->
- en: <template>
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <p>{{ $tc('message', count) }}</p>
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ $tc('message', count) }}</p>
- en: <p>{{ $d(new Date(), 'short') }}</p>
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ $d(new Date(), 'short') }}</p>
- en: </div>
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'count: 5,'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 'count: 5,'
- en: '};'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Vue-i18n goes beyond basic translation by addressing linguistic nuances such
    as pluralization and date formatting. The $tc method allows developers to handle
    pluralization dynamically based on a count variable, while the $d method ensures
    proper date formatting according to the user's locale.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: Vue-i18n 不仅仅是基础翻译，它还处理了语言差异，如复数形式和日期格式。$tc 方法使得开发者可以根据计数变量动态处理复数形式，而 $d 方法则根据用户的语言环境确保日期格式正确。
- en: Crafting Language-Agnostic Vue.js Applications
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 打造与语言无关的 Vue.js 应用程序
- en: The "Translating Content in Vue.js" section unlocks the potential for crafting
    language-agnostic Vue.js applications. By seamlessly integrating Vue-i18n for
    dynamic content translation, enabling users to switch languages dynamically, and
    addressing linguistic nuances like pluralization and formatting, developers can
    create applications that resonate with users worldwide. This section serves as
    a guide for developers seeking to build inclusive and globally accessible Vue.js
    applications that transcend linguistic boundaries.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '"在 Vue.js 中翻译内容"部分开启了打造与语言无关的 Vue.js 应用程序的潜力。通过无缝集成 Vue-i18n 实现动态内容翻译，允许用户动态切换语言，并处理语言差异，如复数形式和格式化问题，开发者可以创建与全球用户产生共鸣的应用程序。本节将为开发者提供指导，帮助他们构建包容性强、全球可访问的
    Vue.js 应用程序，超越语言边界。'
- en: Dynamic Locale Switching
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动态语言切换
- en: 'In the expansive realm of "Internationalization (i18n) in Vue.js" within "Vue.js
    Essentials: For Responsive Web Development," the section on "Dynamic Locale Switching"
    stands as a pivotal guide for developers aiming to enrich their Vue.js applications
    with multifaceted language support. The ability to dynamically switch locales
    empowers applications to cater to diverse linguistic preferences, ensuring a truly
    global user experience.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在《Vue.js 精要：响应式网页开发》一书中，“Vue.js 中的国际化（i18n）”部分涵盖了“动态语言切换”的内容，这一部分是开发者为其 Vue.js
    应用程序增添多语言支持的关键指南。动态切换语言环境的能力使得应用程序能够满足不同语言偏好的需求，确保全球用户的良好体验。
- en: '1\. Reactive Locale Switching: A Seamless User Experience'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 响应式语言切换：无缝用户体验
- en: <!-- Implementing dynamic locale switching in Vue.js -->
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 在 Vue.js 中实现动态语言切换 -->
- en: <template>
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <select v-model="selectedLocale" @change="changeLocale">
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: <select v-model="selectedLocale" @change="changeLocale">
- en: <option v-for="locale in supportedLocales" :key="locale" :value="locale">{{
    locale }}</option>
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: <option v-for="locale in supportedLocales" :key="locale" :value="locale">{{
    locale }}</option>
- en: </select>
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: </select>
- en: <p>{{ $t('greeting') }}</p>
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ $t('greeting') }}</p>
- en: <p>{{ $t('introduction') }}</p>
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ $t('introduction') }}</p>
- en: </div>
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'selectedLocale: ''en'','
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 'selectedLocale: ''en'','
- en: 'supportedLocales: [''en'', ''es'', ''fr'', ''de'', ''ja''], // Extend as needed'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 'supportedLocales: [''en'', ''es'', ''fr'', ''de'', ''ja''], // 根据需要扩展'
- en: '};'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'methods: {'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 'methods: {'
- en: changeLocale() {
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: changeLocale() {
- en: this.$i18n.locale = this.selectedLocale;
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: this.$i18n.locale = this.selectedLocale;
- en: '},'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: The implementation involves a dynamic locale-switching UI allowing users to
    choose their preferred language from a dropdown list. The changeLocale method
    seamlessly updates the i18n instance's locale based on the user's selection, leading
    to a reactive and instantaneous switch between languages.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 实现方式包括一个动态语言切换的用户界面，允许用户从下拉列表中选择他们的首选语言。changeLocale 方法根据用户的选择无缝更新 i18n 实例的语言，从而实现语言的响应式、即时切换。
- en: '2\. Vue-i18n Locale Storage: Persisting User Preferences'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. Vue-i18n 本地化存储：持久化用户偏好
- en: // Persisting selected locale in localStorage with Vue-i18n
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: // 使用 Vue-i18n 将所选语言持久化到 localStorage
- en: const i18n = new VueI18n({
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: const i18n = new VueI18n({
- en: 'locale: localStorage.getItem(''userLocale'') || ''en'', // Default to ''en''
    if not set'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 'locale: localStorage.getItem(''userLocale'') || ''en'', // 如果未设置，则默认为''en'''
- en: 'messages: {'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 'messages: {'
- en: // Language-specific messages
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: // 语言特定的消息
- en: // ...
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '},'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '});'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: new Vue({
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: new Vue({
- en: // ...
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: i18n,
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: i18n,
- en: // ...
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '});'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: To enhance user experience, the selected locale can be persisted across sessions.
    By utilizing localStorage in conjunction with Vue-i18n, the user's chosen locale
    is stored, allowing the application to remember and apply their language preference
    even after they revisit the site.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提升用户体验，所选语言可以在会话之间持久化。通过结合使用 localStorage 和 Vue-i18n，用户选择的语言会被存储，允许应用在用户重新访问网站时记住并应用他们的语言偏好。
- en: '3\. Dynamic Locale-Specific Components: Tailoring User Interfaces'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 动态语言特定组件：定制用户界面
- en: <!-- Dynamic rendering of locale-specific components in Vue.js -->
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 在 Vue.js 中动态渲染语言特定组件 -->
- en: <template>
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <component :is="dynamicComponentName" />
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: <component :is="dynamicComponentName" />
- en: </div>
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'computed: {'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 'computed: {'
- en: dynamicComponentName() {
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: dynamicComponentName() {
- en: // Dynamically determine component based on the selected locale
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: // 根据所选语言动态确定组件
- en: return `LocalizedComponent_${this.$i18n.locale}`;
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: return `LocalizedComponent_${this.$i18n.locale}`;
- en: '},'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Dynamic locale switching can extend beyond text translation to the presentation
    layer. By dynamically rendering locale-specific components based on the selected
    locale, developers can tailor entire sections of the user interface to align with
    the nuances of different languages, ensuring a more culturally relevant experience.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 动态语言切换不仅可以扩展到文本翻译，还可以作用于展示层。通过根据所选语言动态渲染特定语言的组件，开发者可以定制整个用户界面的部分内容，以符合不同语言的细微差别，从而确保更加符合文化背景的用户体验。
- en: A Globalized Vue.js Experience Through Dynamic Locale Switching
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 通过动态语言切换打造全球化的 Vue.js 体验
- en: The "Dynamic Locale Switching" section serves as a gateway for Vue.js developers
    to create applications that transcend linguistic boundaries. By providing tools
    for reactive locale switching, persisting user preferences, and dynamically rendering
    locale-specific components, developers can build Vue.js applications that offer
    a truly globalized and inclusive user experience. The section not only equips
    developers with technical know-how but instills a mindset that embraces diversity
    and strives for seamless accessibility in Vue.js applications across the globe.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: “动态语言环境切换”部分为 Vue.js 开发者提供了一扇大门，让他们能够创建跨越语言障碍的应用程序。通过提供响应式的语言环境切换工具、持久化用户偏好设置以及动态渲染特定语言环境的组件，开发者可以构建提供真正全球化和包容性用户体验的
    Vue.js 应用程序。该部分不仅为开发者提供了技术知识，还培养了拥抱多样性并努力实现无缝可访问性的思维方式，旨在让 Vue.js 应用在全球范围内更具包容性。
- en: Date and Number Formatting with i18n
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日期和数字格式化与 i18n
- en: 'Within the encompassing module of "Internationalization (i18n) in Vue.js" in
    the book "Vue.js Essentials: For Responsive Web Development," the section on "Date
    and Number Formatting with i18n" emerges as a crucial resource. This segment guides
    developers through the nuanced process of adapting date and number formats to
    cater to the diverse preferences of a global audience, contributing to a more
    inclusive and user-friendly Vue.js application.'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '在《Vue.js Essentials: For Responsive Web Development》一书的“Vue.js 中的国际化（i18n）”模块中，“日期和数字格式化与
    i18n”部分作为一个关键资源脱颖而出。本节内容指导开发者如何根据全球受众的多样化偏好调整日期和数字格式，从而帮助开发出更具包容性和用户友好的 Vue.js
    应用程序。'
- en: 1\. Leveraging Vue-i18n for Date Formatting
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 利用 Vue-i18n 进行日期格式化
- en: <!-- Implementing date formatting in Vue.js with Vue-i18n -->
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 在 Vue.js 中使用 Vue-i18n 实现日期格式化 -->
- en: <template>
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <p>{{ formatDate(new Date()) }}</p>
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ formatDate(new Date()) }}</p>
- en: </div>
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'methods: {'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 'methods: {'
- en: formatDate(date) {
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: formatDate(date) {
- en: return this.$d(date, 'short');
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: return this.$d(date, 'short');
- en: '},'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Vue-i18n facilitates dynamic date formatting through the $d method. In this
    example, the formatDate method uses the 'short' format to display the date, providing
    a concise and locale-specific representation that aligns with the user's language
    preferences.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: Vue-i18n 通过 $d 方法实现动态日期格式化。在这个示例中，formatDate 方法使用 'short' 格式来显示日期，提供了简洁且符合语言环境的日期表示方式，符合用户的语言偏好。
- en: '2\. Multilingual Number Formatting: Vue-i18n in Action'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 多语言数字格式化：Vue-i18n 的实际应用
- en: <!-- Utilizing Vue-i18n for multilingual number formatting -->
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 使用 Vue-i18n 进行多语言数字格式化 -->
- en: <template>
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <p>{{ formatNumber(1234567.89) }}</p>
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ formatNumber(1234567.89) }}</p>
- en: </div>
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'methods: {'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 'methods: {'
- en: formatNumber(number) {
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: formatNumber(number) {
- en: return this.$n(number);
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: return this.$n(number);
- en: '},'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: The $n method in Vue-i18n extends its capabilities beyond textual content, enabling
    developers to seamlessly format numbers according to the user's locale. The formatNumber
    method showcases this functionality by rendering the provided numeric value in
    a culturally appropriate format.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: Vue-i18n中的$n方法将其功能扩展到文本内容之外，使开发者能够根据用户的地区设置无缝地格式化数字。formatNumber方法通过以符合文化习惯的格式呈现提供的数字值，展示了这一功能。
- en: '3\. Customizing Date and Number Formats: Adapting to Preferences'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 自定义日期和数字格式：适应用户偏好
- en: // Customizing date and number formats in Vue-i18n
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: // 在Vue-i18n中自定义日期和数字格式
- en: const i18n = new VueI18n({
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: const i18n = new VueI18n({
- en: 'locale: ''en'','
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 'locale: ''en'','
- en: 'messages: {'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 'messages: {'
- en: 'en: {'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 'en: {'
- en: 'dateFormats: {'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 'dateFormats: {'
- en: 'short: { year: ''numeric'', month: ''short'', day: ''numeric'' },'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 'short: { year: ''numeric'', month: ''short'', day: ''numeric'' },'
- en: // Add more custom formats as needed
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: // 根据需要添加更多自定义格式
- en: '},'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'numberFormats: {'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 'numberFormats: {'
- en: 'currency: { style: ''currency'', currency: ''USD'' },'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 'currency: { style: ''currency'', currency: ''USD'' },'
- en: // Extend with additional custom formats
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: // 使用更多自定义格式进行扩展
- en: '},'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: // Define formats for other supported languages
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: // 定义其他支持语言的格式
- en: // ...
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '},'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '});'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: new Vue({
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: new Vue({
- en: // ...
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: i18n,
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: i18n,
- en: // ...
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: // ...
- en: '});'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: Vue-i18n enables developers to customize date and number formats based on their
    application's specific requirements. By defining custom formats within the i18n
    instance, developers can tailor the representation of dates and numbers to align
    with cultural norms, ensuring a more familiar and user-friendly experience.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: Vue-i18n使开发者能够根据应用程序的特定需求自定义日期和数字格式。通过在i18n实例中定义自定义格式，开发者可以根据文化规范定制日期和数字的表示方式，从而确保用户体验更加亲切和易于使用。
- en: A Harmonious Blend of Functionality and User Preference
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 功能性与用户偏好的和谐融合
- en: The "Date and Number Formatting with i18n" section of the "Internationalization
    (i18n) in Vue.js" module provides developers with the tools needed to harmonize
    the functionality of Vue.js applications with user preferences across the globe.
    By leveraging Vue-i18n for date and number formatting, adapting to multilingual
    requirements, and customizing formats to suit diverse cultural norms, developers
    can create applications that resonate with users on a deeper level. This section
    not only imparts technical know-how but underscores the importance of considering
    cultural nuances in Vue.js development, fostering a more inclusive and globally
    accessible user experience.
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '"Vue.js中的国际化（i18n）——日期和数字格式化"部分为开发者提供了与全球用户偏好相匹配的Vue.js应用程序功能所需的工具。通过利用Vue-i18n进行日期和数字格式化，适应多语言需求，并定制格式以适应不同的文化规范，开发者可以创建更具共鸣的应用程序，帮助用户更深入地理解应用。此部分不仅传授技术知识，还强调了在Vue.js开发中考虑文化差异的重要性，促进了更具包容性和全球可访问性的用户体验。'
