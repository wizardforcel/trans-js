- en: 第18章
  id: totrans-0
  prefs:
  - PREF_H1
  stylish: true
  type: TYPE_NORMAL
  zh: 第18章
- en: 通过图形连接一切
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 通过图形连接一切
- en: 假设我们正在构建一个允许人们彼此交友的社交网络。这些友谊是相互的，因此如果爱丽丝和鲍勃是朋友，那么鲍勃也会是爱丽丝的朋友。
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 假设我们正在构建一个允许人们彼此交友的社交网络。这些友谊是相互的，因此如果**爱丽丝**和**鲍勃**是朋友，那么**鲍勃**也会是**爱丽丝**的朋友。
- en: 我们如何最好地组织这些数据？
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 我们如何最好地组织这些数据？
- en: 一种基本方法可能是使用二维数组来存储友谊列表：
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 一种基本方法可能是使用二维数组来存储友谊列表：
- en: '| ​  | `friendships = [` |'
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `friendships = [` |'
- en: '| ​  | `["Alice", "Bob"]`, |'
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `["Alice", "Bob"]`, |'
- en: '| ​  | `["Bob", "Cynthia"]`, |'
  id: totrans-7
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `["Bob", "Cynthia"]`, |'
- en: '| ​  | `["Alice", "Diana"]`, |'
  id: totrans-8
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `["Alice", "Diana"]`, |'
- en: '| ​  | `["Bob", "Diana"]`, |'
  id: totrans-9
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `["Bob", "Diana"]`, |'
- en: '| ​  | `["Elise", "Fred"]`, |'
  id: totrans-10
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `["Elise", "Fred"]`, |'
- en: '| ​  | `["Diana", "Fred"]`, |'
  id: totrans-11
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `["Diana", "Fred"]`, |'
- en: '| ​  | `["Fred", "Alice"]` |'
  id: totrans-12
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `["Fred", "Alice"]` |'
- en: '| ​  | ] |'
  id: totrans-13
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | ] |'
- en: 在这里，每个包含一对名字的子数组表示两个人之间的友谊。
  id: totrans-14
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在这里，每个包含一对名字的子数组表示两个人之间的友谊。
- en: 不幸的是，使用这种方法，没有快速的方式可以查看爱丽丝的朋友是谁。如果我们仔细观察，可以看到爱丽丝与鲍勃、黛安娜和弗雷德是朋友。但为了让计算机确定这一点，它必须遍历列表中的所有关系，因为爱丽丝可能出现在任何关系中。这是`O(N)`，速度非常慢。
  id: totrans-15
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 不幸的是，使用这种方法，没有快速的方式可以查看**爱丽丝**的朋友是谁。如果我们仔细观察，可以看到**爱丽丝**与**鲍勃**、**黛安娜**和**弗雷德**是朋友。但为了让计算机确定这一点，它必须遍历列表中的所有关系，因为**爱丽丝**可能出现在任何关系中。这是`O(N)`，速度非常慢。
- en: 幸运的是，我们可以做得比这好得多。使用一种称为图的数据结构，我们可以在`O(1)`时间内找到爱丽丝的朋友。
  id: totrans-16
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 幸运的是，我们可以做得比这好得多。使用一种称为图的数据结构，我们可以在`O(1)`时间内找到**爱丽丝**的朋友。
