- en: Chapter 7
  id: totrans-0
  prefs:
  - PREF_H1
  stylish: true
  type: TYPE_NORMAL
  zh: 第七章
- en: DOM manipulation
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: DOM操作
- en: 我们即将探索JavaScript中最动态和最基本的Web开发领域之一：DOM（文档对象模型）操作。这项技能对于任何想要创建交互式和响应式用户界面的开发者来说至关重要。我们将讨论如何选择和操作DOM元素，处理事件，最后介绍虚拟DOM的概念，这一概念彻底改变了我们管理用户界面变化的方式。
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 我们即将探索JavaScript中最动态和最基本的Web开发领域之一：DOM（文档对象模型）操作。这项技能对于任何想要创建交互式和响应式用户界面的开发者来说至关重要。我们将讨论如何选择和操作DOM元素，处理事件，最后介绍虚拟DOM的概念，这一概念彻底改变了我们管理用户界面变化的方式。
- en: DOM元素的选择和操作
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: DOM元素的选择和操作
- en: DOM是您HTML文档结构的树形表示。每个HTML元素都是树中的一个节点，这些节点可以使用JavaScript访问和操作，以更改页面的内容和外观。
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: DOM是您HTML文档结构的树形表示。每个HTML元素都是树中的一个节点，这些节点可以使用JavaScript访问和操作，以更改页面的内容和外观。
- en: 选择元素：操作DOM的第一步是选择您要处理的元素。JavaScript提供了几种方法来做到这一点。
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 选择元素：操作DOM的第一步是选择您要处理的元素。JavaScript提供了几种方法来做到这一点。
- en: '`getElementById`：通过其ID选择一个元素。'
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`getElementById`：通过其ID选择一个元素。'
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '`getElementsByClassName`：选择所有具有给定类的元素。'
  id: totrans-8
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`getElementsByClassName`：选择所有具有给定类的元素。'
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '`getElementsByTagName`：选择给定类型的所有元素。'
  id: totrans-10
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`getElementsByTagName`：选择给定类型的所有元素。'
- en: '[PRE2]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`querySelector`和`querySelectorAll`：选择第一个匹配CSS选择器的元素或所有匹配的元素。'
  id: totrans-12
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`querySelector`和`querySelectorAll`：选择第一个匹配CSS选择器的元素或所有匹配的元素。'
- en: '[PRE3]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 操作元素：选择元素后，您可以操作它们的属性和内容。
  id: totrans-14
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 操作元素：选择元素后，您可以操作它们的属性和内容。
- en: 修改文本：使用`innerText`或`textContent`来更改元素的文本。
  id: totrans-15
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 修改文本：使用`innerText`或`textContent`来更改元素的文本。
- en: '[PRE4]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 修改HTML：使用`innerHTML`来更改元素的内部HTML。
  id: totrans-17
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 修改HTML：使用`innerHTML`来更改元素的内部HTML。
- en: '[PRE5]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 修改属性：使用`setAttribute`来更改元素的属性。
  id: totrans-19
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 修改属性：使用`setAttribute`来更改元素的属性。
- en: '[PRE6]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 修改样式：通过`style`属性直接修改元素的样式。
  id: totrans-21
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 修改样式：通过`style`属性直接修改元素的样式。
- en: '[PRE7]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 添加和删除类：使用`classList`来操作元素的类。
  id: totrans-23
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 添加和删除类：使用`classList`来操作元素的类。
- en: '[PRE8]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 创建和删除元素：您可以创建新元素并将其添加到DOM中，也可以删除现有元素。
  id: totrans-25
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 创建和删除元素：您可以创建新元素并将其添加到DOM中，也可以删除现有元素。
- en: 创建元素：使用`createElement`来创建新元素，使用`appendChild`或`insertBefore`将它们添加到DOM中。
  id: totrans-26
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 创建元素：使用`createElement`来创建新元素，使用`appendChild`或`insertBefore`将它们添加到DOM中。
- en: '[PRE9]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 删除元素：使用`removeChild`删除元素。
  id: totrans-28
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 删除元素：使用`removeChild`删除元素。
- en: '[PRE10]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Events and event handling
  id: totrans-30
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 事件与事件处理
- en: 事件是在浏览器中发生的动作或事件，可以使用JavaScript捕获和处理。事件处理对于在网页上创建交互性至关重要。
  id: totrans-31
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 事件是在浏览器中发生的动作或事件，可以使用JavaScript捕获和处理。事件处理对于在网页上创建交互性至关重要。
- en: 添加事件：使用`addEventListener`向元素添加事件。
  id: totrans-32
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 添加事件：使用`addEventListener`向元素添加事件。
- en: '[PRE11]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 事件类型：可以捕获几种类型的事件，例如点击、鼠标移动、按键等。
  id: totrans-34
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 事件类型：可以捕获几种类型的事件，例如点击、鼠标移动、按键等。
- en: '[PRE12]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 键盘事件：捕获键盘事件以添加功能，例如键盘快捷键。
  id: totrans-36
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 键盘事件：捕获键盘事件以添加功能，例如键盘快捷键。
- en: '[PRE13]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 阻止默认行为：使用`preventDefault`来防止事件的默认行为。
  id: totrans-38
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 阻止默认行为：使用`preventDefault`来防止事件的默认行为。
- en: '[PRE14]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 事件传播：JavaScript中的事件通过DOM以两种方式传播：捕获和冒泡。使用`stopPropagation`来停止事件的传播。
  id: totrans-40
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 事件传播：JavaScript中的事件通过DOM以两种方式传播：捕获和冒泡。使用`stopPropagation`来停止事件的传播。
- en: '[PRE15]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 事件委托：将事件委托给父元素，以捕获其子元素的事件。这对于动态元素非常有用。
  id: totrans-42
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 事件委托：将事件委托给父元素，以捕获其子元素的事件。这对于动态元素非常有用。
- en: '[PRE16]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Introduction to Virtual DOM
  id: totrans-44
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 虚拟DOM简介
- en: '`Virtual DOM`是现代库和框架（如`React`）中的一个核心概念。它允许你高效地更新用户界面，同时最小化对实际DOM的直接操作。'
  id: totrans-45
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`Virtual DOM`是现代库和框架（如`React`）中的一个核心概念。它允许你高效地更新用户界面，同时最小化对实际DOM的直接操作。'
- en: '`Virtual DOM`的工作原理：`Virtual DOM`是对真实DOM的内存表示。当应用程序状态发生变化时，会创建一个新的`Virtual DOM`树，并与之前的树进行比较。然后以优化的方式将差异应用于真实的DOM。'
  id: totrans-46
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`Virtual DOM`的工作原理：`Virtual DOM`是对真实DOM的内存表示。当应用程序状态发生变化时，会创建一个新的`Virtual DOM`树，并与之前的树进行比较。然后以优化的方式将差异应用于真实的DOM。'
- en: '`Virtual DOM`的好处：'
  id: totrans-47
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`Virtual DOM`的好处：'
- en: 1\. 性能：最小化对DOM的直接操作，这在性能上是代价高昂的。
  id: totrans-48
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 1\. 性能：最小化对DOM的直接操作，这在性能上是代价高昂的。
- en: 2\. 简化：抽象了DOM更新的复杂性，使代码编写变得更简单。
  id: totrans-49
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 2\. 简化：抽象了DOM更新的复杂性，使代码编写变得更简单。
- en: 3\. 一致性：确保用户界面状态以可预测的方式维护。
  id: totrans-50
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 3\. 一致性：确保用户界面状态以可预测的方式维护。
- en: 示例与`React`：
  id: totrans-51
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 示例与`React`：
- en: '[PRE17]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 在这个例子中，`React`使用`Virtual DOM`来优化计数器更新。每次点击按钮时，状态发生变化，这导致创建一个新的`Virtual DOM`。然后，`React`有效地将必要的更改应用于实际的DOM。
  id: totrans-53
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在这个例子中，`React`使用`Virtual DOM`来优化计数器更新。每次点击按钮时，状态发生变化，这导致创建一个新的`Virtual DOM`。然后，`React`有效地将必要的更改应用于实际的DOM。
- en: 我们探索了DOM操作、事件捕获和处理，以及对`Virtual DOM`的介绍。这些技能是创建交互式和高效网页应用的基础。通过掌握这些技术，你将能够构建响应灵活、直观的用户界面。随着我们继续前进，这些工具将为更高级和动态的`JavaScript`应用打下基础。保持好奇和参与，你将能够很好地应对现代网页开发中出现的挑战和机遇。
  id: totrans-54
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 我们探索了DOM操作、事件捕获和处理，以及对`Virtual DOM`的介绍。这些技能是创建交互式和高效网页应用的基础。通过掌握这些技术，你将能够构建响应灵活、直观的用户界面。随着我们继续前进，这些工具将为更高级和动态的`JavaScript`应用打下基础。保持好奇和参与，你将能够很好地应对现代网页开发中出现的挑战和机遇。
