- en: replaceAll()
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: replaceAll()
- en: 'The replaceAll() method outputs the same result as replace() when the global
    flag is set. Compare:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: replaceAll() 方法在设置了全局标志时输出与 replace() 相同的结果。对比：
- en: '[appendix/methods/methods_ex13.js](http://media.pragprog.com/titles/fkjavascript/code/appendix/methods/methods_ex13.js)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[appendix/methods/methods_ex13.js](http://media.pragprog.com/titles/fkjavascript/code/appendix/methods/methods_ex13.js)'
- en: '|   | **const** str = *"$5, $10, $20"*; |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** str = *"$5, $10, $20"*; |'
- en: '|   | **const** re = */**\$**/g*; |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** re = */**\$**/g*; |'
- en: '|   |  |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | console.log(str.replace(re, *"€"*)); *// → €5, €10, €20* |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '|   | console.log(str.replace(re, *"€"*)); *// → €5, €10, €20* |'
- en: '|   | console.log(str.replaceAll(re, *"€"*)); *// → €5, €10, €20* |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '|   | console.log(str.replaceAll(re, *"€"*)); *// → €5, €10, €20* |'
- en: 'As a result, calling replaceAll() doesn’t seem to yield much benefit over calling
    replace(). The main difference between the two methods is how replaceAll() handles
    replacement when the pattern is a string, as opposed to a regex:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，调用 replaceAll() 方法似乎并不会比调用 replace() 方法带来更多好处。这两者之间的主要区别在于，当模式是字符串而不是正则表达式时，replaceAll()
    如何处理替换：
- en: '[appendix/methods/methods_ex14.js](http://media.pragprog.com/titles/fkjavascript/code/appendix/methods/methods_ex14.js)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[appendix/methods/methods_ex14.js](http://media.pragprog.com/titles/fkjavascript/code/appendix/methods/methods_ex14.js)'
- en: '|   | **const** str = *"$5, $10, $20"*; |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** str = *"$5, $10, $20"*; |'
- en: '|   | **const** searchStr = *"$"*; |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** searchStr = *"$"*; |'
- en: '|   |  |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | console.log(str.replace(searchStr, *"€"*)); *// → €5, $10, $20* |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '|   | console.log(str.replace(searchStr, *"€"*)); *// → €5, $10, $20* |'
- en: '|   | console.log(str.replaceAll(searchStr, *"€"*)); *// → €5, €10, €20* |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '|   | console.log(str.replaceAll(searchStr, *"€"*)); *// → €5, €10, €20* |'
- en: 'While replaceAll() replaces all instances of a substring, replace() stops searching
    as soon as it replaces the first substring. Keep in mind that replaceAll() always
    expects the global flags to be present in a regex pattern; otherwise, it throws
    an error:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: replaceAll() 方法会替换所有子字符串的实例，而 replace() 方法在替换第一个子字符串后就停止搜索。请记住，replaceAll()
    总是期望正则表达式模式中包含全局标志；否则，它会抛出错误：
- en: '[appendix/methods/methods_ex15.js](http://media.pragprog.com/titles/fkjavascript/code/appendix/methods/methods_ex15.js)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[appendix/methods/methods_ex15.js](http://media.pragprog.com/titles/fkjavascript/code/appendix/methods/methods_ex15.js)'
- en: '|   | **const** str = *"$5, $10, $20"*; |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** str = *"$5, $10, $20"*; |'
- en: '|   | **const** re = */**\$**/*; |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** re = */**\$**/*; |'
- en: '|   |  |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | str.replaceAll(re, *"€"*); |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '|   | str.replaceAll(re, *"€"*); |'
- en: '|   | *// → TypeError: String.prototype.replaceAll called with a non-global
    RegExp* |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '|   | *// → TypeError: String.prototype.replaceAll called with a non-global
    RegExp* |'
- en: '|   | *// argument* |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '|   | *// 参数* |'
- en: '| Special Replacement Patterns |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 特殊替换模式 |'
- en: '| --- |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| --- |'
- en: '| ![images/aside-icons/note.png](images/aside-icons/note.png) | The second
    parameter of replace() and replaceAll() supports a set of special patterns that
    let you reference different parts of the matched substring. See Recipe 34, [*Using
    Special Replacement Patterns*](f_0045.xhtml#rcp.replacement_patterns). |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| ![images/aside-icons/note.png](images/aside-icons/note.png) | replace() 和
    replaceAll() 的第二个参数支持一组特殊模式，可以让你引用匹配的子字符串的不同部分。请参见第 34 条，[*使用特殊替换模式*](f_0045.xhtml#rcp.replacement_patterns)。
    |'
