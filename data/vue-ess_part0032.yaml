- en: 'Module 27:'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 模块27：
- en: '|'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Building a Portfolio with Vue.js
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vue.js构建作品集
- en: '|'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: 'In the realm of web development, a well-crafted portfolio is more than a showcase
    of projects; it''s a dynamic representation of a developer''s skills, creativity,
    and expertise. The module "Building a Portfolio with Vue.js" takes center stage
    in the book "Vue.js Essentials: For Responsive Web Development," guiding readers
    through the process of leveraging Vue.js to create a compelling and responsive
    portfolio. Within these pages, developers will gain practical insights, design
    strategies, and hands-on experiences to not only display their projects but also
    leave a lasting impression on potential employers, clients, and collaborators.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在网页开发领域，一个精心制作的作品集不仅仅是项目展示，它是开发者技能、创造力和专业能力的动态体现。《Vue.js精要：响应式网页开发》一书中的模块“使用Vue.js构建作品集”在其中占据了重要地位，带领读者通过利用Vue.js创建一个引人注目且响应迅速的作品集的过程。在这些页面中，开发者将获得实践性的见解、设计策略和动手经验，不仅可以展示他们的项目，还能给潜在的雇主、客户和合作伙伴留下深刻的印象。
- en: The Significance of a Vue.js-powered Portfolio in Web Development
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 基于Vue.js的作品集在网页开发中的重要性
- en: Before diving into the specifics of building a portfolio with Vue.js, it's essential
    to recognize the pivotal role a portfolio plays in a developer's career. This
    module initiates by highlighting the multifaceted purposes a portfolio serves—showcasing
    technical skills, exhibiting design proficiency, and conveying a developer's unique
    approach to problem-solving. Readers will gain an understanding of how a Vue.js-powered
    portfolio provides an interactive and engaging experience that sets them apart
    in a competitive landscape.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入探讨如何使用Vue.js构建作品集的具体内容之前，首先需要认识到作品集在开发者职业生涯中的重要作用。本模块通过强调作品集的多重用途——展示技术技能、展示设计能力、以及传达开发者独特的解决问题方法——作为开篇。读者将了解到，基于Vue.js的作品集如何提供一种互动性和吸引力的体验，使他们在竞争激烈的环境中脱颖而出。
- en: 'Vue.js for Dynamic and Responsive Portfolio Design: A Practical Approach'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vue.js进行动态和响应式作品集设计：一种实用的方法
- en: This segment delves into the practical application of Vue.js for crafting a
    dynamic and responsive portfolio design. Developers will explore strategies for
    structuring portfolio components, incorporating Vue.js features like transitions
    and animations, and ensuring responsiveness across various devices. Practical
    insights into creating a smooth user experience through Vue.js-powered interactivity
    enhance the portfolio's visual appeal and functionality.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分深入探讨了Vue.js在构建动态和响应式作品集设计中的实际应用。开发者将探索如何构建作品集组件，如何利用Vue.js的功能，如过渡和动画，以及如何确保在不同设备上响应良好。通过Vue.js驱动的互动性，提升用户体验的流畅性，同时增强作品集的视觉吸引力和功能性。
- en: 'Showcasing Projects with Vue.js Components: Leveraging Reusability and Modularity'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vue.js组件展示项目：利用可重用性和模块化
- en: The module guides readers through the process of showcasing projects within
    the portfolio using Vue.js components. Developers will gain insights into creating
    reusable and modular components for individual projects, allowing for consistent
    presentation and easy maintenance. Leveraging Vue.js components facilitates the
    seamless integration of diverse project types, creating a cohesive and professional
    portfolio that adapts to the evolving nature of a developer's work.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 该模块引导读者通过使用 Vue.js 组件展示作品集中的项目。开发者将深入了解如何为每个项目创建可重用的模块化组件，以便保持一致的展示效果和便于维护。利用
    Vue.js 组件可以顺利整合不同类型的项目，打造出一个紧密连贯且专业的作品集，从而适应开发者工作日益变化的特点。
- en: 'Dynamic Content and Data Binding: Personalizing the Portfolio Experience'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 动态内容与数据绑定：个性化作品集体验
- en: Central to a compelling portfolio is the ability to present dynamic content
    and personalize the user experience. This part of the module explores how Vue.js
    facilitates data binding, enabling developers to dynamically update portfolio
    content, highlight key achievements, and tailor the presentation to diverse audiences.
    Understanding the power of data binding in Vue.js enhances the portfolio's versatility
    and effectiveness in leaving a lasting impression.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 吸引人的作品集的核心在于能够展示动态内容并个性化用户体验。本模块的这一部分探讨了 Vue.js 如何实现数据绑定，使开发者能够动态更新作品集内容，突出重要成就，并根据不同观众量身定制展示效果。理解
    Vue.js 中数据绑定的强大功能，增强了作品集的多样性和有效性，使其能够留下深刻印象。
- en: '"Building a Portfolio with Vue.js" stands as a pivotal module within "Vue.js
    Essentials: For Responsive Web Development," providing readers with practical
    guidance on showcasing their skills through a Vue.js-powered portfolio. By unraveling
    the significance of a dynamic and responsive portfolio, exploring design strategies,
    and emphasizing Vue.js for component-based development and data binding, developers
    gain the knowledge and skills needed to craft an impactful digital presence. This
    module serves as an indispensable resource for developers committed to not only
    mastering Vue.js for project development but also strategically presenting their
    capabilities to the world in a visually compelling and interactive manner.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 《使用 Vue.js 构建作品集》是《Vue.js 必备知识：响应式网页开发》中的一个关键模块，向读者提供了通过 Vue.js 驱动的作品集展示技能的实用指导。通过揭示动态和响应式作品集的重要性，探索设计策略，并强调
    Vue.js 在基于组件的开发和数据绑定中的应用，开发者将获得制作具有影响力的数字化形象所需的知识和技能。这个模块为那些不仅希望掌握 Vue.js 进行项目开发，还希望以视觉吸引力和互动方式向世界展示自己能力的开发者提供了不可或缺的资源。
- en: Showcasing Vue.js Projects
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 展示 Vue.js 项目
- en: 'The "Building a Portfolio with Vue.js" module in "Vue.js Essentials: For Responsive
    Web Development" culminates with a pivotal section titled "Showcasing Vue.js Projects."
    This section serves as a guide for developers on effectively presenting their
    Vue.js projects in a portfolio. It not only emphasizes the importance of showcasing
    one''s work but also provides insights into best practices, design considerations,
    and code snippets to create an impactful and visually appealing portfolio.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 《Vue.js基础：响应式网页开发》模块中的“用Vue.js构建作品集”部分，以一个名为“展示Vue.js项目”的关键章节作为结尾。本节为开发者提供了如何在作品集中有效展示Vue.js项目的指导。它不仅强调了展示个人作品的重要性，还提供了最佳实践、设计考虑因素以及代码示例，帮助开发者创建一个具有视觉冲击力和吸引力的作品集。
- en: Importance of a Well-Crafted Portfolio
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 精心制作作品集的重要性
- en: The section commences by highlighting the significance of a well-crafted portfolio
    in a developer's career. A portfolio serves as a tangible representation of a
    developer's skills, creativity, and proficiency with Vue.js. It is a powerful
    tool for attracting potential employers or clients and stands as a testament to
    the developer's ability to deliver high-quality and visually appealing web applications.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本节首先强调了精心制作的作品集在开发者职业生涯中的重要性。作品集作为开发者技能、创意和Vue.js熟练度的具体体现，是吸引潜在雇主或客户的有力工具，体现了开发者交付高质量、视觉吸引力强的网页应用的能力。
- en: Example of structuring a Vue.js project for a portfolio
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue.js项目作品集结构示例
- en: /portfolio
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: /portfolio
- en: /src
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: /src
- en: /components
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: /components
- en: ProjectCard.vue
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: ProjectCard.vue
- en: /views
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: /views
- en: Home.vue
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Home.vue
- en: ProjectDetail.vue
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: ProjectDetail.vue
- en: Designing an Engaging Portfolio Layout
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 设计引人入胜的作品集布局
- en: The design of the portfolio layout plays a crucial role in capturing the attention
    of visitors. The section delves into design considerations, such as intuitive
    navigation, clear project categorization, and concise project descriptions. Developers
    are encouraged to create an engaging and responsive layout that allows users to
    seamlessly explore and understand the showcased Vue.js projects.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作品集布局的设计在吸引访客注意力方面起着至关重要的作用。本节深入探讨了设计考虑因素，如直观的导航、清晰的项目分类和简洁的项目描述。鼓励开发者创建一个引人入胜且响应式的布局，让用户能够无缝地浏览和理解展示的Vue.js项目。
- en: <!-- Example of a simplified Vue.js portfolio layout -->
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 简化版Vue.js作品集布局示例 -->
- en: <template>
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <Header />
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: <Header />
- en: <router-view />
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: <router-view />
- en: <Footer />
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: <Footer />
- en: </div>
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: import Header from './components/Header.vue';
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: import Header from './components/Header.vue';
- en: import Footer from './components/Footer.vue';
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: import Footer from './components/Footer.vue';
- en: export default {
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'components: {'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 'components: {'
- en: Header,
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Header,
- en: Footer,
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Footer,
- en: '},'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Creating Project Cards with Vue.js Components
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vue.js组件创建项目卡片
- en: Project cards are a fundamental element of a Vue.js portfolio, providing a snapshot
    of each showcased project. The section introduces developers to the concept of
    creating reusable Vue.js components for project cards. Code snippets may illustrate
    the structure of a project card component, including dynamic data binding for
    project details.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 项目卡片是 Vue.js 作品集中的基本元素，展示每个项目的概览。此部分向开发者介绍了如何创建可重用的 Vue.js 组件来构建项目卡片。代码片段可能展示了项目卡片组件的结构，包括项目详情的动态数据绑定。
- en: <!-- Example of a Vue.js project card component -->
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- Vue.js 项目卡片组件示例 -->
- en: <template>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div class="project-card">
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: <div class="project-card">
- en: <img :src="project.image" alt="Project Image" />
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: <img :src="project.image" alt="项目图片" />
- en: <h3>{{ project.title }}</h3>
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: <h3>{{ project.title }}</h3>
- en: <p>{{ project.description }}</p>
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ project.description }}</p>
- en: '<router-link :to="{ name: ''projectDetail'', params: { id: project.id } }">Learn
    More</router-link>'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '<router-link :to="{ name: ''projectDetail'', params: { id: project.id } }">了解更多</router-link>'
- en: </div>
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'props: {'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 'props: {'
- en: 'project: {'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 'project: {'
- en: 'type: Object,'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 'type: Object,'
- en: 'required: true,'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 'required: true,'
- en: '},'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Implementing Vue Router for Project Navigation
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 实现 Vue Router 用于项目导航
- en: Effective project navigation is pivotal in a Vue.js portfolio. The section advocates
    for the use of Vue Router to seamlessly navigate between project cards and detailed
    project views. Code examples may demonstrate the setup of Vue Router routes, enabling
    smooth transitions between project listings and detailed project information.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 高效的项目导航在 Vue.js 作品集中至关重要。本节建议使用 Vue Router 实现无缝的项目卡片与详细项目视图之间的导航。代码示例可能演示了 Vue
    Router 路由的设置，确保项目列表和详细项目信息之间的平滑过渡。
- en: // Example of setting up Vue Router for a portfolio
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: // 设置 Vue Router 用于作品集的示例
- en: // src/router/index.js
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: // src/router/index.js
- en: import { createRouter, createWebHistory } from 'vue-router';
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: import { createRouter, createWebHistory } from 'vue-router';
- en: import Home from '../views/Home.vue';
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: import Home from '../views/Home.vue';
- en: import ProjectDetail from '../views/ProjectDetail.vue';
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: import ProjectDetail from '../views/ProjectDetail.vue';
- en: const routes = [
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: const routes = [
- en: '{'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: 'path: ''/'','
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 'path: ''/'','
- en: 'name: ''home'','
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: ''home'','
- en: 'component: Home,'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 'component: Home,'
- en: '},'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '{'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: 'path: ''/project/:id'','
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 'path: ''/project/:id'','
- en: 'name: ''projectDetail'','
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: ''projectDetail'','
- en: 'component: ProjectDetail,'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 'component: ProjectDetail,'
- en: 'props: true,'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 'props: true,'
- en: '},'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '];'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '];'
- en: const router = createRouter({
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: const router = createRouter({
- en: 'history: createWebHistory(),'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 'history: createWebHistory(),'
- en: routes,
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: routes,
- en: '});'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: export default router;
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: export default router;
- en: Adding Interactive Features with Vue.js Transitions
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Vue.js 过渡效果添加交互特性
- en: To enhance the user experience, the section suggests incorporating Vue.js transitions
    for interactive elements in the portfolio. This could include subtle animations
    for project cards, smooth transitions between pages, or interactive hover effects.
    Code snippets may showcase the implementation of Vue.js transitions to add a polished
    and dynamic touch to the portfolio.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 为了增强用户体验，本节建议在作品集中加入 Vue.js 的过渡动画效果，用于交互元素。这可以包括项目卡片的细微动画、页面之间的平滑过渡，或交互式的悬停效果。代码示例可能展示如何实现
    Vue.js 过渡，以便为作品集增添一种精致且动态的效果。
- en: <!-- Example of adding a Vue.js transition to a project card -->
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 添加 Vue.js 过渡到项目卡片的示例 -->
- en: <template>
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <transition name="fade">
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: <transition name="fade">
- en: <div class="project-card" v-if="showCard">
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: <div class="project-card" v-if="showCard">
- en: <!-- Project card content -->
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 项目卡片内容 -->
- en: </div>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </transition>
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: </transition>
- en: </template>
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <style>
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: <style>
- en: .fade-enter-active, .fade-leave-active {
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: .fade-enter-active, .fade-leave-active {
- en: 'transition: opacity 0.5s;'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 'transition: opacity 0.5s;'
- en: '}'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: .fade-enter, .fade-leave-to {
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: .fade-enter, .fade-leave-to {
- en: 'opacity: 0;'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 'opacity: 0;'
- en: '}'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: </style>
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: </style>
- en: 'The "Showcasing Vue.js Projects" section within the "Building a Portfolio with
    Vue.js" module of "Vue.js Essentials: For Responsive Web Development" serves as
    a comprehensive guide for developers seeking to present their Vue.js projects
    effectively. By emphasizing the importance of a well-crafted portfolio, providing
    insights into engaging layout design, introducing Vue.js components for project
    cards, leveraging Vue Router for navigation, and adding interactive features with
    Vue.js transitions, developers can create compelling portfolios that showcase
    their skills and leave a lasting impression on potential collaborators, employers,
    or clients.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在“Vue.js 基础：响应式网页开发”课程的“使用 Vue.js 构建个人作品集”模块中，“展示 Vue.js 项目”一节为开发者提供了如何有效展示
    Vue.js 项目的全面指南。通过强调精心设计的作品集的重要性、提供引人注目的布局设计建议、介绍用于项目卡片的 Vue.js 组件、利用 Vue Router
    进行导航，以及通过 Vue.js 过渡添加交互式功能，开发者可以创建具有吸引力的作品集，展示自己的技能，并给潜在的合作伙伴、雇主或客户留下深刻印象。
- en: Creating a Personal Website with Vue.js
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Vue.js 构建个人网站
- en: 'Within the "Building a Portfolio with Vue.js" module of "Vue.js Essentials:
    For Responsive Web Development," the section titled "Creating a Personal Website
    with Vue.js" delves into the process of crafting a dynamic and responsive personal
    website using Vue.js. This section provides developers with practical insights,
    design considerations, and code examples to showcase their skills and projects
    in an engaging and professional manner.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在“Vue.js 基础：响应式网页开发”课程的“使用 Vue.js 构建个人网站”模块中，本节深入探讨了如何使用 Vue.js 构建一个动态且响应式的个人网站。此部分为开发者提供了实用的见解、设计考量和代码示例，帮助他们以引人入胜和专业的方式展示自己的技能和项目。
- en: Defining the Structure of the Personal Website
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 定义个人网站的结构
- en: The section begins by emphasizing the importance of a well-defined structure
    for a personal website. Developers are encouraged to consider key sections such
    as home, projects, about, and contact. Each section serves a specific purpose,
    allowing visitors to gain a comprehensive understanding of the developer's work,
    skills, and personality. A suggested directory structure may include components
    for each section, ensuring modularity and maintainability.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 该部分首先强调个人网站结构清晰的重要性。鼓励开发者考虑网站的关键部分，如首页、项目、关于和联系方式。每个部分都有其特定的功能，使访问者能够全面了解开发者的工作、技能和个性。建议的目录结构可能包括每个部分的组件，以确保模块化和可维护性。
- en: Example directory structure for a Vue.js personal website
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue.js 个人网站示例目录结构
- en: /personal-website
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: /personal-website
- en: /src
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: /src
- en: /components
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: /components
- en: Home.vue
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: Home.vue
- en: Projects.vue
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: Projects.vue
- en: About.vue
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: About.vue
- en: Contact.vue
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: Contact.vue
- en: /views
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: /views
- en: Home.vue
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Home.vue
- en: Projects.vue
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Projects.vue
- en: About.vue
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: About.vue
- en: Contact.vue
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: Contact.vue
- en: Building the Home Section with Vue.js Components
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Vue.js 组件构建首页部分
- en: The home section serves as the first impression of the personal website, and
    developers are guided on building it using Vue.js components. Code snippets may
    illustrate the creation of a home component, including the integration of dynamic
    content, such as a welcome message and an introduction.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 首页部分作为个人网站的第一印象，指导开发者使用 Vue.js 组件构建。代码示例可能会展示如何创建一个首页组件，并集成动态内容，比如欢迎信息和介绍。
- en: <!-- Example of a Home.vue component for a personal website -->
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 个人网站 Home.vue 组件示例 -->
- en: <template>
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h1>{{ greeting }}</h1>
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: <h1>{{ greeting }}</h1>
- en: <p>{{ introduction }}</p>
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ introduction }}</p>
- en: </div>
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'greeting: ''Welcome to My Portfolio!'','
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 'greeting: ''欢迎来到我的作品集！'','
- en: 'introduction: ''I am a passionate developer...'','
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 'introduction: ''我是一名充满热情的开发者...'','
- en: '};'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Showcasing Projects with Dynamic Project Cards
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 展示动态项目卡片的项目部分
- en: The projects section is a focal point for showcasing a developer's work. The
    section provides guidance on creating dynamic project cards using Vue.js components.
    Developers are encouraged to utilize props to pass project information to the
    project card components, fostering reusability and scalability.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 项目部分是展示开发者作品的重点。该部分提供了如何使用 Vue.js 组件创建动态项目卡片的指导。开发者被鼓励利用 props 将项目信息传递给项目卡片组件，以促进复用性和可扩展性。
- en: <!-- Example of a Projects.vue component showcasing dynamic project cards -->
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- Projects.vue 组件示例，展示动态项目卡片 -->
- en: <template>
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <ProjectCard v-for="project in projects" :key="project.id" :project="project"
    />
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: <ProjectCard v-for="project in projects" :key="project.id" :project="project"
    />
- en: </div>
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: import ProjectCard from '../components/ProjectCard.vue';
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: import ProjectCard from '../components/ProjectCard.vue';
- en: export default {
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'components: {'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 'components: {'
- en: ProjectCard,
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: ProjectCard,
- en: '},'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: data() {
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'projects: ['
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 'projects: ['
- en: // Project data objects
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: // 项目数据对象
- en: '],'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '};'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Crafting an About Section for Personal Storytelling
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 打造个人故事的关于我部分
- en: The about section provides an opportunity for developers to share their personal
    and professional journey. Developers are guided on crafting an about component
    that effectively communicates their story. Code snippets may showcase the use
    of text, images, and other multimedia elements to engage visitors.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 关于我部分为开发者提供了分享个人和职业历程的机会。开发者被引导如何制作一个有效传达个人故事的关于我组件。代码片段展示了如何使用文本、图片和其他多媒体元素来吸引访问者。
- en: <!-- Example of an About.vue component for personal storytelling -->
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 示例：个人故事的 About.vue 组件 -->
- en: <template>
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h2>About Me</h2>
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: <h2>关于我</h2>
- en: <p>{{ personalStory }}</p>
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ personalStory }}</p>
- en: <!-- Other multimedia elements -->
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 其他多媒体元素 -->
- en: </div>
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'personalStory: ''I started my journey as a developer...'','
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 'personalStory: ''我开始我的开发者之旅...'','
- en: '};'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Enabling Contact Interaction with a Vue.js Form
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 启用与 Vue.js 表单的联系互动
- en: The contact section facilitates interaction between the developer and visitors.
    Developers are guided on creating a contact component with a Vue.js form. Code
    examples may demonstrate form validation, submission handling, and the use of
    Vue.js directives to bind form data.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 联系部分促进了开发者与访问者之间的互动。指导开发者如何创建带有 Vue.js 表单的联系组件。代码示例展示了表单验证、提交处理以及使用 Vue.js 指令绑定表单数据。
- en: <!-- Example of a Contact.vue component with a Vue.js form -->
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 示例：带有 Vue.js 表单的 Contact.vue 组件 -->
- en: <template>
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <form @submit.prevent="submitForm">
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: <form @submit.prevent="submitForm">
- en: <label for="name">Name:</label>
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: <label for="name">姓名：</label>
- en: <input type="text" id="name" v-model="name" required />
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: <input type="text" id="name" v-model="name" required />
- en: <!-- Other form fields -->
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 其他表单字段 -->
- en: <button type="submit">Submit</button>
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: <button type="submit">提交</button>
- en: </form>
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: </form>
- en: </div>
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'name: '''','
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 'name: '''','
- en: // Other form fields
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: // 其他表单字段
- en: '};'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'methods: {'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 'methods: {'
- en: submitForm() {
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: submitForm() {
- en: // Form submission logic
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: // 表单提交逻辑
- en: '},'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Ensuring Responsiveness and Cross-Browser Compatibility
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 确保响应式设计和跨浏览器兼容性
- en: The section concludes by emphasizing the importance of ensuring that the personal
    website is responsive and compatible across various browsers. Developers are encouraged
    to leverage Vue.js directives and CSS media queries for responsiveness, and regularly
    test their website on different browsers to provide a seamless experience for
    all visitors.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分强调了确保个人网站具有响应式设计并兼容不同浏览器的重要性。开发者被鼓励利用 Vue.js 指令和 CSS 媒体查询来实现响应式设计，并定期在不同浏览器上测试他们的网站，以提供无缝的体验给所有访问者。
- en: /* Example of a media query for responsiveness in a Vue.js personal website
    */
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: /* 示例：Vue.js 个人网站的响应式媒体查询 */
- en: '@media (max-width: 768px) {'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '@media (max-width: 768px) {'
- en: /* Responsive styles */
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: /* 响应式样式 */
- en: '}'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'The "Creating a Personal Website with Vue.js" section within the "Building
    a Portfolio with Vue.js" module of "Vue.js Essentials: For Responsive Web Development"
    empowers developers to not only showcase their Vue.js skills but also to craft
    a personalized and professional online presence. By defining a clear structure,
    building Vue.js components for each section, showcasing projects dynamically,
    telling a personal story in the about section, enabling interaction through a
    Vue.js form, and ensuring responsiveness and cross-browser compatibility, developers
    can create a compelling personal website that effectively communicates their unique
    identity and capabilities.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '"Vue.js Essentials: For Responsive Web Development"模块中"Building a Portfolio
    with Vue.js"部分的"创建个人网站与Vue.js"章节使开发者不仅能够展示他们的Vue.js技能，还能够打造一个个性化且专业的在线形象。通过定义清晰的结构，构建每个部分的Vue.js组件，动态展示项目，在关于部分讲述个人故事，通过Vue.js表单启用互动，并确保响应式设计和跨浏览器兼容性，开发者可以创建一个引人注目的个人网站，有效传达他们独特的身份和能力。'
- en: Highlighting Skills and Achievements
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突出展示技能与成就
- en: 'The "Building a Portfolio with Vue.js" module in "Vue.js Essentials: For Responsive
    Web Development" delves into a critical aspect of creating an impactful developer
    portfolio with the section titled "Highlighting Skills and Achievements." This
    section serves as a strategic guide for developers to effectively showcase their
    expertise, skills, and notable achievements using Vue.js. It emphasizes the importance
    of clearly communicating one''s technical proficiency and accomplishments to captivate
    potential employers or clients.'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '"Vue.js Essentials: For Responsive Web Development"模块中的"Building a Portfolio
    with Vue.js"深入探讨了创建影响力开发者作品集中的一个关键部分——"突出展示技能与成就"。本节为开发者提供了一份战略指南，帮助他们有效地展示自己的专业知识、技能和显著成就。它强调了清晰地传达个人技术能力和成就的重要性，以吸引潜在的雇主或客户。'
- en: Structuring the Skills Section with Vue.js Components
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vue.js组件构建技能部分
- en: The section begins by emphasizing the need for a dedicated skills section within
    the portfolio. Developers are encouraged to structure this section using Vue.js
    components, enabling a modular and organized approach. Each skill category or
    individual skill can be represented by a Vue.js component, ensuring reusability
    and scalability.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 本节首先强调在个人作品集中需要有一个专门的技能部分。鼓励开发者使用Vue.js组件来构建这一部分，从而实现模块化和有序的结构。每个技能类别或单项技能可以由Vue.js组件表示，确保可重用性和可扩展性。
- en: Example directory structure for Vue.js components in the skills section
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vue.js组件在技能部分的示例目录结构
- en: /skills
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: /skills
- en: /src
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: /src
- en: /components
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: /components
- en: SkillCategory.vue
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: SkillCategory.vue
- en: IndividualSkill.vue
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: IndividualSkill.vue
- en: /views
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: /views
- en: Skills.vue
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: Skills.vue
- en: Dynamic Rendering of Skills with Vue.js Directives
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Vue.js指令动态渲染技能
- en: To ensure flexibility and ease of updating, the section advocates for the dynamic
    rendering of skills using Vue.js directives. Developers can leverage the v-for
    directive to loop through skill categories or individual skills, fetching data
    from a centralized source or API. This approach facilitates efficient updates
    without manual intervention.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保灵活性和便于更新，本节建议使用 Vue.js 指令动态渲染技能。开发人员可以利用 v-for 指令遍历技能类别或单个技能，从集中式数据源或 API
    获取数据。这种方法可以高效地进行更新，无需手动干预。
- en: <!-- Example of a Skills.vue component dynamically rendering skill categories
    -->
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- Skills.vue 组件示例，动态渲染技能类别 -->
- en: <template>
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <SkillCategory v-for="category in skillCategories" :key="category.id" :category="category"
    />
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: <SkillCategory v-for="category in skillCategories" :key="category.id" :category="category"
    />
- en: </div>
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: import SkillCategory from '../components/SkillCategory.vue';
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: import SkillCategory from '../components/SkillCategory.vue';
- en: export default {
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'components: {'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 'components: {'
- en: SkillCategory,
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 技能类别，
- en: '},'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: data() {
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'skillCategories: ['
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 'skillCategories: ['
- en: // Skill category data objects
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: // 技能类别数据对象
- en: '],'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '};'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Detailed Skill Presentation with Vue.js Transitions
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Vue.js 过渡效果的详细技能展示
- en: To enhance the visual appeal of the skills section, developers are advised to
    implement Vue.js transitions. This could involve smooth animations or transitions
    when skills are presented or updated. Code snippets may illustrate the integration
    of Vue.js transitions, adding a polished and dynamic element to the portfolio.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 为增强技能部分的视觉吸引力，建议开发人员实现 Vue.js 过渡效果。这可以涉及在展示或更新技能时使用平滑的动画或过渡效果。代码示例可以说明如何集成 Vue.js
    过渡效果，为作品集增添精致和动态的元素。
- en: <!-- Example of adding a Vue.js transition to skill categories -->
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 添加 Vue.js 过渡效果到技能类别的示例 -->
- en: <template>
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <transition-group name="fade" tag="div">
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: <transition-group name="fade" tag="div">
- en: <SkillCategory v-for="category in skillCategories" :key="category.id" :category="category"
    />
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: <SkillCategory v-for="category in skillCategories" :key="category.id" :category="category"
    />
- en: </transition-group>
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: </transition-group>
- en: </template>
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <style>
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: <style>
- en: .fade-enter-active, .fade-leave-active {
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: .fade-enter-active, .fade-leave-active {
- en: 'transition: opacity 0.5s;'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 'transition: opacity 0.5s;'
- en: '}'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: .fade-enter, .fade-leave-to {
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: .fade-enter, .fade-leave-to {
- en: 'opacity: 0;'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 'opacity: 0;'
- en: '}'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: </style>
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: </style>
- en: Showcasing Achievements through Vue.js Cards
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 Vue.js 卡片展示成就
- en: The achievements section provides an opportunity to highlight significant milestones
    or projects. Developers are guided on creating Vue.js cards to showcase achievements
    effectively. These cards can include project details, key contributions, or notable
    accolades. Vue.js components can be utilized to structure and present these achievement
    cards.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 成就部分提供了一个机会来突出展示重要的里程碑或项目。开发人员可以通过创建 Vue.js 卡片来有效展示成就。这些卡片可以包括项目细节、关键贡献或显著的荣誉。Vue.js
    组件可以用于结构化和展示这些成就卡片。
- en: <!-- Example of an Achievements.vue component showcasing Vue.js achievement
    cards -->
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 展示 Vue.js 成就卡片的 Achievements.vue 组件示例 -->
- en: <template>
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <AchievementCard v-for="achievement in achievements" :key="achievement.id" :achievement="achievement"
    />
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: <AchievementCard v-for="achievement in achievements" :key="achievement.id" :achievement="achievement"
    />
- en: </div>
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: import AchievementCard from '../components/AchievementCard.vue';
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: import AchievementCard from '../components/AchievementCard.vue';
- en: export default {
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'components: {'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 'components: {'
- en: AchievementCard,
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: AchievementCard,
- en: '},'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: data() {
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'achievements: ['
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 'achievements: ['
- en: // Achievement data objects
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: // 成就数据对象
- en: '],'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '};'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Incorporating Vue.js Animations for Achievement Highlights
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Vue.js 动画突出成就
- en: To draw attention to specific achievements, developers are encouraged to incorporate
    Vue.js animations. This could involve highlighting certain cards, adding subtle
    animations, or dynamically emphasizing key achievements. Code snippets may showcase
    the implementation of Vue.js animations for a visually engaging presentation.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 为了吸引注意力，开发者被鼓励将 Vue.js 动画融入其中。这可能包括突出某些卡片、添加细微的动画，或动态地强调关键成就。代码示例展示了如何实现 Vue.js
    动画，以提供视觉上引人入胜的效果。
- en: <!-- Example of adding a Vue.js animation to highlight specific achievement
    cards -->
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 示例：为突出特定成就卡片添加 Vue.js 动画 -->
- en: <template>
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <AchievementCard v-for="achievement in achievements" :key="achievement.id" :achievement="achievement"
    />
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: <AchievementCard v-for="achievement in achievements" :key="achievement.id" :achievement="achievement"
    />
- en: </div>
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <style>
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: <style>
- en: .highlight {
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: .highlight {
- en: 'background-color: yellow;'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 'background-color: yellow;'
- en: '}'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: </style>
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: </style>
- en: <script>
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'methods: {'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 'methods: {'
- en: highlightAchievement(card) {
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: highlightAchievement(card) {
- en: card.highlighted = true;
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: card.highlighted = true;
- en: setTimeout(() => {
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: setTimeout(() => {
- en: card.highlighted = false;
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: card.highlighted = false;
- en: '}, 2000);'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '}, 2000);'
- en: '},'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Responsive Design for Skills and Achievements
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 技能与成就的响应式设计
- en: To ensure a seamless user experience across various devices, the section concludes
    by emphasizing the importance of responsive design. Developers are encouraged
    to leverage Vue.js directives and CSS media queries to create a visually appealing
    and accessible skills and achievements section that adapts to different screen
    sizes.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 为确保在各种设备上的无缝用户体验，本节最后强调了响应式设计的重要性。鼓励开发者利用 Vue.js 指令和 CSS 媒体查询来创建视觉上吸引人且易于访问的技能和成就部分，使其能够适应不同的屏幕尺寸。
- en: /* Example of a media query for responsiveness in a Vue.js skills and achievements
    section */
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: /* 示例：在 Vue.js 技能与成就部分中应用响应式媒体查询 */
- en: '@media (max-width: 768px) {'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '@media (max-width: 768px) {'
- en: /* Responsive styles */
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: /* 响应式样式 */
- en: '}'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'The "Highlighting Skills and Achievements" section within the "Building a Portfolio
    with Vue.js" module of "Vue.js Essentials: For Responsive Web Development" provides
    developers with a comprehensive guide to effectively showcase their skills and
    notable achievements using Vue.js. By structuring the skills section with Vue.js
    components, dynamically rendering skills, incorporating transitions for visual
    appeal, showcasing achievements through Vue.js cards, incorporating animations
    for highlights, and ensuring responsive design, developers can create a compelling
    and impactful skills and achievements showcase in their portfolios.'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '在《Vue.js Essentials: For Responsive Web Development》课程中的“构建 Vue.js 作品集”模块里的“突出技能与成就”部分，为开发者提供了一个全面的指南，帮助他们通过
    Vue.js 有效展示自己的技能和重要成就。通过使用 Vue.js 组件构建技能部分、动态渲染技能、加入过渡效果以提升视觉吸引力、通过 Vue.js 卡片展示成就、为亮点添加动画效果，并确保响应式设计，开发者可以在作品集中创建一个引人注目且富有影响力的技能与成就展示。'
- en: Networking and Job Opportunities
  id: totrans-330
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络建设与工作机会
- en: 'In the "Building a Portfolio with Vue.js" module of "Vue.js Essentials: For
    Responsive Web Development," the section titled "Networking and Job Opportunities"
    addresses a crucial aspect of a developer''s career journey. This section serves
    as a practical guide for leveraging Vue.js in creating opportunities for networking
    and job prospects. It delves into strategies for building a professional network,
    creating online visibility, and utilizing the portfolio effectively to open doors
    to exciting career prospects.'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '在《Vue.js Essentials: For Responsive Web Development》课程中的“构建 Vue.js 作品集”模块里，“网络建设与工作机会”这一部分探讨了开发者职业生涯中的一个关键方面。该部分作为一个实用指南，教导如何利用
    Vue.js 创建网络和工作机会。它深入探讨了建立职业网络、增加在线曝光率，以及如何有效利用作品集为自己打开通往职业前景的大门的策略。'
- en: Integrating Social Media Links with Vue.js Components
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Vue.js 组件集成社交媒体链接
- en: To enhance networking opportunities, the section suggests integrating social
    media links directly into the portfolio. Developers can create Vue.js components
    for social media icons, facilitating seamless interaction between visitors and
    the developer's professional profiles. This ensures that potential employers or
    collaborators can easily connect with the developer across various platforms.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 为了增强网络机会，该部分建议将社交媒体链接直接集成到作品集中。开发者可以创建 Vue.js 组件，用于社交媒体图标，从而促进访问者与开发者的职业资料之间的无缝互动。这确保潜在的雇主或合作者能够轻松地通过各种平台与开发者建立联系。
- en: <!-- Example of a SocialMediaLinks.vue component for integrating social media
    icons -->
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 用于集成社交媒体图标的 SocialMediaLinks.vue 组件示例 -->
- en: <template>
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <a v-for="link in socialMediaLinks" :key="link.id" :href="link.url" target="_blank"
    rel="noopener noreferrer">
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: <a v-for="link in socialMediaLinks" :key="link.id" :href="link.url" target="_blank"
    rel="noopener noreferrer">
- en: <img :src="link.icon" alt="Social Media Icon" />
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: <img :src="link.icon" alt="社交媒体图标" />
- en: </a>
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: </a>
- en: </div>
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'socialMediaLinks: ['
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 'socialMediaLinks: ['
- en: // Social media link data objects
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: // 社交媒体链接数据对象
- en: '],'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '};'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Utilizing Vue.js Directives for Conditional Rendering
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 利用Vue.js指令进行条件渲染
- en: To ensure a clean and uncluttered portfolio, the section recommends using Vue.js
    directives for conditional rendering. This allows developers to display social
    media links only when relevant, such as within the contact or about sections.
    Vue.js directives like v-if or v-show can be employed for seamless and dynamic
    control over the visibility of social media links.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保简洁而不凌乱的作品集，本节建议使用Vue.js指令进行条件渲染。这样，开发者可以仅在相关的情况下显示社交媒体链接，例如在联系方式或关于页面中。像v-if或v-show这样的Vue.js指令可以无缝且动态地控制社交媒体链接的可见性。
- en: <!-- Example of conditional rendering for social media links in a Vue.js template
    -->
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- Vue.js模板中社交媒体链接的条件渲染示例 -->
- en: <template>
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <SocialMediaLinks v-if="showSocialMediaLinks" />
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: <SocialMediaLinks v-if="showSocialMediaLinks" />
- en: </div>
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: import SocialMediaLinks from '../components/SocialMediaLinks.vue';
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 从'../components/SocialMediaLinks.vue'导入SocialMediaLinks；
- en: export default {
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'components: {'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: 'components: {'
- en: SocialMediaLinks,
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: SocialMediaLinks,
- en: '},'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: data() {
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 {
- en: 'showSocialMediaLinks: true, // Dynamically control visibility based on user
    interaction or other conditions'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 'showSocialMediaLinks: true, // 根据用户交互或其他条件动态控制可见性'
- en: '};'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Implementing a Vue.js Contact Form for Networking
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 实现Vue.js联系表单进行网络建立
- en: Networking often involves initiating conversations and collaborations. The section
    guides developers on implementing a Vue.js contact form within the portfolio,
    facilitating seamless communication. Code snippets may showcase the integration
    of form validation, submission handling, and Vue.js directives to enhance the
    user experience.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 网络建立通常涉及发起对话和合作。本节指导开发者如何在作品集中实现Vue.js联系表单，促进无缝的沟通。代码片段可能展示表单验证、提交处理和Vue.js指令的集成，从而提升用户体验。
- en: <!-- Example of a ContactForm.vue component with Vue.js form handling -->
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 使用Vue.js表单处理的ContactForm.vue组件示例 -->
- en: <template>
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <form @submit.prevent="submitForm">
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: <form @submit.prevent="submitForm">
- en: <!-- Form fields -->
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 表单字段 -->
- en: <button type="submit">Connect</button>
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: <button type="submit">连接</button>
- en: </form>
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: </form>
- en: </div>
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 返回 {
- en: // Form data
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: // 表单数据
- en: '};'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'methods: {'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 'methods: {'
- en: submitForm() {
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: submitForm() {
- en: // Form submission logic, e.g., sending an email or triggering an API request
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: // 表单提交逻辑，例如发送电子邮件或触发API请求
- en: '},'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '},'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Showcasing Testimonials with Vue.js Components
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 展示使用Vue.js组件的推荐信
- en: To build credibility and trust, developers are encouraged to showcase testimonials
    from previous clients or collaborators. The section advises developers to create
    Vue.js components for testimonials, allowing for dynamic presentation and easy
    updates. Vue.js directives can be employed for the conditional rendering of testimonials
    based on the availability of feedback.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 为了建立信誉和信任，鼓励开发者展示来自以前客户或合作者的评价。该部分建议开发者创建 Vue.js 组件用于展示评价，从而实现动态展示和轻松更新。可以利用
    Vue.js 指令根据反馈的可用性有条件地渲染评价。
- en: <!-- Example of a Testimonials.vue component showcasing Vue.js testimonial cards
    -->
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 这是一个 Testimonials.vue 组件的示例，展示了 Vue.js 评价卡片 -->
- en: <template>
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <TestimonialCard v-for="testimonial in testimonials" :key="testimonial.id" :testimonial="testimonial"
    />
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: <TestimonialCard v-for="testimonial in testimonials" :key="testimonial.id" :testimonial="testimonial"
    />
- en: </div>
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: import TestimonialCard from '../components/TestimonialCard.vue';
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: import TestimonialCard from '../components/TestimonialCard.vue';
- en: export default {
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'components: {'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 'components: {'
- en: TestimonialCard,
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: TestimonialCard,
- en: '},'
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: data() {
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'testimonials: ['
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 'testimonials: ['
- en: // Testimonial data objects
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: // 评价数据对象
- en: '],'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '],'
- en: '};'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: Optimizing SEO for Increased Visibility
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 优化 SEO 以提高可见性
- en: To enhance online visibility and improve the chances of job opportunities, the
    section emphasizes the importance of optimizing the portfolio for search engines.
    Developers can leverage Vue.js to implement SEO best practices, including meta
    tags, structured data, and other relevant optimizations.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提升在线可见性并增加工作机会，强调优化作品集以适应搜索引擎的重要性。开发者可以利用 Vue.js 实现 SEO 最佳实践，包括元标签、结构化数据和其他相关优化。
- en: <!-- Example of using Vue.js to dynamically update meta tags for SEO -->
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 这是一个使用 Vue.js 动态更新 SEO 元标签的示例 -->
- en: <template>
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <head>
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: <head>
- en: <meta property="og:title" :content="pageTitle" />
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: <meta property="og:title" :content="pageTitle" />
- en: <!-- Other meta tags -->
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 其他元标签 -->
- en: </head>
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: </head>
- en: <!-- Portfolio content -->
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 作品集内容 -->
- en: </div>
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'pageTitle: ''John Doe - Vue.js Developer'', // Dynamically update based on
    portfolio content'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 'pageTitle: ''John Doe - Vue.js 开发者'', // 根据作品集内容动态更新'
- en: '};'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: '};'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: 'The "Networking and Job Opportunities" section within the "Building a Portfolio
    with Vue.js" module of "Vue.js Essentials: For Responsive Web Development" provides
    developers with actionable strategies to leverage Vue.js for networking and career
    growth. By integrating social media links with Vue.js components, utilizing Vue.js
    directives for conditional rendering, implementing a Vue.js contact form, showcasing
    testimonials dynamically, and optimizing SEO for increased visibility, developers
    can effectively harness the power of Vue.js to expand their professional network
    and open doors to exciting job opportunities in the competitive tech industry..'
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: '《Vue.js Essentials: For Responsive Web Development》课程中“构建 Vue.js 项目组合”模块的“网络拓展与职业机会”部分，为开发者提供了可操作的策略，帮助他们利用
    Vue.js 进行社交网络拓展和职业发展。通过将社交媒体链接与 Vue.js 组件集成、利用 Vue.js 指令进行条件渲染、实现 Vue.js 联系表单、动态展示推荐语，并优化
    SEO 提高可见性，开发者能够有效利用 Vue.js 的强大功能，扩大专业网络，并在竞争激烈的技术行业中打开通往激动人心的工作机会的大门。'
