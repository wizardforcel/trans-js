- en: '| Recipe 73 | Converting Plain Text into HTML-Ready Markup |'
  id: totrans-0
  prefs: []
  type: TYPE_TB
  zh: '| 食谱 73 | 将纯文本转换为 HTML 准备好的标记语言 |'
- en: Task
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 任务
- en: 'Imagine you intend to display the text entered by users on a web page. A frustrating
    aspect of web programming is the lack of compatibility between HTML and plain
    text, despite their frequent interchangeable use. While people may enter information
    in plain text format in the text areas of forms, it’s likely that you’d want to
    display the same information in HTML format. To illustrate, consider this example,
    where a user has entered a question on a forum page:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你打算在网页上显示用户输入的文本。网页编程中一个让人头痛的问题是 HTML 与纯文本之间缺乏兼容性，尽管它们经常可以互换使用。虽然人们可能会在表单的文本框中输入纯文本格式的信息，但你很可能希望以
    HTML 格式显示相同的信息。举个例子，假设用户在论坛页面上输入了一个问题：
- en: '|   | Hey guys, |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '|   | 嘿，大家， |'
- en: '|   |  |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | I need your help with something urgent. My cat, Mr. Whiskers, has been
    acting |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '|   | 我需要你的帮助，有件紧急的事情。我的猫，胡须先生，最近一直表现得很奇怪。 |'
- en: '|   | super weird lately. He won''t stop meowing, he keeps knocking down my
    plants, |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '|   | 最近他的表现很奇怪。一直不停地喵喵叫，还一直推倒我的植物， |'
- en: '|   | and to top it off, he''s been stealing my socks. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '|   | 更糟糕的是，他还偷我的袜子。 |'
- en: '|   |  |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | Do you know of any good cat therapists that you can recommend? |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '|   | 你知道有什么好的猫咪治疗师可以推荐吗？ |'
- en: '|   |  |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | Thanks |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '|   | 谢谢 |'
- en: 'If you don’t include <br> or <p> tags to indicate line breaks in the markup,
    the resulting appearance when loaded into a web browser will be like this:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有在标记中包含 <br> 或 <p> 标签来表示换行，加载到网页浏览器中的显示效果将是这样的：
- en: '|   | Hey guys, I need your help with something urgent. My cat, Mr. Whiskers,
    |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '|   | 嘿，大家，我需要你们的帮助，有件紧急的事情。我的猫，胡须先生， |'
- en: '|   | has been acting super weird lately. He won''t stop meowing, he keeps
    knocking |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '|   | 最近他表现得非常奇怪。一直不停地喵喵叫，还一直推倒我的植物， |'
- en: '|   | down my plants, and to top it off, he''s been stealing my socks. Do you
    know |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '|   | 我的猫一直很奇怪，最近不停地喵喵叫，还一直推倒我的植物，更糟糕的是，他还偷我的袜子。你知道 |'
- en: '|   | of any good cat therapists that you can recommend? Thanks |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '|   | 有什么好的猫咪治疗师可以推荐吗？谢谢 |'
- en: What you need is a solution that adds relevant HTML tags to paragraphs.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要的是一个添加相关 HTML 标签来处理段落的解决方案。
- en: Solution
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Search for newline characters in the supplied text and replace them with HTML
    tags:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在提供的文本中搜索换行符，并用 HTML 标签替换它们：
- en: '[part_3/converting_text_to_html/text_to_html_ex1.js](http://media.pragprog.com/titles/fkjavascript/code/part_3/converting_text_to_html/text_to_html_ex1.js)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[part_3/converting_text_to_html/text_to_html_ex1.js](http://media.pragprog.com/titles/fkjavascript/code/part_3/converting_text_to_html/text_to_html_ex1.js)'
- en: '| 1:  | **function** convertTextToHTML(str) { |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: 1:  | **function** convertTextToHTML(str) { |
- en: '| -  |  |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| -  |  |'
- en: '| -  | *// Replace newline characters with <br>* |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| -  | *// 用 <br> 替换换行符* |'
- en: '| -  | str = str.replace(*/**\r\n**&#124;**\n**/g*, *"<br>"*); |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| -  | str = str.replace(*/**\r\n**&#124;**\n**/g*, *"<br>"*); |'
- en: '| 5:  |  |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: 5:  |  |
- en: '| -  | *// Replace two consecutive <br> with </p><p>* |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| -  | *// 用 </p><p> 替换连续的两个 <br>* |'
- en: '| -  | str = str.replace(*/<br>**\s***<br>/g*, *"</p><p>"*); |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| -  | str = str.replace(*/<br>**\s***<br>/g*, *"</p><p>"*); |'
- en: '| -  |  |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| -  |  |'
- en: '| -  | *// Enclose the entire string in <p></p>* |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| -  | *// 将整个字符串包裹在 <p></p> 中* |'
- en: '| 10:  | str = *`<p>*${str}*</p>`*; |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| 10:  | str = *`<p>*${str}*</p>`*; |'
- en: '| -  | **return** str; |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| -  | **返回** str; |'
- en: '| -  | } |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| -  | } |'
- en: '| -  |  |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| -  |  |'
- en: '| -  | **const** str = |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| -  | **const** str = |'
- en: '| 15:  | *`Hey guys,* |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 15:  | *`嘿，大家，* |'
- en: '| -  |  |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| -  |  |'
- en: '| -  | *I need your help with something urgent. My cat, Mr. Whiskers, has been
    acting* |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| -  | *我有件紧急的事需要你们帮忙。我的猫，Whiskers，最近一直表现得很奇怪，* |'
- en: '| -  | *super weird lately. He won''t stop meowing, he keeps knocking down
    my plants,* |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| -  | *最近超级奇怪。他不停地喵喵叫，还是一直把我的植物弄倒，* |'
- en: '| -  | *and to top it off, he''s been stealing my socks.* |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| -  | *而且最糟糕的是，他一直在偷我的袜子。* |'
- en: '| 20:  |  |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 20:  |  |'
- en: '| -  | *Do you know of any good cat therapists that you can recommend?* |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| -  | *你知道有什么好的猫咪治疗师可以推荐吗？* |'
- en: '| -  |  |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| -  |  |'
- en: '| -  | *Thanks* |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| -  | *谢谢* |'
- en: '| -  | *`*; |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| -  | *`*; |'
- en: '| 25:  |  |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 25:  |  |'
- en: '| -  | convertTextToHTML(str); |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| -  | convertTextToHTML(str); |'
- en: '| -  | *// → <p>Hey guys, </p><p>I need your help with something urgent. My
    cat, Mr.* |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| -  | *// → <p>嘿，大家，</p><p>我有件紧急的事需要你们帮忙。我的猫，* |'
- en: '| -  | *// Whiskers, has been acting <br>super weird lately. He won''t stop
    meowing,* |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| -  | *// Whiskers 最近超级奇怪。他不停地喵喵叫，* |'
- en: '| -  | *// he keeps knocking down my plants, <br>and to top it off, he''s been*
    |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| -  | *// 他不停地把我的植物弄倒，<br>而且最糟糕的是，他一直在* |'
- en: '| 30:  | *// stealing my socks. </p><p>Do you know of any good cat therapists
    that you* |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 30:  | *// 偷我的袜子。 </p><p>你知道有什么好的猫咪治疗师可以推荐吗？* |'
- en: '| -  | *// can recommend?</p><p>Thanks<br></p>"* |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| -  | *// 可以推荐吗？</p><p>谢谢<br></p>"* |'
- en: Now, with the HTML tags added, the text will be displayed properly in the browser.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，添加了 HTML 标签后，文本将在浏览器中正确显示。
- en: Discussion
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: Reusing the text provided by the user without sanitizing it is unwise because
    it leaves the system vulnerable to XSS attacks. But, for this recipe, let’s overlook
    this concern and assume that the input is safe to use (if you want to learn how
    to protect against XSS attacks, check out the link in the footnote.^([[36]](f_0087.xhtml#FOOTNOTE-36)))
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 重新使用用户提供的文本而不进行清理是不明智的，因为这样会让系统容易受到 XSS 攻击。但对于这个示例，我们忽略这个问题，假设输入是安全的（如果你想了解如何防止
    XSS 攻击，查看脚注中的链接^([[36]](f_0087.xhtml#FOOTNOTE-36))）。
- en: We first use the regex /\r\n|\n/g to find newline characters that are used in
    Microsoft Windows/DOS (\r\n) or Unix and Unix-like systems (\n). And we replace
    them with <br>.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先使用正则表达式 /\r\n|\n/g 来查找在 Microsoft Windows/DOS (\r\n) 或 Unix 和类 Unix 系统 (\n)
    中使用的换行符。然后将它们替换为 <br>。
- en: In order to format paragraphs in HTML, it’s necessary to enclose them within
    <p></p> tags. One way to achieve this is to identify any instance of two consecutive
    line breaks and replace them with </p><p> (Line 7).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在 HTML 中格式化段落，必须将它们包含在 <p></p> 标签中。实现这一点的一种方法是找到两个连续换行符的实例，并用 </p><p> 替换它们（第
    7 行）。
- en: Finally, we wrap the complete string with <p></p> tags and then return the resulting
    string. Before using this function to convert text to HTML, you may want to replace
    &, <, >, ", and ’ characters with HTML entities to prevent browsers from interpreting
    HTML tags entered by users (see Recipe 8, [*Converting HTML Markup to HTML Entities
    with replaceAll()*](f_0018.xhtml#rcp.entities)).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们用<p></p>标签包裹完整的字符串，然后返回生成的字符串。在使用此函数将文本转换为HTML之前，你可能需要将&、<、>、"和’字符替换为HTML实体，以防止浏览器将用户输入的HTML标签误解为实际的HTML标签（参见食谱8，[*使用replaceAll()将HTML标记转换为HTML实体*](f_0018.xhtml#rcp.entities)）。
