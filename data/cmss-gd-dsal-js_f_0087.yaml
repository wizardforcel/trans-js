- en: Chapter 9
  id: totrans-0
  prefs:
  - PREF_H1
  stylish: true
  type: TYPE_NORMAL
  zh: 第9章
- en: Crafting Elegant Code with `Stacks` and `Queues`
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 用`栈`和`队列`编写优雅代码
- en: Until now, our discussion around data structures has focused primarily on how
    they affect the performance of various operations. However, having a variety of
    data structures in your programming arsenal also allows you to create code that
    is simpler and easier to read.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 到目前为止，我们对数据结构的讨论主要集中在它们如何影响各种操作的性能。然而，拥有多种数据结构作为编程工具也使你能够创建更简单、更易读的代码。
- en: 'In this chapter, you’re going to discover two new data structures: `stacks`
    and `queues`. The truth is that these two structures are not entirely new. They’re
    simply `arrays` with restrictions. Yet these restrictions are exactly what make
    them so elegant.'
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在这一章中，你将发现两种新的数据结构：`栈`和`队列`。事实上，这两种结构并不是完全新的。它们只是具有限制的`数组`。然而，这些限制正是它们如此优雅的原因。
- en: More specifically, `stacks` and `queues` are elegant tools for handling temporary
    data. From operating system architecture to printing jobs to traversing data,
    `stacks` and `queues` serve as temporary containers that can be used to form beautiful
    algorithms.
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 更具体地说，`栈`和`队列`是处理临时数据的优雅工具。从操作系统架构到打印任务再到遍历数据，`栈`和`队列`作为临时容器，可以用来形成优美的算法。
- en: Think of temporary data like the food orders in a diner. What each customer
    orders is important until the meal is made and delivered; then you throw the order
    slip away. You don’t need to keep that information around. Temporary data is information
    that doesn’t have any meaning after it’s processed, so you can throw it away once
    you’re done with it.
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 将临时数据想象成餐厅里的食品订单。每位顾客所点的餐是重要的，直到餐点制作并送达；然后你就可以把订单单据扔掉。你不需要保留那些信息。临时数据是指在处理后没有任何意义的信息，所以一旦完成处理就可以将其丢弃。
- en: '`Stacks` and `queues` handle this kind of temporary data but have a special
    focus on the order in which the data is handled, as you’ll now learn.'
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`栈`和`队列`处理这种临时数据，但它们特别关注数据处理的顺序，正如你现在将要学习的那样。'
