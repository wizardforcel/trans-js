- en: Wrapping Up
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
  zh: 总结
- en: The binary search tree is a powerful node-based data structure that provides
    order maintenance, while also offering fast search, insertion, and deletion. It’s
    more complex than its linked list cousin, but it offers tremendous value.
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 二叉搜索树是一种强大的基于节点的数据结构，它提供了顺序维护，同时也支持快速搜索、插入和删除。它比其链表表亲要复杂，但提供了巨大的价值。
- en: However, the binary search tree is just one type of tree. Trees are of many
    different kinds, and each type brings unique advantages to specialized situations.
    In the next chapter, we’re going to discover another tree that will bring unique
    speed advantages to a specific, but common, scenario.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 然而，二叉搜索树只是树的一种类型。树有许多不同种类，每种类型在特定情况下都带来独特的优势。在下一章中，我们将发现另一种树，它将在一个特定但常见的场景中提供独特的速度优势。
