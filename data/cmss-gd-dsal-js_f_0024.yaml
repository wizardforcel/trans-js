- en: Chapter 2
  id: totrans-0
  prefs:
  - PREF_H1
  stylish: true
  type: TYPE_NORMAL
  zh: 第二章
- en: Why Algorithms Matter
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 为什么算法很重要
- en: In the previous chapter, we took a look at our first data structures and saw
    how choosing the right data structure can affect the performance of our code.
    Even two data structures that seem so similar, such as the `array` and the `set`,
    can have very different levels of efficiency.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在上一章中，我们看到了第一个数据结构，并了解了选择合适的数据结构如何影响我们代码的性能。即使是看似如此相似的两个数据结构，如`array`和`set`，也可能具有非常不同的效率水平。
- en: 'In this chapter, we’re going to discover that even if we decide on a particular
    data structure, another major factor can affect the efficiency of our code: the
    proper selection of which algorithm to use.'
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在本章中，我们将发现，即使我们决定使用特定的数据结构，另一个主要因素也会影响我们代码的效率：选择使用哪种算法的恰当性。
- en: Although the word `algorithm` sounds like something complex, it really isn’t.
    An algorithm is simply a set of instructions for completing a specific task.
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 尽管“算法”这个词听起来很复杂，但实际上并不是。算法只是完成特定任务的一组指令。
- en: 'Even a process as simple as preparing a bowl of cereal is technically an algorithm,
    as it involves following a defined set of steps to achieve the task at hand. The
    cereal-preparation algorithm follows these four steps (for me, at least):'
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 即使是准备一碗谷物这样简单的过程，从技术上讲也是一个算法，因为它涉及遵循一套定义好的步骤来完成手头的任务。谷物准备算法遵循这四个步骤（至少对我来说）：
- en: Grab a bowl.
  id: totrans-6
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 拿一个碗。
- en: Pour cereal into the bowl.
  id: totrans-7
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 将谷物倒入碗中。
- en: Pour milk into the bowl.
  id: totrans-8
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 将牛奶倒入碗中。
- en: Dip a spoon into the bowl.
  id: totrans-9
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 用勺子舀碗里的东西。
- en: By following these steps in this particular order, we can now enjoy our breakfast.
  id: totrans-10
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 按照特定的顺序遵循这些步骤后，我们现在可以享用早餐。
- en: When applied to computing, an `algorithm` refers to the set of instructions
    given to a computer to achieve a particular task. When we write any code, then,
    we’re creating algorithms for the computer to follow and execute.
  id: totrans-11
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在计算中，`算法`是指给计算机的一组指令，以完成特定任务。因此，当我们编写任何代码时，我们实际上是在为计算机创建算法以跟随和执行。
- en: We can also express algorithms using plain English to set out the details of
    the instructions we plan on providing the computer. Throughout this book, I’ll
    use both plain English as well as code to show how various algorithms work.
  id: totrans-12
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 我们也可以用简单的英语来表达算法，以阐明我们打算提供给计算机的指令细节。在整本书中，我将使用简单的英语和代码来展示各种算法的工作原理。
- en: Sometimes, it’s possible to have two different algorithms that accomplish the
    same task. We saw an example of this at the beginning of Chapter 1, [​*Why Data
    Structures Matter*​](f_0013.xhtml#chp.understanding_data_structures), where we
    had two different approaches for printing out even numbers. In that case, one
    algorithm had twice as many steps as the other.
  id: totrans-13
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 有时，可能会有两个不同的算法完成相同的任务。我们在第一章的开头看到了一个例子，[​*为什么数据结构很重要*​](f_0013.xhtml#chp.understanding_data_structures)，我们有两种不同的方法来打印偶数。在那种情况下，一个算法的步骤是另一个的两倍。
- en: In this chapter, we’ll encounter another two algorithms that solve the same
    problem. In this case, though, one algorithm will be faster than the other by
    orders of magnitude.
  id: totrans-14
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在本章中，我们将遇到另外两个解决相同问题的算法。不过，在这种情况下，一个算法的速度将比另一个快几个数量级。
- en: To explore these new algorithms, we’ll need to take a look at a new data structure.
  id: totrans-15
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 为了探索这些新的算法，我们需要看看一种新的数据结构。
