- en: '`The Array`: `The Foundational Data Structure`'
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
  zh: '`数组`: `基础数据结构`'
- en: The array is one of the most basic data structures in computer science. I assume
    you’ve worked with arrays before, so you’re aware that an array is a list of data
    elements. The array is versatile and can serve as a useful tool in many situations,
    but let’s take a look at one quick example.
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 数组是计算机科学中最基本的数据结构之一。我假设你以前使用过数组，因此你知道数组是数据元素的列表。数组是多功能的，可以在许多情况下作为有用的工具，但让我们来看一个快速示例。
- en: 'If you’re looking at the source code for an application that allows users to
    create and use shopping lists for the grocery store, you might find code like
    this:'
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 如果你查看一个允许用户创建和使用超市购物清单的应用程序的源代码，你可能会发现这样的代码：
- en: '| ​  | `array = ["apples", "bananas", "cucumbers", "dates", "elderberries"]`
    |'
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `array = ["apples", "bananas", "cucumbers", "dates", "elderberries"]`
    |'
- en: This array happens to contain five strings, each representing something that
    I might buy at the supermarket. (You’ve got to try elderberries.)
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 这个数组恰好包含五个字符串，每个字符串代表我可能在超市购买的东西。（你一定要试试接骨木莓。）
- en: Arrays come with their own technical jargon.
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 数组有其自己的专业术语。
- en: The length of an array (sometimes also called size) is how many data elements
    the array holds. Our grocery list array has a length of `5` since it contains
    five values.
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 数组的长度（有时也称为大小）是数组所包含的数据元素的数量。我们的购物清单数组长度为`5`，因为它包含五个值。
- en: The index of an array is the number that identifies where a piece of data lives
    inside the array.
  id: totrans-7
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 数组的索引是识别数据在数组内部位置的数字。
- en: 'In most programming languages, we begin counting the index at `0`。 So for our
    example array, `"apples"` is at index `0`，and `"elderberries"` is at index `4`，like
    this:'
  id: totrans-8
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在大多数编程语言中，我们从`0`开始计数索引。因此，在我们的示例数组中，`"apples"`位于索引`0`，而`"elderberries"`位于索引`4`，如下所示：
- en: '`![images/understanding_arrays/array_1.png](images/understanding_arrays/array_1.png)`'
  id: totrans-9
  prefs: []
  stylish: true
  type: TYPE_IMG
  zh: '`![images/understanding_arrays/array_1.png](images/understanding_arrays/array_1.png)`'
- en: '`Data Structure Operations`'
  id: totrans-10
  prefs:
  - PREF_H3
  stylish: true
  type: TYPE_NORMAL
  zh: '`数据结构操作`'
- en: To understand the performance of any data structure—such as the array—we need
    to analyze the common ways our code might interact with that data structure.
  id: totrans-11
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 为了理解任何数据结构（如数组）的性能，我们需要分析代码与该数据结构交互的常见方式。
- en: 'Many data structures are used in four basic ways, which we refer to as operations.
    These operations are:'
  id: totrans-12
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 许多数据结构有四种基本用法，我们称之为操作。这些操作是：
- en: '`Read`: `Reading` refers to looking something up at a particular spot within
    the data structure. With an array, this means looking up a value at a particular
    index. For example, looking up which grocery item is located at index `2` would
    be reading from the array.'
  id: totrans-13
  prefs:
  - PREF_UL
  stylish: true
  type: TYPE_NORMAL
  zh: '`读取`: `阅读`是指在数据结构的特定位置查找某些内容。在数组中，这意味着在特定索引处查找一个值。例如，查找位于索引`2`的杂货项目就是从数组中读取。'
- en: '`Search`: `Searching` refers to looking for a particular value within a data
    structure. With an array, this means looking to see if a particular value exists
    within the array and, if so, at which index. For example, looking up the index
    of `"dates"` in our grocery list would be searching the array.'
  id: totrans-14
  prefs:
  - PREF_UL
  stylish: true
  type: TYPE_NORMAL
  zh: '`搜索`: `搜索`是指在数据结构中查找特定值。在数组中，这意味着查看特定值是否存在于数组中，以及如果存在，它位于哪个索引。例如，查找我们购物清单中`"dates"`的索引就是在搜索数组。'
- en: '`Insert`: `Insertion` refers to adding a new value to our data structure. With
    an array, this means adding a new value to an additional slot within the array.
    If we were to add `"figs"` to our shopping list, we’d be inserting a new value
    into the array.'
  id: totrans-15
  prefs:
  - PREF_UL
  stylish: true
  type: TYPE_NORMAL
  zh: '`插入`: `插入`是指向我们的数据结构添加一个新值。在数组中，这意味着在数组中添加一个新值到额外的槽位。如果我们要将`"figs"`添加到购物清单中，我们就是在数组中插入一个新值。'
- en: '`Delete`: `Deletion` refers to removing a value from our data structure. With
    an array, this means removing one of the values from the array. For example, if
    we removed `"bananas"` from our grocery list, this value would be deleted from
    the array.'
  id: totrans-16
  prefs:
  - PREF_UL
  stylish: true
  type: TYPE_NORMAL
  zh: '`删除`: `删除`是指从我们的数据结构中移除一个值。在数组中，这意味着从数组中删除其中一个值。例如，如果我们从购物清单中移除`"bananas"`，这个值将从数组中删除。'
- en: In this chapter, we’ll analyze how fast each of these operations is when applied
    to an array.
  id: totrans-17
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在本章中，我们将分析这些操作在应用于数组时的速度。
