- en: Chapter 1
  id: totrans-0
  prefs:
  - PREF_H1
  stylish: true
  type: TYPE_NORMAL
  zh: 第1章
- en: Why Data Structures Matter
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 数据结构的重要性
- en: 'When people first learn to code, their focus is—and should be—on getting their
    code to run properly. Their code is measured using one simple metric: does the
    code actually work?'
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 当人们第一次学习编程时，他们的关注点是——而且应该是——让他们的代码正确运行。他们的代码用一个简单的标准来衡量：代码是否真的能工作？
- en: As software engineers gain more experience, though, they begin to learn about
    additional layers and nuances regarding the quality of their code. They learn
    that there can be two snippets of code that both accomplish the same task, but
    that one snippet is better than the other.
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 随着软件工程师经验的增长，他们开始学习更多关于代码质量的层面和细微差别。他们了解到，可能有两个代码片段都完成相同的任务，但其中一个比另一个更好。
- en: There are numerous measures of code quality. One important measure is code maintainability.
    Maintainability of code involves aspects such as the readability, organization,
    and modularity of one’s code.
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 代码质量有许多衡量标准。一个重要的衡量标准是代码的可维护性。代码的可维护性涉及代码的可读性、组织性和模块化等方面。
- en: However, another aspect of high-quality code is code efficiency. For example,
    you can have two code snippets that both achieve the same goal, but one runs faster
    than the other.
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 然而，高质量代码的另一个方面是代码效率。例如，你可以有两个代码片段，它们都实现相同的目标，但一个比另一个运行得更快。
- en: 'Take a look at these two functions, both of which print all the even numbers
    from `2` to `100`:'
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 看看这两个函数，它们都打印从 `2` 到 `100` 的所有偶数：
- en: '| ​  | `function`​ `printNumbersVersionOne()` { |'
  id: totrans-7
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `function`​ `printNumbersVersionOne()` { |'
- en: '| ​  | `let`​ `number = 2;` |'
  id: totrans-8
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `let`​ `number = 2;` |'
- en: '| ​  |  |'
  id: totrans-9
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `while`​ (`number <= 100`) { |'
  id: totrans-10
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `while`​ (`number <= 100`) { |'
- en: '| ​  | `// If number is even, print it:`​ |'
  id: totrans-11
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `// 如果数字是偶数，打印它:`​ |'
- en: '| ​  | `if`​ (`number % 2 === 0`) { |'
  id: totrans-12
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `if`​ (`number % 2 === 0`) { |'
- en: '| ​  | `console.log(number);` |'
  id: totrans-13
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `console.log(number);` |'
- en: '| ​  | } |'
  id: totrans-14
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  |  |'
  id: totrans-15
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `number += 1;` |'
  id: totrans-16
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `number += 1;` |'
- en: '| ​  | } |'
  id: totrans-17
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  | } |'
  id: totrans-18
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  | `function`​ `printNumbersVersionTwo()` { |'
  id: totrans-19
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `function`​ `printNumbersVersionTwo()` { |'
- en: '| ​  | `let`​ `number = 2;` |'
  id: totrans-20
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `let`​ `number = 2;` |'
- en: '| ​  |  |'
  id: totrans-21
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `while`​ (`number <= 100`) { |'
  id: totrans-22
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `while`​ (`number <= 100`) { |'
- en: '| ​  | `console.log(number);` |'
  id: totrans-23
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `console.log(number);` |'
- en: '| ​  |  |'
  id: totrans-24
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `// Increase number by 2, which, by definition, is the next even number:`​
    |'
  id: totrans-25
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `// 将数字增加 2，这在定义上是下一个偶数:`​ |'
- en: '| ​  | `number += 2;` |'
  id: totrans-26
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `number += 2;` |'
- en: '| ​  | } |'
  id: totrans-27
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  | } |'
  id: totrans-28
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: Which of these functions do you think runs faster?
  id: totrans-29
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 你认为这两个函数中哪个运行得更快？
- en: If you said `Version 2`，you’re thinking along the right lines. `Version 1` ends
    up looping `100` times, while `Version 2` only loops `50` times. The first version,
    then, takes twice as many steps as the second version.
  id: totrans-30
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 如果你说是 `版本 2`，那么你在正确的思路上。`版本 1` 最终循环了 `100` 次，而 `版本 2` 只循环了 `50` 次。因此，第一个版本的步骤是第二个版本的两倍。
- en: This book is about writing efficient code. Having the ability to write code
    that runs quickly is an important aspect of becoming a better software developer.
  id: totrans-31
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 这本书是关于编写高效代码的。能够编写快速运行的代码是成为更优秀软件开发者的重要方面。
- en: The first step in writing fast code is to understand what data structures are
    and how different data structures can affect the speed of our code. So let’s dive
    in.
  id: totrans-32
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 编写快速代码的第一步是理解数据结构是什么，以及不同的数据结构如何影响我们代码的速度。所以让我们深入探讨一下。
