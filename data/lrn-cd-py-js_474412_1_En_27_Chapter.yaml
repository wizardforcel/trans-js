- en: © The Author(s), under exclusive license to Springer Fachmedien Wiesbaden GmbH,
    part of Springer Nature 2024J. L. ZuckarelliLearn coding with Python and JavaScript
    [https://doi.org/10.1007/978-3-658-42912-6_27](https://doi.org/10.1007/978-3-658-42912-6_27)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © 作者，独家授权给 Springer Fachmedien Wiesbaden GmbH，Springer Nature 旗下公司 2024 J. L.
    Zuckarelli《Python 和 JavaScript 编程学习》[https://doi.org/10.1007/978-3-658-42912-6_27](https://doi.org/10.1007/978-3-658-42912-6_27)
- en: 27. Introduction
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 27. 引言
- en: Joachim L. Zuckarelli^([1](#Aff2)  )(1)München, GermanyOverview
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Joachim L. Zuckarelli^([1](#Aff2) )(1)德国慕尼黑 概述
- en: In this part, we will now turn to JavaScript, the second programming language
    we will deal with in this book. Again, as with Python, we will follow the 9-question
    scheme to get to grips with the language. In this first chapter of this part,
    we will get a brief overview of the origins and application areas of JavaScript.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将开始学习 JavaScript，这是本书中我们将要处理的第二种编程语言。与 Python 一样，我们将采用9个问题的框架来掌握这门语言。在本部分的第一章中，我们将简要回顾
    JavaScript 的起源和应用领域。
- en: JavaScript is the language of the web. Probably no other language is used more
    often when it comes to programming web frontends, i.e. modern web user interfaces,
    than JavaScript. Hardly any site with a high number of visitors can do without
    JavaScript these days. When you see forms on web pages that validate your input,
    for example, checking whether the email address or phone number you entered is
    in a valid format, JavaScript is usually involved. If you see suggestions for
    possible search terms after entering just a few letters in a search field, JavaScript
    is usually doing the job in the background. If a web page works with animations,
    for example showing or hiding elements depending on your clicks or mouse movements,
    or highlighting them, there is often a JavaScript program in the background. No
    wonder, then, that JavaScript appears among the most popular programming languages
    on virtually all rankings (see also ► Chap. [6](474412_1_En_6_Chapter.xhtml)).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 是 Web 的语言。可能没有其他语言比 JavaScript 更广泛地用于编写 Web 前端，即现代网页用户界面。如今，几乎没有一个访问量大的站点能在没有
    JavaScript 的情况下运行。当你在网页上看到验证输入的表单时，比如检查你输入的电子邮件地址或电话号码是否符合有效格式时，JavaScript 通常在其中发挥作用。如果在搜索框中输入几个字母后，你看到可能的搜索建议，JavaScript
    通常也在后台完成这一任务。如果一个网页中有动画效果，比如根据点击或鼠标移动的情况显示或隐藏元素，或者高亮显示它们，后台通常也运行着 JavaScript 程序。因此，JavaScript
    经常出现在几乎所有的编程语言排行榜上，也就不足为奇了（参见 ► 第[6章](474412_1_En_6_Chapter.xhtml)）。
- en: 'JavaScript has—contrary to what you might think when reading it for the first
    time—little to do with another popular, but much harder to learn programming language:
    Java. There are only a few syntactic similarities between the two namesakes.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 与你第一次阅读时可能想象的情况相反，和另一种流行的、但学习难度更大的编程语言 Java 的关系不大。两者之间只有少数的语法相似之处。
- en: The beginnings of the language go back to the time when a program called *Netscape
    Navigator* was the market-dominating browser. In 1995, shortly before the “browser
    war” between Netscape and Microsoft broke out for dominance in what was then considered
    a key market, Netscape released a language called *LiveScript*. It had been developed
    by *Brendan Eich* and was renamed *JavaScript* a little later in the course of
    a cooperation with Sun Microsystems. It is not entirely clear whether the naming
    had to do with the fact that JavaScript was actually supposed to work with small
    Java applications (also called Java applets) on web pages, or whether the naming
    was mainly done for marketing reasons, in order to bask a little in the glow of
    Java’s growing popularity; what is certain, however, is that JavaScript quickly
    rose to become the dominant programming language of the Web and drove competitors
    such as Microsoft’s VBScript from the market.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这门语言的起源可以追溯到 *Netscape Navigator* 浏览器主导市场的时期。1995年，正值 Netscape 和 Microsoft 在浏览器市场上展开“浏览器大战”前夕，Netscape
    发布了一种名为 *LiveScript* 的语言。它由 *Brendan Eich* 开发，并在与 Sun Microsystems 合作的过程中被更名为
    *JavaScript*。关于这个名字是否与 JavaScript 实际上是为了在网页上与小型 Java 应用程序（也叫 Java applets）配合使用有关，或者是否主要是出于市场营销原因，借助
    Java 日益增长的流行度，这一点仍不完全清楚。不过可以确定的是，JavaScript 很快成为了 Web 上主流的编程语言，甚至把微软的 VBScript
    等竞争对手推出了市场。
- en: Netscape made an early effort to have the language standardized and called the
    standardization organization Ecma (whose name at that time was still a capitalized
    acronym for *European Computer Manufacturers Association*). As a result, they
    published the ECMA-262 standard, which defines a language called *ECMAScript*.
    From then on, JavaScript was considered an implementation of ECMAScript, alongside
    other languages that also implement the standard (supplemented by their own specifics),
    such as Adobe’s *ActionScript* or Microsoft’s *TypeScript*.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Netscape早期曾努力推动该语言的标准化，并将标准化组织命名为Ecma（当时其名称仍是*欧洲计算机制造商协会*的首字母缩写）。因此，他们发布了ECMA-262标准，定义了一种叫做*ECMAScript*的语言。从那时起，JavaScript被视为ECMAScript的一个实现，和其他也实现该标准的语言一起（并根据它们自己的特点进行补充），如Adobe的*ActionScript*或Microsoft的*TypeScript*。
- en: In the case of JavaScript, however, the discussion about standardization strictly
    speaking leads in the wrong direction, because JavaScript is anything but standardized.
    This is mainly because there are several popular implementations of JavaScript.
    JavaScript programs run in the web browser, so they are downloaded by it and then
    interpreted. Each browser that supports JavaScript brings its own interpreter,
    a JavaScript engine, and these engines certainly differ between vendors. Microsoft’s
    JavaScript dialect called *JScript*, which follows the ECMA-262 standard but brings
    several specifics, therefore works differently in nuances than, say, the JavaScript
    variant interpreted by Google’s *Chrome* browser. At worst, these differences
    can mean that certain features of a web page work in one browser but not another.
    The devil is in the details. Of course, we will hardly encounter the devil in
    the following chapters, since we are dealing with language elements that are ECMA-262
    compliant and are supported practically everywhere JavaScript is interpreted.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在JavaScript的情况下，关于标准化的讨论严格来说是朝着错误的方向走的，因为JavaScript根本不是标准化的。这主要是因为有多种流行的JavaScript实现。JavaScript程序运行在网页浏览器中，因此它们会被浏览器下载并解释。每个支持JavaScript的浏览器都会带有自己的解释器，一个JavaScript引擎，这些引擎在不同厂商之间肯定会有所不同。微软的JavaScript方言叫做*JScript*，它遵循ECMA-262标准，但带有一些特定内容，因此在细节上与比如Google的*Chrome*浏览器解释的JavaScript变体有所不同。最糟糕的情况是，这些差异可能导致某些网页功能在一个浏览器中正常工作，而在另一个浏览器中无法正常工作。问题的关键在于细节。当然，在接下来的章节中，我们几乎不会遇到这些问题，因为我们将讨论的是符合ECMA-262标准并且在几乎所有支持JavaScript的地方都能被解释的语言元素。
- en: JavaScript is a language that is normally interpreted by the web browser, and
    thus on the *client side*. In a sense, it is the counterpart to *PHP*, which runs
    on the web server and can modify the web page before it is even sent to the browser
    (for example, by reading data records, such as product information, from a database
    and displaying them on the web page). However, there are runtime environments
    such as *Node.JS* that provide a JavaScript implementation with which JavaScript
    can also be executed on the server side.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript是一种通常由网页浏览器解释的语言，因此是*客户端*语言。从某种意义上讲，它是*PHP*的对立面，PHP运行在网页服务器上，可以在网页发送到浏览器之前修改网页内容（例如，通过从数据库读取数据记录，如产品信息，并将其显示在网页上）。然而，也有一些运行时环境，比如*Node.JS*，提供了一个JavaScript的实现，使得JavaScript也可以在服务器端执行。
- en: In the following Chapters, however, we will concentrate on the classic variant,
    namely JavaScript, which runs in a web page and thus makes the web page dynamic.
    As in the Python part of this book, we again follow the nine major questions to
    get an overview of the language.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在接下来的章节中，我们将专注于经典的变体，即JavaScript，它运行在网页中，从而使网页变得动态。正如本书中Python部分的做法，我们再次按照九个主要问题来概述这门语言。
