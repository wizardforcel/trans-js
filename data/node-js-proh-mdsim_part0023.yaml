- en: 'Chapter 3: JavaScript Control Flow Statements'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3章：JavaScript 控制流语句
- en: In Chapter 2, we learned about JavaScript syntax, operators, and expressions.
    Now, let's explore control flow statements, which allow us to control the flow
    of execution in our code. Control flow statements enable us to make decisions
    and repeat actions based on specific conditions. Understanding control flow is
    essential for creating dynamic and interactive JavaScript programs.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在第2章中，我们学习了JavaScript的语法、运算符和表达式。现在，让我们来探索控制流语句，这些语句可以让我们控制代码的执行流程。控制流语句使我们能够基于特定条件做出决策并重复执行操作。理解控制流对于创建动态和交互式的JavaScript程序至关重要。
- en: 3.1 Conditional Statements
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.1 条件语句
- en: Conditional statements are used to execute different blocks of code based on
    specific conditions. They allow us to control the flow of execution by making
    decisions. JavaScript provides several conditional statements, including the `if`
    statement, the `if...else` statement, and the `switch` statement.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 条件语句用于根据特定条件执行不同的代码块。它们通过做出决策来控制执行流程。JavaScript提供了几种条件语句，包括`if`语句、`if...else`语句和`switch`语句。
- en: 3.1.1 The if Statement
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.1.1 `if`语句
- en: 'The `if` statement is the simplest conditional statement. It executes a block
    of code if a given condition is true. Here''s the basic syntax of an `if` statement:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`if`语句是最简单的条件语句。如果给定的条件为真，它会执行一段代码块。以下是`if`语句的基本语法：'
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let''s see an example:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个例子：
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In this example, if the `age` variable is greater than or equal to 18, the message
    "You are eligible to vote" will be displayed.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，如果`age`变量大于或等于18，将显示消息"你有资格投票"。
- en: 3.1.2 The if...else Statement
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.1.2 `if...else`语句
- en: 'The `if...else` statement allows us to execute one block of code if a condition
    is true and another block of code if the condition is false. Here''s the syntax:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`if...else`语句允许我们在条件为真时执行一段代码块，在条件为假时执行另一段代码块。以下是语法：'
- en: '[PRE2]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Let''s modify our previous example to include an `if...else` statement:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们修改之前的例子，加入`if...else`语句：
- en: '[PRE3]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In this case, if the `age` variable is less than 18, the message "You are not
    eligible to vote yet" will be displayed.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，如果`age`变量小于18，将显示消息"你还没有资格投票"。
- en: 3.1.3 The switch Statement
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.1.3 `switch`语句
- en: 'The `switch` statement is used to perform different actions based on different
    conditions. It evaluates an expression and executes the corresponding case that
    matches the value of the expression. Here''s the syntax:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`switch`语句用于根据不同的条件执行不同的操作。它会评估一个表达式，并执行与该表达式值匹配的相应案例。以下是语法：'
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let''s see an example:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个例子：
- en: '[PRE5]javascript'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE5]javascript'
- en: for (initialization; condition; update) {
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: for (initialization; condition; update) {
- en: // code to be executed in each iteration
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: // 每次迭代时执行的代码
- en: '}'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE6]javascript'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE6]javascript'
- en: for (var i = 1; i <= 5; i++) {
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: for (var i = 1; i <= 5; i++) {
- en: console.log(i);
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(i);
- en: '}'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE7]javascript'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE7]javascript'
- en: while (condition) {
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: while (condition) {
- en: // code to be executed in each iteration
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: // 每次迭代时执行的代码
- en: '}'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE8]javascript'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE8]javascript'
- en: var i = 1;
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: var i = 1;
- en: while (i <= 5) {
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: while (i <= 5) {
- en: console.log(i);
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(i);
- en: i++;
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: i++;
- en: '}'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '[PRE9]javascript'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE9]javascript'
- en: do {
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: do {
- en: // code to be executed in each iteration
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: // 每次迭代时执行的代码
- en: '} while (condition);'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '} 当 (condition);'
- en: '[PRE10]javascript'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE10]javascript'
- en: var i = 1;
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: var i = 1;
- en: do {
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: do {
- en: console.log(i);
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: console.log(i);
- en: i++;
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: i++;
- en: '} while (i <= 5);'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '} 当 (i <= 5);'
- en: '```'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: In this example, the loop will iterate five times, just like the previous examples.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，循环将执行五次，就像之前的例子一样。
- en: 3.3 Conclusion
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 3.3 结论
- en: In this chapter, we explored JavaScript control flow statements, including conditional
    statements and looping statements. We learned how to make decisions using `if`
    and `switch` statements and how to repeat code using `for`, `while`, and `do...while`
    loops. Understanding control flow is essential for creating dynamic and interactive
    JavaScript programs.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了 JavaScript 控制流语句，包括条件语句和循环语句。我们学习了如何使用 `if` 和 `switch` 语句做出决策，以及如何使用
    `for`、`while` 和 `do...while` 循环重复代码。理解控制流对于创建动态和互动的 JavaScript 程序至关重要。
- en: In the next chapter, we will dive into JavaScript functions, which allow us
    to organize code into reusable blocks and perform specific tasks. Get ready to
    learn how to write efficient and modular JavaScript code!
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将深入探讨 JavaScript 函数，它们使我们能够将代码组织成可重用的模块并执行特定任务。准备好学习如何编写高效且模块化的 JavaScript
    代码吧！
