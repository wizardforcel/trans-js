- en: Average Celsius Reading
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
  zh: 平均摄氏读数
- en: Here’s another example that involves mean averages. Let’s say we’re building
    weather-forecasting software. To determine the temperature of a city, we take
    temperature readings from many thermometers across the city, and we calculate
    the mean average of those temperatures.
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 这是另一个涉及平均值的例子。假设我们正在构建天气预报软件。为了确定一个城市的温度，我们从城市各地的多个温度计获取温度读数，并计算这些温度的平均值。
- en: We’d also like to display the temperatures in both Fahrenheit and Celsius, but
    our readings are initially only provided to us in Fahrenheit.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 我们还想同时以华氏度和摄氏度显示温度，但我们的读数最初仅以华氏度提供给我们。
- en: 'To get the average Celsius temperature, our algorithm does two things: first,
    it converts all the readings from Fahrenheit to Celsius. Then it calculates the
    mean average of all the Celsius numbers.'
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 为了获得平均摄氏温度，我们的算法做了两件事：首先，它将所有读数从华氏度转换为摄氏度。然后，它计算所有摄氏数字的平均值。
- en: Below is some code that accomplishes this. What is its Big O?
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 以下是实现这一目标的一些代码。它的Big O是什么？
- en: '| ​  | `function` averageCelsius(fahrenheitReadings) { |'
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `function` averageCelsius(fahrenheitReadings) { |'
- en: '| ​  | `if` (fahrenheitReadings.length === 0) { `return` `null`; } |'
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `if` (fahrenheitReadings.length === 0) { `return` `null`; } |'
- en: '| ​  |  |'
  id: totrans-7
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `const` celsiusNumbers = []; |'
  id: totrans-8
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `const` celsiusNumbers = []; |'
- en: '| ​  |  |'
  id: totrans-9
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `// Convert each reading to Celsius and append to array:` |'
  id: totrans-10
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `// 将每个读数转换为摄氏度并附加到数组中:` |'
- en: '| ​  | `for` (`const` fahrenheitReading `of` fahrenheitReadings) { |'
  id: totrans-11
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `for` (`const` fahrenheitReading `of` fahrenheitReadings) { |'
- en: '| ​  | `const` celsiusConversion = (fahrenheitReading - 32) / 1.8; |'
  id: totrans-12
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `const` celsiusConversion = (fahrenheitReading - 32) / 1.8; |'
- en: '| ​  | `celsiusNumbers.push(celsiusConversion);` |'
  id: totrans-13
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `celsiusNumbers.push(celsiusConversion);` |'
- en: '| ​  | } |'
  id: totrans-14
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  |  |'
  id: totrans-15
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `// Calculate average:` |'
  id: totrans-16
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `// 计算平均值:` |'
- en: '| ​  | `let` sum = 0; |'
  id: totrans-17
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `let` sum = 0; |'
- en: '| ​  |  |'
  id: totrans-18
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `for` (`const` celsiusNumber `of` celsiusNumbers) { |'
  id: totrans-19
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `for` (`const` celsiusNumber `of` celsiusNumbers) { |'
- en: '| ​  | `sum += celsiusNumber;` |'
  id: totrans-20
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `sum += celsiusNumber;` |'
- en: '| ​  | } |'
  id: totrans-21
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  |  |'
  id: totrans-22
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `return` Math.floor(sum / celsiusNumbers.length); |'
  id: totrans-23
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` Math.floor(sum / celsiusNumbers.length); |'
- en: '| ​  | } |'
  id: totrans-24
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: First, we can say that N is the number of fahrenheitReadings passed into our
    method.
  id: totrans-25
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 首先，我们可以说N是传递给我们方法的fahrenheitReadings的数量。
- en: Inside the method, we run two loops. The first converts the readings to Celsius,
    and the second sums all the Celsius numbers. Since we have two loops that each
    iterate over all N elements, we have N + N, which is 2N (plus a few constant steps).
    Because Big O notation drops the constants, this gets reduced to O(N).
  id: totrans-26
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在方法内部，我们运行两个循环。第一个将读数转换为摄氏度，第二个对所有摄氏数字进行求和。由于我们有两个循环，每个循环都迭代所有N个元素，我们得到了N +
    N，即2N（再加上一些常数步骤）。因为Big O符号忽略常数，所以这被简化为O(N)。
- en: Don’t get thrown off by the fact that in the earlier word builder example, two
    loops led to an efficiency of O(N²). There, the loops were nested, which led to
    N steps multiplied by N steps. In our case, however, we simply have two loops,
    one after the other. This is N steps plus N steps (2N), which is a mere O(N).
  id: totrans-27
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 不要被之前的单词构建示例中的两个循环导致的O(N²)效率所困扰。在那里，循环是嵌套的，这导致N步乘以N步。然而，在我们的案例中，我们只是简单地有两个循环，一个接一个。这是N步加N步（2N），这只是O(N)。
