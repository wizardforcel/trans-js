- en: '| Recipe 11 | Generating HTML Tables from an Array of Objects |'
  id: totrans-0
  prefs: []
  type: TYPE_TB
  zh: '| 食谱 11 | 从对象数组生成 HTML 表格 |'
- en: Task
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 任务
- en: 'Suppose your task is to generate reports of data that are stored in an array
    of objects like the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你的任务是生成存储在对象数组中的数据报告，如下所示：
- en: '|   | const data = [ |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '|   | const data = [ |'
- en: '|   | {quarter: "Q1 FY22", revenue: 45962, netIncome: 20820, eps: 2.71}, |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '|   | {quarter: "Q1 FY22", revenue: 45962, netIncome: 20820, eps: 2.71}, |'
- en: '|   | {quarter: "Q2 FY22", revenue: 44845, netIncome: 20610, eps: 2.71}, |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '|   | {quarter: "Q2 FY22", revenue: 44845, netIncome: 20610, eps: 2.71}, |'
- en: '|   | {quarter: "Q3 FY22", revenue: 46151, netIncome: 16027, eps: 2.03}, |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '|   | {quarter: "Q3 FY22", revenue: 46151, netIncome: 16027, eps: 2.03}, |'
- en: '|   | {quarter: "Q4 FY22", revenue: 46822, netIncome: 16244, eps: 2.11}, |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '|   | {quarter: "Q4 FY22", revenue: 46822, netIncome: 16244, eps: 2.11}, |'
- en: '|   | {quarter: "Q1 FY23", revenue: 45215, netIncome: 20256, eps: 2.64} |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '|   | {quarter: "Q1 FY23", revenue: 45215, netIncome: 20256, eps: 2.64} |'
- en: '|   | ]; |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '|   | ]; |'
- en: In the previous recipe, you created a table using an array of arrays. But, for
    this recipe, the data is stored in an array of objects. This means that you need
    to use a slightly different approach to generate a table.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的食谱中，你使用了一个数组的数组来创建表格。但是，在这个食谱中，数据是存储在一个对象数组中的。这意味着你需要使用稍微不同的方法来生成表格。
- en: Solution
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Use the following function:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下函数：
- en: '[part_1/generating_html_table_v2/html_table_v2_ex1.js](http://media.pragprog.com/titles/fkjavascript/code/part_1/generating_html_table_v2/html_table_v2_ex1.js)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[part_1/generating_html_table_v2/html_table_v2_ex1.js](http://media.pragprog.com/titles/fkjavascript/code/part_1/generating_html_table_v2/html_table_v2_ex1.js)'
- en: '|   | **const** data = [ |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** data = [ |'
- en: '|   | {quarter: *"Q1 FY22"*, revenue: 45962, netIncome: 20820, eps: 2.71},
    |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '|   | {quarter: *"Q1 FY22"*, revenue: 45962, netIncome: 20820, eps: 2.71},
    |'
- en: '|   | {quarter: *"Q2 FY22"*, revenue: 44845, netIncome: 20610, eps: 2.71},
    |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '|   | {quarter: *"Q2 FY22"*, revenue: 44845, netIncome: 20610, eps: 2.71},
    |'
- en: '|   | {quarter: *"Q3 FY22"*, revenue: 46151, netIncome: 16027, eps: 2.03},
    |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '|   | {quarter: *"Q3 FY22"*, revenue: 46151, netIncome: 16027, eps: 2.03},
    |'
- en: '|   | {quarter: *"Q4 FY22"*, revenue: 46822, netIncome: 16244, eps: 2.11},
    |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '|   | {quarter: *"Q4 FY22"*, revenue: 46822, netIncome: 16244, eps: 2.11},
    |'
- en: '|   | {quarter: *"Q1 FY23"*, revenue: 45215, netIncome: 20256, eps: 2.64} |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '|   | {quarter: *"Q1 FY23"*, revenue: 45215, netIncome: 20256, eps: 2.64} |'
- en: '|   | ]; |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '|   | ]; |'
- en: '|   |  |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | **const** headers = [ |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** headers = [ |'
- en: '|   | *"Quarter"*, |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '|   | *"季度"*, |'
- en: '|   | *"Revenue (in millions of US dollars)"*, |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '|   | *"收入（以百万美元计）"*, |'
- en: '|   | *"Net Income (in millions of US dollars)"*, |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '|   | *"净收入（以百万美元计）"*, |'
- en: '|   | *"Earnings per Share (EPS)"* |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '|   | *"每股收益（EPS）"* |'
- en: '|   | ]; |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '|   | ]; |'
- en: '|   |  |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | **function** createTable(data, headers) { |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '|   | **function** createTable(data, headers) { |'
- en: '|   | **const** table = document.createElement(*"table"*); |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** table = document.createElement(*"table"*); |'
- en: '|   | **const** thead = table.createTHead(); |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** thead = table.createTHead(); |'
- en: '|   | **const** tbody = table.createTBody(); |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** tbody = table.createTBody(); |'
- en: '|   | **const** headerRow = thead.insertRow(); |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** headerRow = thead.insertRow(); |'
- en: '|   |  |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | *// Create table head* |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '|   | *// 创建表头* |'
- en: '|   | headers.forEach(header => { |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '|   | headers.forEach(header => { |'
- en: '|   | **const** th = document.createElement(*"th"*); |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** th = document.createElement(*"th"*); |'
- en: '|   | th.innerText = header; |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '|   | th.innerText = header; |'
- en: '|   | headerRow.appendChild(th); |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '|   | headerRow.appendChild(th); |'
- en: '|   | }); |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '|   | }); |'
- en: '|   |  |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | *// Create table body* |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '|   | *// 创建表格主体* |'
- en: '|   | data.forEach(data => { |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '|   | data.forEach(data => { |'
- en: '|   | **const** row = tbody.insertRow(); |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** row = tbody.insertRow(); |'
- en: '|   | Object.values(data).forEach(value => { |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '|   | Object.values(data).forEach(value => { |'
- en: '|   | **const** cell = row.insertCell(); |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** cell = row.insertCell(); |'
- en: '|   | cell.innerText = value; |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '|   | cell.innerText = value; |'
- en: '|   | }); |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '|   | }); |'
- en: '|   | }); |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '|   | }); |'
- en: '|   |  |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | document.body.appendChild(table); |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '|   | document.body.appendChild(table); |'
- en: '|   | } |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '|   | } |'
- en: '|   |  |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | createTable(data, headers); |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '|   | createTable(data, headers); |'
- en: When we call this function with the data array as the argument, it generates
    an HTML table displaying the company’s financial performance data. The output
    will look like the [table](#fig.part1.generating_html_table_v2) after applying
    some basic styling.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将数据数组作为参数调用此函数时，它会生成一个显示公司财务业绩数据的 HTML 表格。输出将类似于应用了一些基本样式后的[表格](#fig.part1.generating_html_table_v2)。
- en: '![images/generating_html_table_v2.png](images/generating_html_table_v2.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![images/generating_html_table_v2.png](images/generating_html_table_v2.png)'
- en: Discussion
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: This recipe is similar to the previous one except that the array items are objects,
    with each object having properties such as revenue, netIncome, and eps. In this
    recipe, we also define a separate array containing the column headers for the
    table that we’ll be creating.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方法与之前的类似，只不过数组项是对象，每个对象都有如收入、净利润和每股收益等属性。在这个方法中，我们还定义了一个单独的数组，包含了我们将要创建的表格的列标题。
- en: First, we create a table header (thead) and a table body (tbody) for the table.
    We then create a header row (headerRow) within the header and populate it with
    the headers from the headers array.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们为表格创建一个表头（thead）和一个表体（tbody）。然后，我们在表头中创建一个标题行（headerRow），并用 headers 数组中的标题填充它。
- en: For each header in the array, we create a th element using the createElement()
    method, set its content to the header string using the innerText property, and
    append it to the header row using the appendChild() method.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数组中的每个标题，我们使用 createElement() 方法创建一个 th 元素，将其内容设置为 header 字符串，并使用 appendChild()
    方法将其添加到标题行中。
- en: After creating the header row, we loop through each object in the data array
    and create a new row in the table body for each object. Within each row, we loop
    through each property of the object and create a new cell in the row for each
    property value.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 创建标题行后，我们遍历数据数组中的每个对象，并为每个对象在表格主体中创建一个新行。在每一行中，我们遍历对象的每个属性，并为每个属性值在该行中创建一个新单元格。
- en: Finally, we append the table element to the HTML body element. You should modify
    this line to append the data to the element you want.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将表格元素添加到 HTML 的 body 元素中。你应该修改这一行，将数据附加到你希望的元素中。
