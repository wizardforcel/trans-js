- en: 练习
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
- en: 以下练习为您提供了优化最佳和最坏情况场景的实践机会。这些练习的解决方案在章节 [*Chapter 6*](f_0211.xhtml#optimizing.for.optimistic.scenarios.solutions)
    中找到。
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 使用`Big O`符号来描述一个算法的效率，该算法需要`3N² + 2N + 1`步。
  id: totrans-2
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
- en: 使用`Big O`符号来描述一个算法的效率，该算法需要`N + log N`步。
  id: totrans-3
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
- en: 以下函数检查一个数字数组是否包含一对和为10的两个数字。
  id: totrans-4
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
- en: '| ​  | ​`function`​ `twoSum`(`array`) { |'
  id: totrans-5
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | ​`for`​ (​`const`​ [indexI, i] ​`of`​ `array.entries()`) { |'
  id: totrans-6
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | ​`for`​ (​`const`​ [indexJ, j] ​`of`​ `array.entries()`) { |'
  id: totrans-7
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | ​`if`​ ((indexI !== indexJ) && (i + j === 10)) { |'
  id: totrans-8
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | ​`return`​ ​`true`; |'
  id: totrans-9
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | } |'
  id: totrans-10
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | } |'
  id: totrans-11
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | } |'
  id: totrans-12
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  |  |'
  id: totrans-13
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | ​`return`​ ​`false`; |'
  id: totrans-14
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | } |'
  id: totrans-15
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: 最佳、平均和最坏情况场景是什么？然后，用`Big O`符号表达最坏情况场景。
  id: totrans-16
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_NORMAL
- en: 以下函数返回字符串中是否存在大写字母“X”。
  id: totrans-17
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
- en: '| ​  | ​`function`​ `containsX`(`string`) { |'
  id: totrans-18
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | ​`let`​ `foundX` = ​`false`; |'
  id: totrans-19
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  |  |'
  id: totrans-20
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | ​`for`​ (​`const`​ ​`char`​ ​`of`​ `string`) { |'
  id: totrans-21
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | ​`if`​ (`char` === `''X''`) { `foundX` = ​`true`; } |'
  id: totrans-22
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | } |'
  id: totrans-23
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | ​`return`​ `foundX`; |'
  id: totrans-24
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: '| ​  | } |'
  id: totrans-25
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
- en: 这个函数的时间复杂度用`Big O`符号表示是什么？
  id: totrans-26
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_NORMAL
- en: 然后，修改代码以提高算法在最佳和平均情况场景下的效率。
  id: totrans-27
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_NORMAL
- en: 版权所有 © 2024, The Pragmatic Bookshelf.
  id: totrans-28
  prefs: []
  stylish: true
  type: TYPE_NORMAL
