- en: Wrapping Up
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
  zh: 总结
- en: Analyzing the number of steps an operation takes is the heart of understanding
    the performance of data structures. Choosing the right data structure for your
    program can spell the difference between bearing a heavy load versus collapsing
    under it. In this chapter, you’ve learned to use this analysis to weigh whether
    an `array` or a `set` might be the appropriate choice for a given application.
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 分析一个操作所需的步骤数是理解数据结构性能的核心。为你的程序选择合适的数据结构可能意味着承受重负与崩溃之间的区别。在本章中，你已经学会了使用这种分析来判断在特定应用中选择`数组`还是`集合`可能更合适。
- en: Now that you’ve begun to learn how to think about the time complexity of data
    structures, we can use the same analysis to compare competing algorithms (even
    within the same data structure) to ensure the ultimate speed and performance of
    our code. And that’s exactly what the next chapter is about.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 现在你已经开始学习如何思考数据结构的时间复杂度，我们可以使用相同的分析来比较竞争算法（即使在同一数据结构内），以确保我们代码的最终速度和性能。这正是下一章的内容。
