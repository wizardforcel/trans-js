["```jsjavascript\n\n// Example 1: Syntax error\n\nconsole.log(\"Hello, World!\";\n\n```", "```jsjavascript\n\n// Example 2: Runtime error (division by zero)\n\nconst result = 10 / 0;\n\nconsole.log(result);\n\n```", "```jsjavascript\n\n// Example 3: Logical error\n\nfunction calculateArea(width, height) {\n\nreturn width * width; // Incorrect formula for area calculation\n\n}\n\nconst area = calculateArea(5, 10);\n\nconsole.log(area); // Output: 25 (Incorrect result)\n\n```", "```jsjavascript\n\n// Example 4: Using try...catch\n\ntry {\n\n// Code that may throw an error\n\nconst result = 10 / 0;\n\nconsole.log(result);\n\n} catch (error) {\n\n// Code to handle the error\n\nconsole.log(\"An error occurred:\", error.message);\n\n}\n\n```", "```jsjavascript\n\n// Example 5: Throwing a custom error\n\nfunction divideNumbers(a, b) {\n\nif (b === 0) {\n\nthrow new Error(\"Division by zero is not allowed.\");\n\n}\n\nreturn a / b;\n\n}\n\ntry {\n\nconst result = divideNumbers(10, 0);\n\nconsole.log(\"Result:\", result);\n\n} catch (error) {\n\nconsole.log(\"An error occurred:\", error.message);\n\n}\n\n```", "```jsjavascript\n\n// Example 6: Using console.log() for debugging\n\nfunction calculateArea(width, height) {\n\nconst area = width * height;\n\nconsole.log(\"Area:\", area); // Debugging message\n\nreturn area;\n\n}\n\nconst result = calculateArea(5, 10);\n\nconsole.log(\"Result:\", result);\n\n```", "```jsjavascript\n\n// Example 7: Using breakpoints for debugging\n\nfunction calculateArea(width, height) {\n\nconst area = width * height; // Set a breakpoint here\n\nreturn area;\n\n}\n\nconst result = calculateArea(5, 10);\n\nconsole.log(\"Result:\", result);\n\n```", "```jsjavascript\n\n// Example 8: Using debugger statement for debugging\n\nfunction calculateArea(width, height) {\n\nconst area = width * height;\n\ndebugger; // Execution will pause here if developer tools are open\n\nreturn area;\n\n}\n\nconst result = calculateArea(5, 10);\n\nconsole.log(\"Result:\", result);\n\n```"]