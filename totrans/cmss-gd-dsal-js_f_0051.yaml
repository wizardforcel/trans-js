- en: The Efficiency of Selection Sort
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Selection Sort contains two types of steps: comparisons and swaps. We compare
    each value with the lowest number we’ve encountered in each pass-through, and
    we swap the lowest number into its correct position.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Looking back at our example array that contains five elements, we had to make
    a total of 10 comparisons. Let’s break it down in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Pass-Through # | # of Comparisons |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | 4 comparisons |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 3 comparisons |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | 2 comparisons |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | 1 comparison |'
  prefs: []
  type: TYPE_TB
- en: That’s a grand total of 4 + 3 + 2 + 1 = 10 comparisons.
  prefs: []
  type: TYPE_NORMAL
- en: To put it in a way that works for arrays of all sizes, we’d say that for N elements,
    we make (N - 1) + (N - 2) + (N - 3) … + 1 comparisons.
  prefs: []
  type: TYPE_NORMAL
- en: As for swaps, though, we only need to make a maximum of one swap per pass-through.
    This is because in each pass-through, we make either one or zero swaps, depending
    on whether the lowest number of that pass-through is already in the correct position.
    Contrast this with Bubble Sort, where in a worst-case scenario we have to make
    a swap for each and every comparison.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a side-by-side comparison of Bubble Sort and Selection Sort:'
  prefs: []
  type: TYPE_NORMAL
- en: '| N Elements | Max # of Steps in Bubble Sort | Max # of Steps in Selection
    Sort |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | 20 | 14 (10 comparisons + 4 swaps) |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | 90 | 54 (45 comparisons + 9 swaps) |'
  prefs: []
  type: TYPE_TB
- en: '| 20 | 380 | 209 (190 comparisons + 19 swaps) |'
  prefs: []
  type: TYPE_TB
- en: '| 40 | 1560 | 819 (780 comparisons + 39 swaps) |'
  prefs: []
  type: TYPE_TB
- en: '| 80 | 6320 | 3239 (3160 comparisons + 79 swaps) |'
  prefs: []
  type: TYPE_TB
- en: From this comparison, it’s clear Selection Sort takes about half the number
    of steps Bubble Sort does, indicating that Selection Sort is twice as fast.
  prefs: []
  type: TYPE_NORMAL
