- en: Queues in Action
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
  zh: 队列在实际应用中
- en: Queues are common in many applications, ranging from printing jobs to background
    workers in web applications.
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '队列在许多应用中很常见，从打印作业到Web应用中的后台工作程序。 '
- en: Let’s say we’re programming a simple JavaScript interface for a printer that
    can accept printing jobs from various computers across a network. We want to make
    sure we print each document in the order in which it was received.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 假设我们正在为打印机编程一个简单的JavaScript接口，该打印机可以接受来自网络上各种计算机的打印作业。我们希望确保按接收顺序打印每个文档。
- en: 'This code uses our implementation of the Queue class from earlier:'
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 这段代码使用了我们之前实现的队列类：
- en: '| ​  | `import` Queue `from` `(''./queue.js'')`; |'
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `import` Queue `from` `(''./queue.js'')`; |'
- en: '| ​  |  |'
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `class` PrintManager { |'
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `class` PrintManager { |'
- en: '| ​  | `constructor`() { |'
  id: totrans-7
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `constructor`() { |'
- en: '| ​  | `this`.queue = `new` Queue(); |'
  id: totrans-8
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `this`.queue = `new` Queue(); |'
- en: '| ​  | `}` |'
  id: totrans-9
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `}` |'
- en: '| ​  |  |'
  id: totrans-10
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `queuePrintJob(document) {` |'
  id: totrans-11
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `queuePrintJob(document) {` |'
- en: '| ​  | `this`.queue.enqueue(document); |'
  id: totrans-12
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `this`.queue.enqueue(document); |'
- en: '| ​  | `}` |'
  id: totrans-13
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `}` |'
- en: '| ​  |  |'
  id: totrans-14
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `run() {` |'
  id: totrans-15
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `run() {` |'
- en: '| ​  | `while` (`this`.queue.read()) { |'
  id: totrans-16
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `while` (`this`.queue.read()) { |'
- en: '| ​  | `this`.printDocument(`this`.queue.dequeue()); |'
  id: totrans-17
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `this`.printDocument(`this`.queue.dequeue()); |'
- en: '| ​  | `}` |'
  id: totrans-18
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `}` |'
- en: '| ​  | `}` |'
  id: totrans-19
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `}` |'
- en: '| ​  |  |'
  id: totrans-20
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `printDocument(document) {` |'
  id: totrans-21
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `printDocument(document) {` |'
- en: '| ​  | `// Code to run the actual printer goes here.` |'
  id: totrans-22
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `// 这里是运行实际打印机的代码。` |'
- en: '| ​  | `// For demo purposes, we''ll print to the terminal:` |'
  id: totrans-23
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `// 为了演示，我们将打印到终端：` |'
- en: '| ​  | `console.log(document);` |'
  id: totrans-24
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `console.log(document);` |'
- en: '| ​  | `}` |'
  id: totrans-25
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `}` |'
- en: '| ​  | `}` |'
  id: totrans-26
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `}` |'
- en: 'We can then utilize this class as follows:'
  id: totrans-27
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 然后我们可以像下面这样使用这个类：
- en: '| ​  | `const` printManager = `new` PrintManager(); |'
  id: totrans-28
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `const` printManager = `new` PrintManager(); |'
- en: '| ​  | printManager.queuePrintJob(`''First Document''`); |'
  id: totrans-29
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | printManager.queuePrintJob(`''第一个文档''`); |'
- en: '| ​  | printManager.queuePrintJob(`''Second Document''`); |'
  id: totrans-30
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | printManager.queuePrintJob(`''第二个文档''`); |'
- en: '| ​  | printManager.queuePrintJob(`''Third Document''`); |'
  id: totrans-31
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | printManager.queuePrintJob(`''第三个文档''`); |'
- en: '| ​  | printManager.run(); |'
  id: totrans-32
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | printManager.run(); |'
- en: 'Each time we call `queuePrintJob`，we add the document (represented by a string
    in this example) to the queue:'
  id: totrans-33
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 每次调用 `queuePrintJob` 时，我们将文档（在此示例中由字符串表示）添加到队列中：
- en: '| ​  | `queuePrintJob(document) {` |'
  id: totrans-34
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `queuePrintJob(document) {` |'
- en: '| ​  | `this`.queue.enqueue(document); |'
  id: totrans-35
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `this`.queue.enqueue(document); |'
- en: '| ​  | `}` |'
  id: totrans-36
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `}` |'
- en: 'When we call `run`，we “print” each document by processing it in the order in
    which it was received. That is, we dequeue each document from the queue and print
    it:'
  id: totrans-37
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 当我们调用 `run` 时，我们通过按接收顺序处理每个文档来“打印”它。也就是说，我们从队列中出队每个文档并打印它：
- en: '| ​  | `run() {` |'
  id: totrans-38
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `run() {` |'
- en: '| ​  | `while` (`this`.queue.read()) { |'
  id: totrans-39
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `while` (`this`.queue.read()) { |'
- en: '| ​  | `this`.printDocument(`this`.queue.dequeue()); |'
  id: totrans-40
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `this`.printDocument(`this`.queue.dequeue()); |'
- en: '| ​  | `}` |'
  id: totrans-41
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `}` |'
- en: '| ​  | `}` |'
  id: totrans-42
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `}` |'
- en: 'When we run the previous code, the program will output the three documents
    in the same order in which they were received:'
  id: totrans-43
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 当我们运行之前的代码时，程序将按照接收的顺序输出三个文档：
- en: '| ​  | First Document |'
  id: totrans-44
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 第一个文档 |'
- en: '| ​  | Second Document |'
  id: totrans-45
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 第二个文档 |'
- en: '| ​  | Third Document |'
  id: totrans-46
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | 第三个文档 |'
- en: While this example is simplified and abstracts away some of the nitty-gritty
    details that a real live printing system may have to deal with, the fundamental
    use of a queue for such an application is very real and serves as the foundation
    for building such a system.
  id: totrans-47
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 尽管这个示例简化了某些细节，真实的打印系统可能会遇到这些细节，但在此类应用中，队列的基本使用是非常真实的，构建该系统的基础。
- en: Queues are also the perfect tool for handling asynchronous requests—they ensure
    that the requests are processed in the order in which they were received. They’re
    also commonly used to model real-world scenarios where events need to occur in
    a certain order, such as airplanes waiting for takeoff and patients waiting for
    their doctor.
  id: totrans-48
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 队列也是处理异步请求的完美工具——它们确保请求按接收顺序处理。它们通常用于模拟现实世界的场景，其中事件需要按照特定顺序发生，例如飞机等待起飞和病人等待看医生。
