- en: 'Module 1:'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 模块 1：
- en: '|'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Introduction to Vue.js
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 介绍
- en: '|'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: 'The inaugural module of "Vue.js Essentials: For Responsive Web Development"
    sets the stage for a transformative exploration into the world of Vue.js. As we
    embark on this journey, it becomes apparent that Vue.js is not just a JavaScript
    framework; it''s a philosophy, a methodology, and a powerful tool that reshapes
    the landscape of web development. In these initial pages, we delve into the origins,
    core principles, and the inherent advantages that Vue.js brings to the table.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 《Vue.js 基础：响应式网页开发入门》课程的首个模块为深入探索 Vue.js 的世界奠定了基础。在我们踏上这段旅程时，显而易见的是，Vue.js 不仅仅是一个
    JavaScript 框架，它是一种哲学，一种方法论，以及一个强大的工具，重新定义了网页开发的格局。在这些初步的页面中，我们将深入探讨 Vue.js 的起源、核心原则以及它所带来的固有优势。
- en: 'Vue.js Unveiled: Foundations and Philosophies'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 揭密：基础与哲学
- en: At its core, Vue.js is more than just a tool; it's a mindset that champions
    simplicity and flexibility. This module introduces readers to the genesis of Vue.js,
    tracing its evolution and highlighting the fundamental principles that define
    its essence. By understanding the philosophy behind Vue.js, developers gain insight
    into why it has become a preferred choice for building modern and responsive web
    applications.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 从本质上讲，Vue.js 不仅仅是一个工具，它是一种倡导简洁与灵活性的思维方式。本模块将读者引入 Vue.js 的起源，追溯其发展历程，并突出定义其本质的基本原则。通过理解
    Vue.js 背后的哲学，开发者可以洞察为什么它成为构建现代响应式网页应用的首选。
- en: 'Core Concepts: A Compass for Vue.js Development'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 核心概念：Vue.js 开发的指南针
- en: Navigating the Vue.js landscape requires a solid grasp of its core concepts.
    This module meticulously breaks down the key elements, focusing on data binding,
    directives, methods, and computed properties. Developers are guided through the
    intricacies of conditional rendering and list rendering, equipping them with the
    tools needed to build dynamic and interactive user interfaces with Vue.js.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 掌握 Vue.js 的核心概念是探索 Vue.js 生态系统的基础。本模块将详细解析关键要素，重点讲解数据绑定、指令、方法和计算属性。开发者将深入了解条件渲染和列表渲染的复杂性，获得构建动态交互式用户界面的工具。
- en: 'Setting Up Vue.js: The First Step Towards Mastery'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 Vue.js：迈向精通的第一步
- en: With a foundational understanding of Vue.js in place, the module transitions
    to the practical aspects of getting started. Here, we guide developers through
    the process of setting up the Vue.js environment, ensuring a smooth initiation
    into the world of Vue.js development. Creating the first Vue.js app becomes not
    just a technical exercise but a symbolic step in the journey towards responsive
    and engaging web development.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在对 Vue.js 有了基础的了解后，本模块转向实际操作部分，帮助开发者顺利搭建 Vue.js 开发环境，确保他们能够顺利进入 Vue.js 开发世界。创建第一个
    Vue.js 应用不仅仅是一次技术练习，更是向响应式和互动性网页开发迈出的象征性一步。
- en: 'A Glimpse into the Future: Vue.js Applications and Beyond'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 展望未来：Vue.js 应用及其发展
- en: 'As developers immerse themselves in the introductory module, they catch a glimpse
    of the future possibilities that Vue.js unlocks. This module serves as the gateway
    to a transformative experience, laying the groundwork for a comprehensive understanding
    of Vue.js and setting the tone for the immersive modules that follow in "Vue.js
    Essentials: For Responsive Web Development."'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当开发者深入“Vue.js 入门”模块时，他们能够 glimpses Vue.js 解锁的未来可能性。该模块作为转型体验的入口，为全面理解 Vue.js
    奠定基础，并为接下来的沉浸式模块“Vue.js 基础：响应式 Web 开发”定下基调。
- en: Overview of Vue.js
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Vue.js 概述
- en: 'In the module "Introduction to Vue.js" within the book "Vue.js Essentials:
    For Responsive Web Development," the journey begins with a comprehensive exploration
    of the framework''s foundations. The section "Overview of Vue.js" serves as a
    crucial starting point, offering developers a detailed introduction to the fundamental
    aspects that make Vue.js a progressive and versatile JavaScript framework. By
    unraveling the core principles and syntax, this section provides a solid foundation
    for readers before delving into more advanced Vue.js concepts.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在《Vue.js 基础：响应式 Web 开发》一书中的“Vue.js 入门”模块里，旅程从全面探索框架基础开始。 “Vue.js 概述”部分作为关键起点，向开发者详细介绍了使
    Vue.js 成为一个进阶且多用途的 JavaScript 框架的基本方面。通过揭示核心原理和语法，该部分为读者提供了扎实的基础，之后才能深入更高级的 Vue.js
    概念。
- en: // Sample Vue.js Syntax
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: // 示例 Vue.js 语法
- en: const app = new Vue({
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: const app = new Vue({
- en: 'el: ''#app'','
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 'el: ''#app'','
- en: 'data: {'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 'data: {'
- en: 'message: ''Hello, Vue.js!'''
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 'message: ''Hello, Vue.js!'''
- en: '}'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '});'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: The code snippet above showcases a basic Vue.js instance, encapsulating the
    essence of Vue.js applications. The 'el' property specifies the HTML element to
    be controlled by Vue.js, and the 'data' property holds the application's reactive
    data. Vue.js's simplicity and readability make it an excellent choice for developers
    aiming to build dynamic and responsive user interfaces effortlessly.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码片段展示了一个基础的 Vue.js 实例， encapsulating Vue.js 应用的精髓。'el' 属性指定了由 Vue.js 控制的
    HTML 元素，而 'data' 属性保存了应用的响应式数据。Vue.js 的简洁性和可读性使其成为开发者构建动态和响应式用户界面的理想选择。
- en: 'Vue.js Components: Building Blocks for Modular Development'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 组件：模块化开发的构建块
- en: Moving further into the "Introduction to Vue.js" module, the section emphasizes
    Vue.js components as pivotal building blocks for modular development. Components
    allow developers to encapsulate specific functionalities, fostering reusability
    and maintainability in Vue.js applications.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步深入“Vue.js 入门”模块，部分内容强调 Vue.js 组件是模块化开发的关键构建块。组件允许开发者封装特定功能，促进 Vue.js 应用的可重用性和可维护性。
- en: <!-- Sample Vue.js Component -->
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 示例 Vue.js 组件 -->
- en: <template>
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h2>{{ title }}</h2>
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: <h2>{{ title }}</h2>
- en: <p>{{ content }}</p>
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ content }}</p>
- en: </div>
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'title: ''Vue.js Component'','
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 'title: ''Vue.js 组件'','
- en: 'content: ''Building modular and reusable components with Vue.js.'''
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 'content: ''使用 Vue.js 构建模块化和可重用的组件。'''
- en: '};'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '}'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: <style scoped>
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: <style scoped>
- en: h2 {
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: h2 {
- en: 'color: #42b983;'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 'color: #42b983;'
- en: '}'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: </style>
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: </style>
- en: This Vue.js component illustrates the structure comprising a template, script,
    and style. The 'data' function defines the component's reactive data, enabling
    dynamic content rendering. Scoped styling ensures encapsulation, preventing style
    leakage to other components. Understanding Vue.js components lays the groundwork
    for creating scalable and maintainable Vue.js applications.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 Vue.js 组件展示了由模板、脚本和样式组成的结构。'data' 函数定义了组件的响应式数据，从而实现动态内容渲染。作用域样式确保了样式的封装，防止样式泄漏到其他组件。理解
    Vue.js 组件为构建可扩展和可维护的 Vue.js 应用打下了基础。
- en: 'Vue.js Directives: Bringing Dynamicity to the Frontend'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 指令：为前端带来动态性
- en: The "Overview of Vue.js" section delves into Vue.js directives, a powerful feature
    that brings dynamism to frontend development. Directives are special tokens in
    the markup, prefixed with 'v-', guiding Vue.js in manipulating the DOM dynamically.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '"Vue.js 概览" 部分深入探讨了 Vue.js 指令，这是一项强大的功能，为前端开发带来了动态性。指令是标记中的特殊令牌，前缀为 ''v-''，指导
    Vue.js 动态操作 DOM。'
- en: <!-- Sample Vue.js Directive -->
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 示例 Vue.js 指令 -->
- en: <div v-if="isUserLoggedIn">
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: <div v-if="isUserLoggedIn">
- en: <p>Welcome, {{ username }}!</p>
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: <p>欢迎，{{ username }}!</p>
- en: </div>
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: This code snippet showcases the 'v-if' directive, conditionally rendering the
    content based on the 'isUserLoggedIn' data property. Vue.js directives provide
    developers with a declarative approach to handle dynamic behavior in the user
    interface, contributing to a more interactive and responsive application. Understanding
    these directives is crucial for harnessing the full potential of Vue.js in frontend
    development.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代码片段展示了 'v-if' 指令，基于 'isUserLoggedIn' 数据属性有条件地渲染内容。Vue.js 指令为开发者提供了声明式的方式来处理用户界面中的动态行为，有助于构建更加交互性强和响应迅速的应用。理解这些指令对充分利用
    Vue.js 在前端开发中的潜力至关重要。
- en: Advantages of Using Vue.js
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Vue.js 的优势
- en: 'Within the "Introduction to Vue.js" module of "Vue.js Essentials: For Responsive
    Web Development," the section "Advantages of Using Vue.js" serves as a pivotal
    exploration into the benefits and strengths that make Vue.js a preferred choice
    for developers. This section goes beyond syntax and delves into the core advantages,
    showcasing how Vue.js empowers developers to build robust, efficient, and scalable
    web applications.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '在 "Vue.js Essentials: For Responsive Web Development" 的 "Vue.js 简介" 模块中，"使用
    Vue.js 的优势" 部分作为一个关键探索，详细介绍了使 Vue.js 成为开发者首选的优势和特点。该部分不仅仅关注语法，还深入挖掘了 Vue.js 的核心优势，展示了
    Vue.js 如何帮助开发者构建强大、高效和可扩展的 Web 应用。'
- en: // Vue.js Simplicity and Readability
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: // Vue.js 的简洁性和可读性
- en: new Vue({
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: new Vue({
- en: 'el: ''#app'','
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 'el: ''#app'','
- en: 'data: {'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 'data: {'
- en: 'message: ''Hello, Vue.js!'''
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 'message: ''你好，Vue.js!'''
- en: '}'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '});'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: One of the primary advantages of Vue.js lies in its simplicity and readability.
    The code snippet above exemplifies the straightforward syntax of creating a Vue.js
    instance. With clear and concise code, Vue.js enhances the developer experience,
    making it accessible to both beginners and seasoned developers. The simplicity
    of Vue.js facilitates rapid development without compromising on functionality.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 的主要优势之一在于其简洁性和可读性。上面的代码片段展示了创建 Vue.js 实例的简单语法。通过清晰简洁的代码，Vue.js 提升了开发者体验，使其对初学者和经验丰富的开发者都更加友好。Vue.js
    的简洁性促使了快速开发，而不牺牲功能性。
- en: 'Reactivity and Component-Based Architecture: Streamlining Development Workflow'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 响应式和基于组件的架构：简化开发工作流
- en: Vue.js introduces a reactive and component-based architecture that significantly
    streamlines the development workflow. Reactivity ensures that changes to the underlying
    data automatically reflect in the user interface, eliminating the need for manual
    DOM manipulation.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 引入了响应式和基于组件的架构，显著简化了开发工作流。响应式确保了底层数据的更改自动反映到用户界面，无需手动操作 DOM。
- en: <!-- Vue.js Reactivity in Template -->
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- Vue.js 模板中的响应式 -->
- en: <template>
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <p>{{ message }}</p>
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: <p>{{ message }}</p>
- en: <button @click="updateMessage">Update Message</button>
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: <button @click="updateMessage">更新消息</button>
- en: </div>
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'message: ''Initial Message'''
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 'message: ''初始消息'''
- en: '};'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '},'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '},'
- en: 'methods: {'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 'methods: {'
- en: updateMessage() {
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: updateMessage() {
- en: this.message = 'Updated Message';
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: this.message = '已更新的消息';
- en: '}'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: In this Vue.js component, the 'message' data property is dynamically displayed
    in the template. The 'updateMessage' method triggers a change in the 'message,'
    demonstrating Vue.js reactivity. This approach enhances code maintainability and
    ensures a more efficient development process.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个 Vue.js 组件中，'message' 数据属性会在模板中动态显示。'updateMessage' 方法触发了 'message' 的更改，展示了
    Vue.js 的响应性。这种方式提高了代码的可维护性，确保了更高效的开发过程。
- en: 'Flexibility and Incremental Adoption: Tailoring Vue.js to Project Needs'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 灵活性与增量采用：根据项目需求定制 Vue.js
- en: Vue.js stands out for its flexibility, allowing developers to adopt it incrementally
    in existing projects. This flexibility is particularly advantageous for projects
    of varying sizes and complexities, providing developers the freedom to integrate
    Vue.js seamlessly.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 以其灵活性脱颖而出，允许开发者在现有项目中逐步采用它。这种灵活性对于不同规模和复杂度的项目尤其有利，为开发者提供了无缝集成 Vue.js
    的自由。
- en: // Vue.js Incremental Adoption
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: // Vue.js 增量采用
- en: import Vue from 'vue';
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: import Vue from 'vue';
- en: import App from './App.vue';
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: import App from './App.vue';
- en: new Vue({
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: new Vue({
- en: 'render: (h) => h(App)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 'render: (h) => h(App)'
- en: '}).$mount(''#app'');'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '}).$mount(''#app'');'
- en: The code snippet showcases an incremental adoption approach, integrating Vue.js
    into an existing project. Developers can gradually introduce Vue.js components,
    enabling a smooth transition without disrupting the entire codebase. Vue.js flexibility
    empowers developers to tailor its usage according to specific project needs.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 代码片段展示了一种渐进式采用的方法，将 Vue.js 集成到现有项目中。开发者可以逐步引入 Vue.js 组件，确保平滑过渡，而不会打乱整个代码库。Vue.js
    的灵活性使开发者能够根据特定项目需求量身定制其使用方式。
- en: '"Advantages of Using Vue.js" within the "Introduction to Vue.js" module unveils
    the core strengths that make Vue.js a compelling choice for web development. From
    its simplicity and reactivity to its flexible and incremental adoption approach,
    Vue.js empowers developers to build sophisticated and scalable applications efficiently.
    Understanding these advantages sets the stage for harnessing Vue.js to its full
    potential in responsive web development.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在“Vue.js 入门”模块中的“使用 Vue.js 的优势”部分揭示了使 Vue.js 成为 Web 开发有力选择的核心优势。从其简洁性和响应性，到灵活和渐进式的采用方式，Vue.js
    使开发者能够高效地构建复杂且可扩展的应用程序。了解这些优势为充分发挥 Vue.js 在响应式 Web 开发中的潜力奠定了基础。
- en: Setting Up Vue.js Environment
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Vue.js 环境
- en: 'The "Introduction to Vue.js" module in "Vue.js Essentials: For Responsive Web
    Development" embarks on a crucial journey with the section "Setting Up Vue.js
    Environment." This section provides developers with a comprehensive guide to establishing
    a robust Vue.js environment, ensuring a seamless development experience. From
    installing Vue.js to configuring essential tools, this step-by-step walkthrough
    lays the groundwork for efficient Vue.js development.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在《Vue.js 基础：响应式 Web 开发》中的“Vue.js 入门”模块开始了一段至关重要的旅程，特别是“设置 Vue.js 环境”这一部分。该部分为开发者提供了建立强大
    Vue.js 环境的全面指南，确保顺畅的开发体验。从安装 Vue.js 到配置必要的工具，本节逐步讲解了高效 Vue.js 开发的基础。
- en: Install Vue CLI globally
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 全局安装 Vue CLI
- en: npm install -g @vue/cli
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: npm install -g @vue/cli
- en: Create a new Vue project
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个新的 Vue 项目
- en: vue create my-vue-app
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: vue create my-vue-app
- en: Navigate to the project directory
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进入项目目录
- en: cd my-vue-app
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: cd my-vue-app
- en: Run the development server
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动开发服务器
- en: npm run serve
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: npm run serve
- en: The code snippet above outlines the commands for globally installing the Vue
    CLI, creating a new Vue project, navigating to the project directory, and initiating
    the development server. Vue CLI is a powerful tool that simplifies project setup,
    providing developers with a scalable and standardized structure for Vue.js applications.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码片段概述了全局安装 Vue CLI、创建新 Vue 项目、进入项目目录并启动开发服务器的命令。Vue CLI 是一款强大的工具，它简化了项目设置，为开发者提供了一个可扩展且标准化的
    Vue.js 应用程序结构。
- en: 'Setting Up on VS Code: Enhancing Development with a Feature-Rich IDE'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在 VS Code 上设置：通过功能丰富的 IDE 提升开发体验
- en: While Vue.js development can be initiated with a simple text editor, leveraging
    a feature-rich integrated development environment (IDE) like Visual Studio Code
    (VS Code) enhances the development experience. The "Setting Up Vue.js Environment"
    section delves into configuring VS Code for optimal Vue.js development.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Vue.js 开发可以使用简单的文本编辑器启动，但借助功能丰富的集成开发环境（IDE）如 Visual Studio Code（VS Code）可以提升开发体验。"设置
    Vue.js 环境" 部分深入探讨了如何配置 VS Code 以实现最佳的 Vue.js 开发效果。
- en: // VS Code Extensions for Vue.js Development
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: // Vue.js 开发的 VS Code 扩展
- en: '{'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: '"recommendations": ['
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '"recommendations": ['
- en: '"octref.vetur",'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '"octref.vetur",'
- en: '"dbaeumer.vscode-eslint",'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '"dbaeumer.vscode-eslint",'
- en: '"esbenp.prettier-vscode"'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '"esbenp.prettier-vscode"'
- en: ']'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: '}'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: The code snippet represents the recommended VS Code extensions for Vue.js development.
    "octref.vetur" provides Vue.js support, enabling syntax highlighting, IntelliSense,
    and other essential features. "dbaeumer.vscode-eslint" ensures consistent code
    style through ESLint, while "esbenp.prettier-vscode" enhances code formatting.
    Installing these extensions enriches the development environment, fostering a
    more productive and error-free coding experience.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码片段展示了推荐用于 Vue.js 开发的 VS Code 扩展。"octref.vetur" 提供了 Vue.js 支持，启用了语法高亮、智能提示等基本功能。"dbaeumer.vscode-eslint"
    通过 ESLint 确保代码风格的一致性，而 "esbenp.prettier-vscode" 则提升了代码格式化功能。安装这些扩展能够丰富开发环境，促进更高效、无错误的编码体验。
- en: 'Vue CLI Configuration: Tailoring Projects to Specific Needs'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Vue CLI 配置：根据具体需求定制项目
- en: The "Setting Up Vue.js Environment" section also explores Vue CLI configuration,
    allowing developers to tailor projects to their specific needs. This includes
    managing project features, selecting plugins, and customizing project settings.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '"设置 Vue.js 环境" 部分还探讨了 Vue CLI 配置，允许开发者根据具体需求定制项目。这包括管理项目功能、选择插件以及自定义项目设置。'
- en: Customize project configuration using Vue CLI
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Vue CLI 自定义项目配置
- en: vue invoke vue-cli-plugin-custom-config
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: vue invoke vue-cli-plugin-custom-config
- en: Configure individual project features
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置个别项目功能
- en: vue add router
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: vue add router
- en: vue add vuex
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: vue add vuex
- en: The code snippets showcase using Vue CLI to invoke a custom configuration plugin
    and add router and Vuex to a project. This modular approach enables developers
    to selectively add features, ensuring that each Vue.js project is tailored to
    its unique requirements. Vue CLI simplifies the configuration process, empowering
    developers to manage project settings efficiently.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这些代码片段展示了如何使用 Vue CLI 调用自定义配置插件，并向项目中添加路由和 Vuex。此模块化的方法使开发者能够有选择地添加功能，确保每个 Vue.js
    项目都能够根据其独特需求量身定制。Vue CLI 简化了配置过程，使开发者能够高效地管理项目设置。
- en: 'Running Tests: Ensuring Code Quality and Reliability'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 运行测试：确保代码质量和可靠性
- en: The "Setting Up Vue.js Environment" section extends its focus to test configuration,
    emphasizing the importance of ensuring code quality and reliability through testing.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '"设置 Vue.js 环境" 部分扩展了对测试配置的关注，强调了通过测试确保代码质量和可靠性的重要性。'
- en: Run unit tests
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行单元测试
- en: npm run test:unit
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: npm run test:unit
- en: Run end-to-end tests
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行端到端测试
- en: npm run test:e2e
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: npm run test:e2e
- en: The provided commands demonstrate running unit tests and end-to-end tests. Vue
    CLI streamlines the testing process, allowing developers to maintain high code
    quality by validating functionality and catching potential issues early in the
    development lifecycle.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的命令演示了如何运行单元测试和端到端测试。Vue CLI 简化了测试过程，使开发者能够通过验证功能和及早发现潜在问题，保持高代码质量，确保在开发生命周期的早期阶段就解决问题。
- en: '"Setting Up Vue.js Environment" within the "Introduction to Vue.js" module
    serves as an indispensable guide for developers beginning their Vue.js journey.
    From installing Vue CLI and creating a new project to configuring VS Code for
    an enhanced development experience, this section lays the groundwork for a seamless
    and efficient Vue.js development environment. The comprehensive instructions and
    code examples empower developers to embark on their Vue.js projects with confidence,
    ensuring a robust foundation for building responsive web applications.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: “设置 Vue.js 环境”部分位于“Vue.js 入门”模块内，是开发者开始 Vue.js 之旅的必备指南。从安装 Vue CLI、创建新项目到配置
    VS Code 以提升开发体验，本节为无缝高效的 Vue.js 开发环境奠定了基础。详细的指导和代码示例使开发者能够自信地开始他们的 Vue.js 项目，确保构建响应式
    Web 应用的坚实基础。
- en: Creating Your First Vue.js App
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建你的第一个 Vue.js 应用程序
- en: 'The module "Introduction to Vue.js" in the book "Vue.js Essentials: For Responsive
    Web Development" reaches a pivotal moment with the section titled "Creating Your
    First Vue.js App." This section is designed to guide developers through the practical
    process of building their inaugural Vue.js application. By breaking down the steps
    and providing detailed code examples, it aims to make the initiation into Vue.js
    development a smooth and hands-on experience.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '书籍《Vue.js Essentials: For Responsive Web Development》中的“Vue.js 入门”模块，进入了一个关键时刻，标题为“创建你的第一个
    Vue.js 应用程序”这一部分，旨在引导开发者通过实际操作构建他们的第一个 Vue.js 应用。通过分解步骤并提供详细的代码示例，本节旨在让开发者顺利并动手地开始
    Vue.js 开发。'
- en: Navigate to the project directory
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导航到项目目录
- en: cd my-vue-app
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: cd my-vue-app
- en: Open the project in your preferred code editor
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在你喜欢的代码编辑器中打开项目
- en: code .
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: code .
- en: Before delving into the code, the process starts by navigating to the project
    directory and opening it in the preferred code editor. This step ensures developers
    are ready to begin creating their first Vue.js application in a familiar and comfortable
    environment, setting the stage for an engaging coding experience.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入代码之前，首先需要导航到项目目录并在首选的代码编辑器中打开它。这一步确保开发者准备好在熟悉且舒适的环境中开始创建第一个 Vue.js 应用程序，为令人愉快的编码体验奠定基础。
- en: 'Understanding the Vue.js File Structure: Navigating the Project Layout'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 理解 Vue.js 文件结构：导航项目布局
- en: The "Creating Your First Vue.js App" section introduces developers to the typical
    file structure of a Vue.js project. This understanding is crucial for organizing
    and locating files efficiently as the project evolves.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '"创建你的第一个 Vue.js 应用" 这一部分向开发者介绍了 Vue.js 项目的典型文件结构。理解这一结构对于在项目发展过程中高效地组织和定位文件至关重要。'
- en: my-vue-app/
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: my-vue-app/
- en: '|-- src/'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '|-- src/'
- en: '|   |-- assets/'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '|   |-- assets/'
- en: '|   |-- components/'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '|   |-- components/'
- en: '|   |-- views/'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '|   |-- views/'
- en: '|   |-- App.vue'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '|   |-- App.vue'
- en: '|   |-- main.js'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '|   |-- main.js'
- en: The outlined file structure illustrates common directories like "assets" for
    static resources, "components" for Vue.js components, and "views" for higher-level
    components representing views. The "App.vue" file serves as the root component,
    and "main.js" acts as the entry point for the Vue.js application. This organized
    structure enhances code maintainability and scalability as the project grows.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 描述的文件结构展示了常见的目录，如 "assets" 用于静态资源，"components" 用于 Vue.js 组件，以及 "views" 用于表示视图的高级组件。"App.vue"
    文件作为根组件，而 "main.js" 作为 Vue.js 应用的入口点。这个有序的结构提升了代码的可维护性和可扩展性，随着项目的增长，能够更好地进行管理。
- en: 'Building the First Vue.js Component: The Foundation of Your App'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 构建第一个 Vue.js 组件：你应用的基础
- en: Developers dive into the heart of Vue.js development by creating their first
    Vue.js component. The "Creating Your First Vue.js App" section emphasizes the
    significance of components in Vue.js applications.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者通过创建他们的第一个 Vue.js 组件，深入了解 Vue.js 开发的核心。"创建你的第一个 Vue.js 应用" 这一部分强调了组件在 Vue.js
    应用中的重要性。
- en: <!-- src/components/HelloWorld.vue -->
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- src/components/HelloWorld.vue -->
- en: <template>
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h1>{{ greeting }}</h1>
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: <h1>{{ greeting }}</h1>
- en: </div>
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: data() {
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: data() {
- en: return {
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: return {
- en: 'greeting: ''Hello, Vue.js!'''
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 'greeting: ''你好，Vue.js！'''
- en: '};'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: '}'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: <style scoped>
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: <style scoped>
- en: h1 {
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: h1 {
- en: 'color: #42b983;'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 'color: #42b983;'
- en: '}'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: </style>
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: </style>
- en: This code snippet represents a basic Vue.js component named "HelloWorld.vue."
    The template contains a dynamic greeting message, and the associated JavaScript
    logic in the "script" section handles the data for the component. Scoped styling
    ensures encapsulation, avoiding unintended style conflicts. Understanding the
    anatomy of a Vue.js component is fundamental for creating dynamic and reusable
    user interface elements.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码展示了一个基础的 Vue.js 组件，名为 "HelloWorld.vue"。模板中包含了一个动态的问候消息，关联的 JavaScript 逻辑在
    "script" 部分处理该组件的数据。作用域样式确保了样式的封装，避免了样式冲突。理解 Vue.js 组件的构成是创建动态和可重用用户界面元素的基础。
- en: '"Creating Your First Vue.js App" in the "Introduction to Vue.js" module offers
    a hands-on initiation into Vue.js development. From navigating the project directory
    and understanding the file structure to building the first Vue.js component, this
    section ensures developers gain practical experience and a solid foundation for
    subsequent Vue.js projects. The step-by-step approach, coupled with detailed code
    examples, facilitates an engaging learning process for developers venturing into
    the realm of Vue.js development.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '"创建你的第一个 Vue.js 应用" 位于 "Vue.js 入门" 模块中，提供了一个动手实践的 Vue.js 开发入门。通过浏览项目目录、理解文件结构以及构建第一个
    Vue.js 组件，本节确保开发者获得实际经验，并为后续的 Vue.js 项目打下坚实的基础。逐步的教学方法，结合详细的代码示例，为那些踏入 Vue.js
    开发领域的开发者提供了一个充实的学习过程。'
