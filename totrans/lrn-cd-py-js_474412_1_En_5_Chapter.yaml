- en: © The Author(s), under exclusive license to Springer Fachmedien Wiesbaden GmbH,
    part of Springer Nature 2024J. L. ZuckarelliLearn coding with Python and JavaScript
    [https://doi.org/10.1007/978-3-658-42912-6_5](https://doi.org/10.1007/978-3-658-42912-6_5)
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: © 作者，独家授权给Springer Fachmedien Wiesbaden GmbH，隶属于Springer Nature 2024J. L. Zuckarelli学习Python和JavaScript编程
    [https://doi.org/10.1007/978-3-658-42912-6_5](https://doi.org/10.1007/978-3-658-42912-6_5)
- en: 5. Which Programming Languages Should You Learn?
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5. 你应该学习哪些编程语言？
- en: Joachim L. Zuckarelli^([1](#Aff2)  )(1)München, GermanyOverview
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Joachim L. Zuckarelli^([1](#Aff2)  )(1)慕尼黑，德国概述
- en: In the last chapter we saw why there are so many different programming languages.
    But this diversity presents us with the problem of deciding which language or
    languages to learn. In Parts III and IV of this book, you will have the opportunity
    to familiarize yourself with two extremely popular programming languages, Python
    and JavaScript; to that extent, the author has already made a choice for you.
    Independently of this, however, in this chapter we want to address the question
    of what criteria you can use to select languages that might be of interest to
    you. After all, if you are just starting out in programming, you will certainly
    not remain with the first language with which you started programming.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们看到了为什么会有如此多种不同的编程语言。但这种多样性也给我们带来了一个问题，那就是如何决定学习哪种语言或哪几种语言。在本书的第三和第四部分，你将有机会熟悉两种极为流行的编程语言：Python和JavaScript；在这一点上，作者已经为你做出了选择。然而，独立于此，在本章中我们想讨论你可以用来选择可能感兴趣的语言的标准。毕竟，如果你刚刚开始学习编程，你肯定不会一直停留在你学习编程时使用的第一种语言上。
- en: 'Given the immense range of programming languages, the question naturally arises
    as to which of them you should bother with. As you probably already thought, or
    even feared, the answer turns out to be inconclusive: It depends.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于编程语言的种类繁多，当然会产生一个问题，那就是你应该学习哪些语言。正如你可能已经想过，甚至可能担心的那样，答案是无法一概而论的：这取决于具体情况。
- en: 5.1 Subject of Your Project
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.1 项目的主题
- en: We have seen in the previous chapter that languages are differently suited for
    different application areas. So, it makes sense to choose a language for your
    project(s) that can comfortably achieve the goal. If you mainly want to build
    websites with dynamic elements (for example, if you want your website to validate
    address data when a customer creates a new user account), then you’re most likely
    to go with JavaScript, because JavaScript runs in the web browser and it’s great
    for working with user input before it’s sent to the web server. In the next step,
    however, you won’t be able to avoid involving the web server itself if the customer
    data is also to be written to a database. To do this, a script runs on the web
    server, for which PHP will probably be the language of your choice. PHP was developed
    for exactly this purpose. It runs on the web server and makes it easy to work
    with databases in the background and dynamically display the results of database
    queries as a web page in the user’s browser. However, if you want to develop a
    real Windows application, neither PHP nor JavaScript will be on your shortlist,
    because they are made to run in a web environment. For a true Windows application,
    you’re more likely to turn to Java, Visual C/C++, VisualBasic, Delphi, or something
    similar. These languages allow you to develop classic stand-alone applications,
    design pretty interfaces for them, and respond to the user’s actions. If you want
    to develop programs for analyzing large amounts of data, you’ll probably turn
    to R or Python. And for mobile apps, you might use Objective-C or the relatively
    new Swift developed by Apple.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中我们看到，不同的编程语言适合不同的应用领域。因此，选择一种能够顺利实现项目目标的语言是很有意义的。如果你主要是想构建具有动态元素的网站（例如，如果你希望在客户创建新账户时验证地址数据），那么你很可能会选择JavaScript，因为JavaScript在网页浏览器中运行，并且非常适合在数据发送到web服务器之前处理用户输入。然而，在下一步中，如果客户数据还需要写入数据库，你将无法避免涉及web服务器本身。为此，服务器上将运行一个脚本，而PHP可能是你的首选语言。PHP正是为这个目的开发的。它在web服务器上运行，能够轻松地在后台与数据库交互，并动态地将数据库查询结果以网页的形式展示给用户浏览器中的用户。然而，如果你想开发一个真正的Windows应用程序，那么PHP和JavaScript都不会出现在你的候选名单上，因为它们是为web环境设计的。对于真正的Windows应用程序，你更可能会选择Java、Visual
    C/C++、VisualBasic、Delphi或类似的语言。这些语言允许你开发经典的独立应用程序，设计漂亮的界面，并响应用户的操作。如果你想开发用于分析大量数据的程序，你可能会选择R或Python。而对于移动应用，你可能会使用Apple开发的Objective-C或相对较新的Swift。
- en: 'We have always talked about a language being particularly good for a particular
    purpose. But what makes a language better or less suitable? There are two things
    in particular:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一直在讨论某种语言特别适合某个特定目的。但是，是什么使得一种语言更好或不太适合呢？特别有两个方面：
- en: '1.'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: The environment in which the language runs, such as a PC operating system (for
    stand-alone applications), a website in the user’s web browser, a web server,
    or a mobile operating system (for mobile/tablet apps).
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语言运行的环境，比如PC操作系统（用于独立应用程序），用户网页浏览器中的网站，网页服务器，或者移动操作系统（用于手机/平板应用程序）。
- en: '2.'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: The tools that the language provides to accomplish the task you set out to do.
    For many languages there are libraries and frameworks, which are ultimately extensions
    that give a certain functionality to the language. For example, there might be
    a library for searching other websites for content and extracting it (“web scraping”).
    Now, if you want to write a program that keeps track of the price of a particular
    online shop item and notifies you when it changes, you should choose a language
    that features a strong web scraping library. When it comes to libraries and frameworks,
    open-source languages with an active, engaged user community regularly have an
    advantage over their commercial competitors.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 语言提供的工具，用来完成你设定的任务。对于许多编程语言来说，都会有库和框架，它们实际上是为语言提供某些功能的扩展。例如，可能会有一个用于搜索其他网站内容并提取的库（“网页抓取”）。现在，如果你想编写一个程序，来跟踪某个在线商店商品的价格并在价格变化时通知你，你应该选择一个拥有强大网页抓取库的语言。在库和框架方面，开源语言，尤其是那些拥有活跃且参与度高的用户社区的语言，通常比商业竞争对手更具优势。
- en: But languages may also come with important out-of-the-box features that make
    the language more suitable for your purpose. For example, this could be the language’s
    data structures, or the way data is processed in the language. If you want to
    work with data tables and columns from these tables, for example, the language
    R, which is primarily used for statistical purposes, is a good choice, since it
    offers extensive out-of-the-box support for these data structures in the form
    of data frames and vectors.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 但语言也可能具有一些重要的开箱即用特性，使得它更适合你的目的。例如，这可能是语言的数据结构，或数据在语言中的处理方式。如果你希望处理数据表格及其中的列，例如，主要用于统计目的的语言R是一个不错的选择，因为它提供了丰富的开箱即用的支持，比如数据框和向量等数据结构。
- en: 5.2 Customer Preference and Employer Preference
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.2 客户偏好和雇主偏好
- en: If you work as a freelancer, the client may have their own ideas about which
    programming language to use. This may be because he wants to smoothly integrate
    your program into his larger overall software, which is written in that language.
    Or because he and his internal developers simply know the language best. If your
    customer doesn’t understand how your software works, he won’t be able to develop
    it further.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是自由职业者，客户可能会有自己关于使用哪种编程语言的想法。这可能是因为他希望将你的程序顺利地集成到他的大型软件中，而这个软件是用该语言编写的。或者是因为他和他的内部开发人员对这门语言最为熟悉。如果你的客户不了解你的软件是如何工作的，他就无法进一步开发它。
- en: Also, if you are looking for a job as a developer, it is important to know one
    or more of the languages that are in demand in the market. But how do you find
    them?
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，如果你正在寻找开发者职位，了解市场上需求较大的语言之一或多种也非常重要。那么，如何找到这些语言呢？
- en: One way is to use the *TIOBE index* as a guide. This list, maintained by the
    *TIOBE* software company, evaluates the relevance of programming languages based
    on the number of hits they get in various search engines when you search for the
    name of the language.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法是使用*TIOBE指数*作为指导。这个由*TIOBE*软件公司维护的列表，通过搜索语言名称在各种搜索引擎中获得的点击量，来评估编程语言的相关性。
- en: The number of question and answer posts in the *Stack Overflow* forums, which
    are extremely popular among programmers, is also a good indicator. The Stack Overflow
    operators publish quantitative evaluations of the programming languages to which
    the posts refer. In addition, Stack Overflow’s regular user surveys offer a clue,
    as among other things, they regularly ask about programming languages used.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*Stack Overflow*论坛上问答帖子的数量也是一个很好的指标，这个论坛在程序员中非常受欢迎。Stack Overflow的运营者会发布与帖子相关的编程语言的定量评估。此外，Stack
    Overflow定期的用户调查也能提供一些线索，因为它们定期询问用户使用的编程语言等问题。'
- en: But what if you don’t trust all these statistics? After all, there are reasons
    to at least critically question the validity of such numbers. Could it be that
    the many questions about a particular programming language on *Stack Overflow*
    only come from the fact that the language is very complicated and therefore difficult
    to use? The same argument could be used to question the validity of the search
    hit based *TIOBE* popularity statistics*.* Further, one might question whether
    Stack Overflow’s user surveys are representative—perhaps certain groups, such
    as nerds, who engage with a language for reasons other than its practicality are
    more inclined to participate in such surveys.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果你不相信这些统计数据呢？毕竟，至少有理由对这些数据的有效性提出批判性质疑。是不是有可能，关于某种特定编程语言在*Stack Overflow*上的大量问题，仅仅是因为这门语言非常复杂，因此使用起来很困难？同样的论点也可以用来质疑基于搜索结果的*TIOBE*流行度统计数据*。*此外，人们可能会质疑*Stack
    Overflow*的用户调查是否具有代表性——也许某些群体，比如那些因非实用原因而对一门语言产生兴趣的极客，更倾向于参与这些调查。
- en: These are all legitimate considerations. Nevertheless, high numbers of questions
    and search hits at least show that there are people who are concerned with the
    language. If you really want to do without statistics, you can look for anecdotal
    evidence for the importance of certain programming languages. Go to the major
    job portals, search for programmer/developer jobs, and see what languages are
    required in the job ads. Studies such as those of the programming course provider
    *Coding Dojo* examine job ads in a systematic way (again statistics!), particularly
    those on the search engine ► [*indeed.com*](http://indeed.com). If that’s still
    not enough evidence for you and you’d rather hear the opinion of (mostly self-appointed)
    experts, go to *YouTube* and search for “Programming languages to learn in [insert
    year here].” You’ll find dozens of YouTubers with more or less good insights into
    the market situation who willingly explain which languages they prefer and for
    what reasons. Stack Overflow
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这些都是合理的考虑因素。然而，问题的高频率和搜索结果至少表明，确实有人在关心这些语言。如果你真的不想依赖统计数据，你可以通过轶事性的证据来证明某些编程语言的重要性。你可以去主要的招聘网站，搜索程序员/开发者职位，看看招聘广告中要求哪些语言。像*Coding
    Dojo*这样的编程课程提供商的研究会以系统的方式分析招聘广告（再次是统计数据！），尤其是那些在搜索引擎► [*indeed.com*](http://indeed.com)上的广告。如果这些证据仍然不足以让你信服，你可以去*YouTube*，搜索“[插入年份]年学习的编程语言”。你会找到许多YouTuber，他们会根据自己的理解，愿意解释他们偏好的语言以及理由，虽然他们的洞察力好坏不一。
- en: 5.3 Pedagogical Aspects
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5.3 教育学方面
- en: At the beginning, you might deliberately choose languages that take different
    paths in terms of their approach to programming (i.e., their *programming paradigms*,
    which we will look at in more detail in the third part of the book) in order to
    learn about a wide range of possibilities. This sounds a bit easier than it is,
    because most languages do not follow a single paradigm at all, but are *multiparadigmatic*,
    picking elements from different paradigms. However, a good mix still creates a
    sound understanding of the different approaches.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一开始，你可能会故意选择一些在编程方法上有所不同的语言（即它们的*编程范式*，我们将在本书的第三部分详细讨论），以便了解更多的可能性。这听起来比实际要简单，因为大多数编程语言并不完全遵循单一的范式，而是*多范式*的，从不同的范式中汲取元素。然而，一个良好的组合仍然能帮助你理解不同的编程方法。
- en: In the same way, you could start with languages that are relatively easy to
    learn. After all, achieving initial learning successes quickly is a key motivation
    to stick with it and keep going. We also follow these pedagogical points of view
    in the present book.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，你也可以从那些相对容易学习的语言开始。毕竟，快速获得初步的学习成果是坚持下去并继续前进的关键动机。我们在本书中也遵循了这种教学观点。
- en: You have probably noticed that we always assume here that you will ultimately
    learn not just one but several programming languages. But is it realistic to really
    master several languages, and to do so sufficiently well?
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，我们在这里总是假设你最终会学习的不仅仅是一种，而是几种编程语言。但是，真正掌握几种语言并且做到足够精通，这样的目标现实吗？
- en: How is your English? How’s your French? How is your Spanish? Can you make yourself
    understood to a native speaker in all three languages? Probably not (unless you’re
    really gifted at languages). It’s apparently quite hard to do well in natural
    languages. Programming languages are a bit different. Once you understand the
    basic concepts of programming, you can learn other languages with manageable effort.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你的英语怎么样？你的法语怎么样？你的西班牙语怎么样？你能用这三种语言与母语者顺利沟通吗？可能做不到（除非你在语言方面非常有天赋）。显然，掌握自然语言是相当困难的。编程语言则稍有不同。一旦你理解了编程的基本概念，你就能以相对轻松的方式学习其他语言。
- en: As with natural languages, a developer with many years of practical experience
    in that language, a “native speaker” so to speak, will of course be far superior
    to you and know tricks you have never heard of. In this way, he will be able to
    solve a given task with a program that is shorter, looks more elegant and runs
    faster than one you can write. Still, learning the basics of a new language, at
    a level that will enable you to write programs successfully, is not difficult.
    While this statement may seem like a somewhat bold assertion to you at this point,
    we will prove it in this book.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 和自然语言一样，一位有多年实际经验的开发者，即所谓的“母语者”，当然会远远优于你，掌握你从未听说过的技巧。这样，他能够通过更简短、看起来更优雅、运行更快的程序来完成特定任务，而这些都是你写不出来的。不过，学习一门新语言的基础，达到能够成功编写程序的水平，并不难。虽然此时你可能认为这有些过于自信，但我们将在本书中证明这一点。
- en: After extensively covering the basic concepts of programming in the second part
    of the book, you will learn *two* programming languages, *Python* and *JavaScript*,
    in the third and fourth parts. These two languages are not only very useful, but
    also extremely popular by all measures. In the July 2022 *TIOBE Index*, they rank
    1st (Python) and 7th (JavaScript). The leading languages in the index—Java, C,
    and C++ − are a bit more complicated and not quite as well-suited for entry-level
    programmers as Python and JavaScript. As of May 2023, JavaScript and Python were
    the languages with the highest number of questions on, with the number of Python-related
    questions in particular increasing in recent years.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的第二部分，广泛介绍编程的基本概念后，你将在第三和第四部分学习*两*门编程语言，*Python*和*JavaScript*。这两门语言不仅非常实用，而且在各项衡量标准中都极为流行。在2022年7月的*TIOBE指数*中，它们分别排名第1（Python）和第7（JavaScript）。该指数中的领先语言——Java、C和C++——相对复杂，并不像Python和JavaScript那样适合入门级程序员。截至2023年5月，JavaScript和Python是问题数量最多的编程语言，尤其是Python相关的问题数量近年来有显著增加。
