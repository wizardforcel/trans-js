["```jsjavascript\n\n// Example of using environment variables in Node.js\n\nconst express = require('express');\n\nconst app = express();\n\nconst PORT = process.env.PORT || 3000;\n\napp.listen(PORT, () => {\n\nconsole.log(`Server running on port ${PORT}`);\n\n});\n\n```", "```jssh\n\nnpx webpack --mode production\n\n```", "```jshtml\n\n<meta http-equiv=\"Content-Security-Policy\" content=\"default-src 'self'; script-src 'self';\">\n\n```", "```jssh\n\n# Nginx basic configuration\n\nserver {\n\nlisten 80;\n\nserver_name exemplo.com;\n\nlocation / {\n\nroot /var/www/html;\n\nindex index.html index.htm;\n\n}\n\n}\n\n```", "```jssh\n\nvercel deploy\n\n```", "```jsDockerfile\n\n# Dockerfile example for a Node.js application\n\nFROM node:14\n\nWORKDIR /usr/src/app\n\nCOPY package*.json ./\n\nRUN npm install\n\nCOPY . .\n\nEXPOSE 8080\n\nCMD [\"node\", \"server.js\"]\n\n```", "```jsyaml\n\n# GitHub Actions configuration example\n\nname: Node.js CI\n\non: [push]\n\njobs:\n\nbuild:\n\nruns-on: ubuntu-latest\n\nstrategy:\n\nmatrix:\n\nnode-version: [12.x, 14.x, 16.x]\n\nsteps:\n\n- uses: actions/checkout@v2\n\n- name: Use Node.js ${{ matrix.node-version }}\n\nuses: actions/setup-node@v2\n\nwith:\n\nnode-version: ${{ matrix.node-version }}\n\n- run: npm install\n\n- run: npm test\n\n```", "```jsyaml\n\n# CD pipeline configuration example with GitHub Actions\n\nname: Node.js CD\n\non:\n\npush:\n\nbranches:\n\n- main\n\njobs:\n\ndeploy:\n\nruns-on: ubuntu-latest\n\nsteps:\n\n- uses: actions/checkout@v2\n\n- name: Configure SSH\n\nuses: webfactory/ssh-agent@v0.5.3\n\nwith:\n\nssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}\n\n- name: Deploy to server\n\nrun: |\n\nssh user@server \"cd /path/to/app && git pull && npm install && pm2 restart all\"\n\n```", "```jsyaml\n\n# Prometheus configuration example\n\nglobal:\n\nscrape_interval: 15s\n\nscrape_configs:\n\n- job_name: 'node'\n\nstatic_configs:\n\n- targets: ['localhost:9090']\n\n```", "```jsjavascript\n\n// Example of logging with Winston\n\nconst winston = require('winston');\n\nconst logger = winston.createLogger({\n\nlevel: 'info',\n\nformat: winston.format.json(),\n\ntransports: [\n\nnew winston.transports.File({ filename: 'error.log', level: 'error' }),\n\nnew winston.transports.File({ filename: 'combined.log' })\n\n]\n\n});\n\n```", "```jssh\n\nnpm audit\n\n```"]