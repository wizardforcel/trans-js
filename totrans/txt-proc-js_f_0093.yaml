- en: matchAll()
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: matchAll()
- en: 'The matchAll() method is similar to match() except when you set the global
    flag (g), which causes the method to provide additional information about the
    matches such as capturing groups and index positions:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: matchAll() 方法与 match() 类似，但当你设置全局标志 (g) 时，它会提供额外的关于匹配的信息，例如捕获组和索引位置：
- en: '[appendix/methods/methods_ex6.js](http://media.pragprog.com/titles/fkjavascript/code/appendix/methods/methods_ex6.js)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[appendix/methods/methods_ex6.js](http://media.pragprog.com/titles/fkjavascript/code/appendix/methods/methods_ex6.js)'
- en: '|   | **const** str = *"9ft, 10ft, 11ft"*; |'
  id: totrans-3
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** str = *"9英尺, 10英尺, 11英尺"*; |'
- en: '|   | **const** re = */**(\d\d)**ft/g*; |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** re = */**(\d\d)**英尺/g*; |'
- en: '|   |  |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | console.log(str.match(re)); |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '|   | console.log(str.match(re)); |'
- en: '|   | *// → ["10ft", "11ft"]* |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '|   | *// → ["10英尺", "11英尺"]* |'
- en: '|   |  |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | console.log(...str.matchAll(re)); |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '|   | console.log(...str.matchAll(re)); |'
- en: '|   | *// → ["10ft", "10", index: 5, input: "9ft, 10ft, 11ft", groups: undefined]*
    |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '|   | *// → ["10英尺", "10", index: 5, input: "9英尺, 10英尺, 11英尺", groups: undefined]*
    |'
- en: '|   | *// → ["11ft", "11", index: 11, input: "9ft, 10ft, 11ft", groups: undefined]*
    |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '|   | *// → ["11英尺", "11", index: 11, input: "9英尺, 10英尺, 11英尺", groups: undefined]*
    |'
- en: '|   |  |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | console.log(re.exec(str)); |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '|   | console.log(re.exec(str)); |'
- en: '|   | *// → ["10ft", "10", index: 5, input: "9ft, 10ft, 11ft", groups: undefined]*
    |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '|   | *// → ["10英尺", "10", index: 5, input: "9英尺, 10英尺, 11英尺", groups: undefined]*
    |'
- en: 'matchAll() is a relatively new addition to ECMAScript compared to other methods
    covered in this appendix. Edge 79 (Released 2020-01-15) was the last browser to
    implement matchAll().^([[39]](f_0098.xhtml#FOOTNOTE-39)) If you need to support
    older browsers, you can use a polyfill.^([[40]](f_0098.xhtml#FOOTNOTE-40)) Previously,
    developers had to call exec() in a loop to get a similar result, which wasn’t
    very efficient. Here’s an example in case you encounter it on the internet:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 'matchAll() 是 ECMAScript 中相对较新的方法，和本附录中介绍的其他方法相比，Edge 79（发布于2020-01-15）是最后一个实现
    matchAll() 的浏览器。^([[39]](f_0098.xhtml#FOOTNOTE-39)) 如果你需要支持旧版本的浏览器，可以使用 Polyfill。^([[40]](f_0098.xhtml#FOOTNOTE-40))
    以前，开发者需要在循环中调用 exec() 来获取类似的结果，但效率较低。以下是一个可能在互联网上遇到的示例： '
- en: '[appendix/methods/methods_ex7.js](http://media.pragprog.com/titles/fkjavascript/code/appendix/methods/methods_ex7.js)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[appendix/methods/methods_ex7.js](http://media.pragprog.com/titles/fkjavascript/code/appendix/methods/methods_ex7.js)'
- en: '|   | **const** str = *"9ft, 10ft, 11ft"*; |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** str = *"9英尺, 10英尺, 11英尺"*; |'
- en: '|   | **const** re = */**(\d\d)**ft/g*; |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '|   | **const** re = */**(\d\d)**英尺/g*; |'
- en: '|   |  |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | **let** matches; |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '|   | **let** matches; |'
- en: '|   |  |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | **while** ((matches = re.exec(str)) !== **null**) { |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '|   | **while** ((matches = re.exec(str)) !== **null**) { |'
- en: '|   | console.log(matches); |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '|   | console.log(matches); |'
- en: '|   | } |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '|   | } |'
- en: '|   |  |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | *// Logs:* |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '|   | *// 日志:* |'
- en: '|   | *// → ["10ft", "10", index: 5, input: "9ft, 10ft, 11ft", groups: undefined]*
    |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '|   | *// → ["10英尺", "10", index: 5, input: "9英尺, 10英尺, 11英尺", groups: undefined]*
    |'
- en: '|   | *// → ["11ft", "11", index: 11, input: "9ft, 10ft, 11ft", groups: undefined]*
    |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '|   | *// → ["11英尺", "11", index: 11, input: "9英尺, 10英尺, 11英尺", groups: undefined]*
    |'
