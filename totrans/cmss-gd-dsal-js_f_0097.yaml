- en: Recurse Instead of Loop
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
- en: Let’s say you work at NASA and need to program a countdown function for launching
    spacecraft. The particular function that you’re asked to write should accept a
    number—such as `10`—and display the numbers from `10` down to `0`.
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Take a moment and implement this function yourself. When you’re done, read on.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Odds are that you wrote a simple loop, along the lines of this implementation:'
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '| ​  | `function` countdown(number) { |'
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_TB
- en: '| ​  | `while` (number >= 0) { |'
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_TB
- en: '| ​  | `console.log(number);` |'
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_TB
- en: '| ​  | `number -= 1;` |'
  id: totrans-7
  prefs: []
  stylish: true
  type: TYPE_TB
- en: '| ​  | } |'
  id: totrans-8
  prefs: []
  stylish: true
  type: TYPE_TB
- en: '| ​  | } |'
  id: totrans-9
  prefs: []
  stylish: true
  type: TYPE_TB
- en: Nothing is wrong with this implementation, but it may have never occurred to
    you that you don’t have to use a loop.
  id: totrans-10
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: How?
  id: totrans-11
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Let’s try recursion instead. Here’s a first attempt at using recursion to implement
    our countdown function:'
  id: totrans-12
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '| ​  | `function` countdown(number) { |'
  id: totrans-13
  prefs: []
  stylish: true
  type: TYPE_TB
- en: '| ​  | `console.log(number);` |'
  id: totrans-14
  prefs: []
  stylish: true
  type: TYPE_TB
- en: '| ​  |  |'
  id: totrans-15
  prefs: []
  stylish: true
  type: TYPE_TB
- en: '| ​  | `countdown(number - 1);` |'
  id: totrans-16
  prefs: []
  stylish: true
  type: TYPE_TB
- en: '| ​  | } |'
  id: totrans-17
  prefs: []
  stylish: true
  type: TYPE_TB
- en: Let’s walk through this code step by step.
  id: totrans-18
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Step 1: We call `countdown(10)` so the argument variable `number` starts out
    as `10`.'
  id: totrans-19
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Step 2: We print `number` (which contains the value `10`) to the console.'
  id: totrans-20
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Step 3: Before the countdown function is complete, it calls `countdown(9)`
    since `number - 1` is `9`.'
  id: totrans-21
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Step 4: `countdown(9)` begins running. In it, we print `number` (which is currently
    `9`) to the console.'
  id: totrans-22
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Step 5: Before `countdown(9)` is complete, it calls `countdown(8)`.'
  id: totrans-23
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Step 6: `countdown(8)` begins running. We print `8` to the console.'
  id: totrans-24
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Before we continue stepping through the code, note how we’re using recursion
    to achieve our goal. We’re not using any loop constructs, but by simply having
    the `countdown` function call itself, we’re able to count down from `10` and print
    each number to the console.
  id: totrans-25
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: In almost any case in which you can use a loop, you can also use recursion.
    Now, just because you can use recursion doesn’t mean that you should use recursion.
    Recursion is a tool that allows for writing elegant code. In the preceding example,
    the recursive approach isn’t necessarily any more beautiful or efficient than
    using a classic loop. However, we’ll soon encounter examples in which recursion
    shines. In the meantime, let’s continue exploring how recursion works.
  id: totrans-26
  prefs: []
  stylish: true
  type: TYPE_NORMAL
