- en: Chapter 10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Recursively Recurse with Recursion
  prefs: []
  type: TYPE_NORMAL
- en: Recursion is a key concept in computer science that will unlock the more advanced
    algorithms we’re going to encounter in this book. When used correctly, recursion
    can be used to solve certain types of tricky problems in surprisingly simple ways.
    Sometimes, it even seems like magic.
  prefs: []
  type: TYPE_NORMAL
- en: But before we dive in, a pop quiz!
  prefs: []
  type: TYPE_NORMAL
- en: What happens when the blah() function defined here is called?
  prefs: []
  type: TYPE_NORMAL
- en: '| ​  | ​**function**​ blah() { |'
  prefs: []
  type: TYPE_TB
- en: '| ​  | blah(); |'
  prefs: []
  type: TYPE_TB
- en: '| ​  | } |'
  prefs: []
  type: TYPE_TB
- en: As you may have guessed, it will call itself infinitely, since blah() calls
    itself, which in turn calls itself, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Recursion is the term for a function calling itself. Indeed, infinite recursion,
    as in the above example, is utterly useless. When harnessed correctly, though,
    recursion can be a powerful tool.
  prefs: []
  type: TYPE_NORMAL
