- en: Chapter 10
  id: totrans-0
  prefs:
  - PREF_H1
  stylish: true
  type: TYPE_NORMAL
- en: Recursively Recurse with Recursion
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Recursion is a key concept in computer science that will unlock the more advanced
    algorithms we’re going to encounter in this book. When used correctly, recursion
    can be used to solve certain types of tricky problems in surprisingly simple ways.
    Sometimes, it even seems like magic.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: But before we dive in, a pop quiz!
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: What happens when the `blah()` function defined here is called?
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '| ​  | ​`function`​ `blah() {` |'
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_TB
- en: '| ​  | `blah();` |'
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_TB
- en: '| ​  | `}` |'
  id: totrans-7
  prefs: []
  stylish: true
  type: TYPE_TB
- en: As you may have guessed, it will call itself infinitely, since `blah()` calls
    itself, which in turn calls itself, and so on.
  id: totrans-8
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Recursion is the term for a function calling itself. Indeed, infinite recursion,
    as in the above example, is utterly useless. When harnessed correctly, though,
    recursion can be a powerful tool.
  id: totrans-9
  prefs: []
  stylish: true
  type: TYPE_NORMAL
