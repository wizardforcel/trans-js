- en: Chapter 9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Crafting Elegant Code with Stacks and Queues
  prefs: []
  type: TYPE_NORMAL
- en: Until now, our discussion around data structures has focused primarily on how
    they affect the performance of various operations. However, having a variety of
    data structures in your programming arsenal also allows you to create code that
    is simpler and easier to read.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, you’re going to discover two new data structures: stacks and
    queues. The truth is that these two structures are not entirely new. They’re simply
    arrays with restrictions. Yet these restrictions are exactly what make them so
    elegant.'
  prefs: []
  type: TYPE_NORMAL
- en: More specifically, stacks and queues are elegant tools for handling temporary
    data. From operating system architecture to printing jobs to traversing data,
    stacks and queues serve as temporary containers that can be used to form beautiful
    algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: Think of temporary data like the food orders in a diner. What each customer
    orders is important until the meal is made and delivered; then you throw the order
    slip away. You don’t need to keep that information around. Temporary data is information
    that doesn’t have any meaning after it’s processed, so you can throw it away once
    you’re done with it.
  prefs: []
  type: TYPE_NORMAL
- en: Stacks and queues handle this kind of temporary data but have a special focus
    on the order in which the data is handled, as you’ll now learn.
  prefs: []
  type: TYPE_NORMAL
