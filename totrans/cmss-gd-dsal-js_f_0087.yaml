- en: Chapter 9
  id: totrans-0
  prefs:
  - PREF_H1
  stylish: true
  type: TYPE_NORMAL
- en: Crafting Elegant Code with `Stacks` and `Queues`
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Until now, our discussion around data structures has focused primarily on how
    they affect the performance of various operations. However, having a variety of
    data structures in your programming arsenal also allows you to create code that
    is simpler and easier to read.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'In this chapter, you’re going to discover two new data structures: `stacks`
    and `queues`. The truth is that these two structures are not entirely new. They’re
    simply `arrays` with restrictions. Yet these restrictions are exactly what make
    them so elegant.'
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: More specifically, `stacks` and `queues` are elegant tools for handling temporary
    data. From operating system architecture to printing jobs to traversing data,
    `stacks` and `queues` serve as temporary containers that can be used to form beautiful
    algorithms.
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Think of temporary data like the food orders in a diner. What each customer
    orders is important until the meal is made and delivered; then you throw the order
    slip away. You don’t need to keep that information around. Temporary data is information
    that doesn’t have any meaning after it’s processed, so you can throw it away once
    you’re done with it.
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '`Stacks` and `queues` handle this kind of temporary data but have a special
    focus on the order in which the data is handled, as you’ll now learn.'
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_NORMAL
