- en: 'Module 4:'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 模块 4：
- en: '|'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Vue Router for Navigation
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Vue Router 用于导航
- en: '|'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: 'In the dynamic landscape of web development, seamless navigation is a cornerstone
    of a positive user experience. Vue.js, a progressive JavaScript framework, excels
    not only in building reactive user interfaces but also in providing a powerful
    routing solution through Vue Router. The module "Vue Router for Navigation" is
    a pivotal section within the comprehensive guide "Vue.js Essentials: For Responsive
    Web Development." Within these pages, readers will embark on a journey to master
    Vue Router, understanding how to architect navigation in Vue.js applications with
    elegance and precision.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '在快速发展的网页开发领域，无缝的导航是良好用户体验的基石。Vue.js 作为一个渐进式 JavaScript 框架，不仅在构建响应式用户界面方面表现出色，还通过
    Vue Router 提供了强大的路由解决方案。本模块“Vue Router for Navigation”是综合指南《Vue.js Essentials:
    For Responsive Web Development》中的一个重要部分。在这些页面中，读者将开始掌握 Vue Router，理解如何优雅且精准地构建
    Vue.js 应用中的导航。'
- en: Understanding the Importance of Navigation in Web Development
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 理解导航在网页开发中的重要性
- en: Before delving into the intricacies of Vue Router, it is essential to recognize
    the significance of navigation in web development. This module initiates with
    an exploration of the challenges developers face in managing navigation within
    single-page applications (SPAs) and how Vue Router addresses these concerns. By
    understanding the role of Vue Router in facilitating seamless navigation, readers
    lay the groundwork for building responsive and user-friendly web applications.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入探讨 Vue Router 的复杂性之前，首先需要认识到导航在网页开发中的重要性。本模块从探讨开发者在管理单页面应用（SPA）中的导航所面临的挑战开始，并说明
    Vue Router 如何解决这些问题。通过理解 Vue Router 在实现无缝导航中的作用，读者为构建响应式且用户友好的网页应用奠定基础。
- en: 'Vue Router Fundamentals: Routes, Views, and Navigation Guards'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Vue Router 基础：路由、视图与导航守卫
- en: The core of Vue Router lies in its ability to map routes to views, providing
    a structured approach to navigation within a Vue.js application. This segment
    of the module delves into the fundamentals of Vue Router, guiding readers through
    the creation of routes, associating them with views, and understanding the intricacies
    of nested routes. Additionally, the module explores navigation guards, empowering
    developers to exert fine-grained control over the navigation process, ensuring
    security and precise execution of actions at each route transition.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Vue Router 的核心在于其将路由映射到视图的能力，提供了一种在 Vue.js 应用程序中进行导航的结构化方法。本模块的这一部分深入探讨了 Vue
    Router 的基本原理，指导读者创建路由、将其与视图关联，并理解嵌套路由的复杂性。此外，模块还探讨了导航守卫，帮助开发者对导航过程进行精细控制，确保安全性并在每次路由切换时精确执行操作。
- en: Dynamic Routing and Navigation with Vue Router
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Vue Router 实现动态路由和导航
- en: As web applications grow in complexity, the need for dynamic routing becomes
    apparent. This module unveils the power of dynamic routing with Vue Router, showcasing
    how to create routes dynamically based on data and parameters. Readers will learn
    to leverage dynamic segments in routes, enabling the construction of flexible
    and scalable applications that adapt to varying requirements. The exploration
    extends to programmatically navigating between routes, providing developers with
    the tools to create fluid and responsive user experiences.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Web应用的复杂性增加，动态路由的需求变得愈加明显。本模块揭示了使用Vue Router进行动态路由的强大功能，展示了如何基于数据和参数动态创建路由。读者将学会利用路由中的动态片段，构建灵活且可扩展的应用，以适应不断变化的需求。探讨还扩展到如何通过编程方式在路由之间进行导航，为开发者提供创建流畅且响应迅速的用户体验的工具。
- en: 'State Management and Navigation: Vue Router with Vuex'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 状态管理与导航：Vue Router与Vuex
- en: The synergy between Vue Router and Vuex, Vue.js's state management library,
    is a key aspect explored in this module. By seamlessly integrating Vue Router
    with Vuex, developers can synchronize the application state with the URL, enabling
    deep linking and state persistence. This segment provides insights into managing
    shared state, employing route parameters, and handling complex navigation scenarios.
    Readers will emerge with a holistic understanding of how Vue Router and Vuex collaborate
    to streamline navigation while maintaining a clean and organized application architecture.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本模块探讨了Vue Router与Vuex（Vue.js的状态管理库）之间的协同作用。通过将Vue Router与Vuex无缝集成，开发者可以将应用状态与URL同步，实现深度链接和状态持久化。本节内容深入分析了共享状态管理、路由参数的使用以及复杂导航场景的处理。读者将全面理解Vue
    Router和Vuex如何协同工作，以简化导航并保持清晰有序的应用架构。
- en: '"Vue Router for Navigation" serves as an indispensable module within "Vue.js
    Essentials: For Responsive Web Development," equipping readers with the knowledge
    and skills needed to navigate the complexities of routing in Vue.js applications.
    Through a comprehensive exploration of Vue Router''s features and functionalities,
    developers will gain the expertise required to architect seamless, responsive,
    and user-friendly web navigation experiences.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '"Vue Router用于导航"是《Vue.js Essentials: For Responsive Web Development》中的一个不可或缺的模块，旨在为读者提供在Vue.js应用中应对路由复杂性所需的知识和技能。通过对Vue
    Router功能和特性的全面探讨，开发者将获得架构无缝、响应式和用户友好的网页导航体验所需的专业知识。'
- en: Setting Up Vue Router
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置Vue Router
- en: 'The module "Vue Router for Navigation" within the book "Vue.js Essentials:
    For Responsive Web Development" introduces an integral aspect of Vue.js development
    in the section titled "Setting Up Vue Router." This section marks a pivotal step
    toward creating robust and navigable Vue.js applications by incorporating the
    Vue Router. Vue Router enables developers to implement client-side navigation
    seamlessly, providing a structured and organized approach to handling routes within
    a Vue.js application.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 《Vue.js基础：响应式Web开发》一书中的“Vue Router for Navigation”模块介绍了Vue.js开发中的一个重要方面，在名为“设置Vue
    Router”的章节中详细讲解。该章节标志着通过集成Vue Router，迈出了构建强大且可导航的Vue.js应用程序的重要一步。Vue Router使开发者能够实现客户端导航，提供了一种结构化、有序的方式来处理Vue.js应用中的路由。
- en: // main.js
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: // main.js
- en: import Vue from 'vue';
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: import Vue from 'vue';
- en: import App from './App.vue';
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: import App from './App.vue';
- en: import VueRouter from 'vue-router';
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: import VueRouter from 'vue-router';
- en: Vue.use(VueRouter);
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.use(VueRouter);
- en: const routes = [
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: const routes = [
- en: '{ path: ''/'', component: Home },'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '{ path: ''/'', component: Home },'
- en: '{ path: ''/about'', component: About },'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '{ path: ''/about'', component: About },'
- en: '{ path: ''/contact'', component: Contact }'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '{ path: ''/contact'', component: Contact }'
- en: '];'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '];'
- en: const router = new VueRouter({
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: const router = new VueRouter({
- en: routes
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: routes
- en: '});'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: new Vue({
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: new Vue({
- en: 'render: h => h(App),'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 'render: h => h(App),'
- en: router
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 路由器
- en: '}).$mount(''#app'');'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '}).$mount(''#app'');'
- en: The provided code snippet showcases the fundamental setup of Vue Router in the
    main entry file, "main.js." Vue Router is imported and registered with Vue through
    Vue.use(VueRouter). Route configurations are defined using the routes array, where
    each route is associated with a specific component. The VueRouter instance is
    then created, incorporating the defined routes. Finally, the router is integrated
    into the Vue instance, enabling seamless navigation within the application.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 提供的代码片段展示了在主入口文件“main.js”中Vue Router的基本设置。通过Vue.use(VueRouter)将Vue Router导入并注册到Vue中。路由配置通过routes数组定义，每个路由与一个特定的组件关联。然后创建VueRouter实例，整合已定义的路由。最后，将路由集成到Vue实例中，实现应用程序中的无缝导航。
- en: 'Creating Route Components: Vue.js Page Structure'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 创建路由组件：Vue.js页面结构
- en: In the setup phase, route components such as "Home," "About," and "Contact"
    are associated with corresponding paths. These components represent the pages
    that users will navigate to within the Vue.js application.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置阶段，路由组件如“首页”、“关于”和“联系”被关联到相应的路径。这些组件代表了用户将在Vue.js应用中导航到的页面。
- en: // Home.vue
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: // Home.vue
- en: <template>
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h2>Home Page</h2>
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: <h2>首页</h2>
- en: <!-- Home page content -->
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 首页内容 -->
- en: </div>
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: // About.vue
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: // About.vue
- en: <template>
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h2>About Page</h2>
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: <h2>关于页面</h2>
- en: <!-- About page content -->
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 关于页面内容 -->
- en: </div>
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: // Contact.vue
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: // Contact.vue
- en: <template>
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h2>Contact Page</h2>
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: <h2>联系页面</h2>
- en: <!-- Contact page content -->
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- 联系页面内容 -->
- en: </div>
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: Each route component encapsulates the template, style, and script sections,
    providing a modular and maintainable structure. The content within each component
    corresponds to the specific page's layout and functionality.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 每个路由组件都封装了模板、样式和脚本部分，提供了模块化和易于维护的结构。每个组件中的内容对应于特定页面的布局和功能。
- en: 'Navigation in Vue.js: Utilizing Router Links'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.js 中的导航：使用路由链接
- en: Vue Router facilitates navigation within the application through the use of
    router links. These links are defined using the router-link component, ensuring
    a seamless and reactive transition between pages.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Vue Router 通过使用 router-link 组件来促进应用程序内部的导航。这些链接通过 router-link 组件定义，确保页面之间平滑且响应式的过渡。
- en: <!-- App.vue -->
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- App.vue -->
- en: <template>
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h1>Vue Router App</h1>
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: <h1>Vue Router 应用</h1>
- en: <router-link to="/">Home</router-link>
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: <router-link to="/">首页</router-link>
- en: <router-link to="/about">About</router-link>
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: <router-link to="/about">关于</router-link>
- en: <router-link to="/contact">Contact</router-link>
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: <router-link to="/contact">联系方式</router-link>
- en: <router-view></router-view>
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: <router-view></router-view>
- en: </div>
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: // App component content
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: // App 组件内容
- en: '};'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: In this example, the router-link components represent links to the home, about,
    and contact pages. The router-view component acts as the placeholder where the
    content of the currently active route will be rendered. Vue Router seamlessly
    manages the navigation state, ensuring a smooth and reactive user experience.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，router-link 组件表示指向首页、关于和联系方式页面的链接。router-view 组件充当占位符，在这里将渲染当前激活路由的内容。Vue
    Router 无缝管理导航状态，确保平滑且响应式的用户体验。
- en: '"Setting Up Vue Router" in the "Vue Router for Navigation" module establishes
    a foundation for building navigable Vue.js applications. From configuring Vue
    Router in the main entry file to creating route components and utilizing router
    links for navigation, this section equips developers with the knowledge and tools
    needed to implement client-side navigation efficiently. The provided code examples
    offer a practical guide for setting up Vue Router and building a structured page
    navigation system within Vue.js applications.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '"设置 Vue Router" 在 "Vue Router 导航" 模块中为构建可导航的 Vue.js 应用程序奠定了基础。从在主入口文件中配置 Vue
    Router，到创建路由组件并利用路由链接进行导航，本节内容为开发者提供了实现客户端导航所需的知识和工具。提供的代码示例为设置 Vue Router 和构建
    Vue.js 应用程序中的结构化页面导航系统提供了实用的指南。'
- en: Basic Routing and Navigation
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本路由和导航
- en: 'The "Vue Router for Navigation" module in the book "Vue.js Essentials: For
    Responsive Web Development" delves into an essential aspect of Vue.js development
    with the section titled "Basic Routing and Navigation." This section lays the
    foundation for implementing basic routing features using Vue Router, offering
    developers a systematic approach to handle navigation within their Vue.js applications.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '《Vue.js Essentials: For Responsive Web Development》一书中的“Vue Router for Navigation”模块深入探讨了Vue.js开发中的一个关键方面，标题为“基础路由与导航”的部分。这一部分为使用Vue
    Router实现基本路由功能奠定了基础，为开发者提供了一个系统的方法来处理Vue.js应用中的导航。'
- en: // main.js
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: // main.js
- en: import Vue from 'vue';
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: import Vue from 'vue';
- en: import App from './App.vue';
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: import App from './App.vue';
- en: import VueRouter from 'vue-router';
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: import VueRouter from 'vue-router';
- en: import Home from './components/Home.vue';
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: import Home from './components/Home.vue';
- en: import About from './components/About.vue';
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: import About from './components/About.vue';
- en: import Contact from './components/Contact.vue';
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: import Contact from './components/Contact.vue';
- en: Vue.use(VueRouter);
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Vue.use(VueRouter);
- en: const routes = [
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: const routes = [
- en: '{ path: ''/'', component: Home },'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '{ path: ''/'', component: Home },'
- en: '{ path: ''/about'', component: About },'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '{ path: ''/about'', component: About },'
- en: '{ path: ''/contact'', component: Contact }'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '{ path: ''/contact'', component: Contact }'
- en: '];'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '];'
- en: const router = new VueRouter({
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: const router = new VueRouter({
- en: routes
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: routes
- en: '});'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: new Vue({
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: new Vue({
- en: 'render: h => h(App),'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 'render: h => h(App),'
- en: router
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: router
- en: '}).$mount(''#app'');'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '}).$mount(''#app'');'
- en: In the code snippet, Vue Router is configured with a set of routes, each associated
    with a specific component – Home, About, and Contact. This basic setup establishes
    the connection between routes and their corresponding components, laying the groundwork
    for seamless navigation within the Vue.js application.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码片段中，Vue Router通过一组路由进行配置，每个路由都与一个特定的组件关联——Home、About和Contact。这个基础设置建立了路由与其对应组件之间的连接，为Vue.js应用中的无缝导航奠定了基础。
- en: 'Navigating with Router Links: Vue.js Reactive Navigation'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 使用路由链接进行导航：Vue.js响应式导航
- en: Vue Router simplifies navigation by providing the router-link component, enabling
    developers to create navigation links that seamlessly respond to user interactions.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Vue Router通过提供router-link组件简化了导航，使开发者能够创建响应用户交互的导航链接。
- en: <!-- App.vue -->
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- App.vue -->
- en: <template>
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h1>Vue Router App</h1>
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: <h1>Vue Router 应用</h1>
- en: <router-link to="/">Home</router-link>
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: <router-link to="/">首页</router-link>
- en: <router-link to="/about">About</router-link>
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: <router-link to="/about">关于</router-link>
- en: <router-link to="/contact">Contact</router-link>
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: <router-link to="/contact">联系</router-link>
- en: <router-view></router-view>
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: <router-view></router-view>
- en: </div>
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: // App component content
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: // 应用组件内容
- en: '};'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: The router-link components in the template represent links to the home, about,
    and contact pages. When users click these links, Vue Router ensures a reactive
    transition to the associated route, rendering the corresponding component in the
    router-view placeholder. This straightforward approach simplifies navigation within
    Vue.js applications.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 模板中的 router-link 组件表示指向首页、关于页和联系页的链接。当用户点击这些链接时，Vue Router 确保会进行响应式的路由过渡，在 router-view
    占位符中渲染相应的组件。这个简单的方式简化了 Vue.js 应用程序中的导航。
- en: 'Route Parameters: Dynamic Routes in Vue.js'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 路由参数：Vue.js 中的动态路由
- en: The "Basic Routing and Navigation" section introduces the concept of route parameters,
    allowing developers to create dynamic routes that respond to varying data.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: “基本路由和导航”部分介绍了路由参数的概念，使开发者能够创建响应不同数据的动态路由。
- en: // main.js
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: // main.js
- en: const routes = [
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: const routes = [
- en: '{ path: ''/user/:id'', component: UserProfile }'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '{ path: ''/user/:id'', component: UserProfile }'
- en: '];'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '];'
- en: In this example, the route /user/:id defines a dynamic segment :id in the path.
    This enables Vue.js applications to capture different user IDs from the URL, providing
    a mechanism for dynamic content rendering based on route parameters.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，路由 /user/:id 定义了路径中的动态部分 :id。这使得 Vue.js 应用程序能够从 URL 中捕获不同的用户 ID，并提供了一种基于路由参数进行动态内容渲染的机制。
- en: '"Basic Routing and Navigation" in the "Vue Router for Navigation" module establishes
    the fundamental principles of navigation within Vue.js applications. From configuring
    Vue Router with basic routes to leveraging router links for reactive navigation
    and exploring dynamic routes with parameters, this section equips developers with
    the knowledge and tools needed to create well-structured and navigable Vue.js
    applications. The code examples provide a practical guide for implementing basic
    routing features, laying the groundwork for more advanced navigation capabilities
    in subsequent sections.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: “Vue Router for Navigation”模块中的“基本路由和导航”部分建立了 Vue.js 应用程序中导航的基本原理。从配置 Vue Router
    的基础路由到利用 router-link 实现响应式导航，再到使用带参数的动态路由，这一部分为开发者提供了创建结构良好、可导航的 Vue.js 应用程序所需的知识和工具。代码示例为实现基本路由功能提供了实际指南，为后续章节中更高级的导航功能奠定了基础。
- en: Route Parameters and Queries
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 路由参数和查询
- en: 'The "Vue Router for Navigation" module in the book "Vue.js Essentials: For
    Responsive Web Development" advances into a more dynamic realm with the section
    titled "Route Parameters and Queries." This section introduces crucial concepts
    that elevate the navigation experience within Vue.js applications, offering developers
    the tools to work with dynamic routes and query parameters.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '《Vue.js Essentials: For Responsive Web Development》一书中的“Vue Router for Navigation”模块，在“路由参数和查询”这一章节中进入了一个更加动态的领域。该章节介绍了提升
    Vue.js 应用程序中导航体验的关键概念，为开发者提供了处理动态路由和查询参数的工具。'
- en: // main.js
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: // main.js
- en: const routes = [
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: const routes = [
- en: '{ path: ''/user/:id'', component: UserProfile },'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '{ path: ''/user/:id'', component: UserProfile },'
- en: '{ path: ''/search'', component: SearchResults }'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '{ path: ''/search'', component: SearchResults }'
- en: '];'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '];'
- en: In the code snippet, the route /user/:id includes a dynamic segment :id to capture
    user-specific data, while the route /search sets the stage for incorporating query
    parameters in the Vue.js application.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码片段中，路由 /user/:id 包含一个动态段 :id，用于捕获用户特定的数据，而路由 /search 为在 Vue.js 应用中集成查询参数提供了基础。
- en: 'Dynamic Routes with Route Parameters: Vue.js Responsive to User-Specific Data'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 使用路由参数的动态路由：Vue.js 对用户特定数据的响应
- en: Route parameters provide a mechanism for creating dynamic routes that respond
    to varying data. In this example, the route /user/:id accommodates user-specific
    information based on the captured :id parameter.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 路由参数提供了一种创建动态路由的机制，能够响应不同的数据。在这个例子中，路由 /user/:id 根据捕获到的 :id 参数提供与用户相关的信息。
- en: // UserProfile.vue
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: // UserProfile.vue
- en: <template>
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h2>User Profile</h2>
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: <h2>用户资料</h2>
- en: '<p>User ID: {{ $route.params.id }}</p>'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '<p>用户 ID: {{ $route.params.id }}</p>'
- en: </div>
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: // UserProfile component content
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: // UserProfile 组件内容
- en: '};'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: The UserProfile component extracts the user ID from the route parameters using
    $route.params.id. This Vue.js feature allows developers to dynamically display
    content based on the captured parameter, enhancing the responsiveness of the application.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: UserProfile 组件通过 $route.params.id 从路由参数中提取用户 ID。这个 Vue.js 特性允许开发者基于捕获的参数动态显示内容，增强应用的响应能力。
- en: 'Incorporating Query Parameters: Vue.js Search Functionality'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 集成查询参数：Vue.js 搜索功能
- en: Query parameters extend the capabilities of Vue Router by enabling the incorporation
    of additional information in the URL. This is particularly useful for implementing
    search functionality and other scenarios where supplementary data needs to be
    conveyed.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 查询参数通过在 URL 中加入额外的信息，扩展了 Vue Router 的功能。这在实现搜索功能和其他需要传递附加数据的场景中特别有用。
- en: // SearchResults.vue
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: // SearchResults.vue
- en: <template>
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h2>Search Results</h2>
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: <h2>搜索结果</h2>
- en: '<p>Query: {{ $route.query.q }}</p>'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '<p>查询: {{ $route.query.q }}</p>'
- en: </div>
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: // SearchResults component content
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: // SearchResults 组件内容
- en: '};'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: In the SearchResults component, the query parameter q is extracted using $route.query.q.
    This Vue.js functionality allows developers to respond to user queries and adjust
    the displayed content accordingly.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SearchResults 组件中，查询参数 q 通过 $route.query.q 提取。这个 Vue.js 功能允许开发者响应用户查询，并相应地调整显示的内容。
- en: 'Navigating with Dynamic Routes and Queries: Vue.js Seamless User Experience'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 使用动态路由和查询进行导航：Vue.js 无缝用户体验
- en: The integration of dynamic routes and queries is exemplified by utilizing router-link
    components that reflect the dynamic nature of the application.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 动态路由和查询的集成通过使用 router-link 组件来展示，反映了应用的动态特性。
- en: <!-- App.vue -->
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: <!-- App.vue -->
- en: <template>
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h1>Vue Router App</h1>
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: <h1>Vue 路由应用</h1>
- en: '<router-link :to="{ path: ''/user/1'' }">User 1</router-link>'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '<router-link :to="{ path: ''/user/1'' }">用户 1</router-link>'
- en: '<router-link :to="{ path: ''/user/2'' }">User 2</router-link>'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '<router-link :to="{ path: ''/user/2'' }">用户 2</router-link>'
- en: '<router-link :to="{ path: ''/search'', query: { q: ''Vue.js'' } }">Search Vue.js</router-link>'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '<router-link :to="{ path: ''/search'', query: { q: ''Vue.js'' } }">搜索 Vue.js</router-link>'
- en: <router-view></router-view>
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: <router-view></router-view>
- en: </div>
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: // App component content
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: // 应用组件内容
- en: '};'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: In this example, router-link components are dynamically generated, allowing
    users to navigate to specific user profiles and trigger searches based on Vue.js-related
    queries. The use of dynamic paths and queries contributes to a seamless and responsive
    user experience.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，router-link 组件是动态生成的，允许用户导航到特定的用户个人资料，并根据与 Vue.js 相关的查询触发搜索。动态路径和查询的使用提升了用户体验的流畅性和响应性。
- en: '"Route Parameters and Queries" within the "Vue Router for Navigation" module
    expands the capabilities of Vue.js navigation. Developers are empowered to create
    dynamic routes that respond to user-specific data and incorporate query parameters
    for enhanced functionality. The detailed code examples showcase the practical
    implementation of these features, providing a comprehensive guide to leveraging
    dynamic routing and queries within Vue.js applications.'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: “Vue Router 导航”模块中的“路由参数和查询”扩展了 Vue.js 导航的功能。开发者可以创建响应用户特定数据的动态路由，并结合查询参数增强功能。详细的代码示例展示了这些功能的实际实现，为在
    Vue.js 应用中利用动态路由和查询提供了全面的指南。
- en: Navigation Guards in Vue Router
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Vue Router 中的导航守卫
- en: 'The "Vue Router for Navigation" module in the book "Vue.js Essentials: For
    Responsive Web Development" introduces an advanced topic with the section titled
    "Navigation Guards." This section dives into the powerful capabilities of navigation
    guards in Vue Router, allowing developers to exert control over the navigation
    flow within their Vue.js applications.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '本书《Vue.js Essentials: For Responsive Web Development》中的“Vue Router 导航”模块通过名为“导航守卫”的章节介绍了一个高级主题。本章节深入探讨了
    Vue Router 中导航守卫的强大功能，使开发者能够控制 Vue.js 应用中的导航流程。'
- en: // main.js
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: // main.js
- en: const router = new VueRouter({
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: const router = new VueRouter({
- en: routes
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: routes
- en: '});'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: router.beforeEach((to, from, next) => {
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: router.beforeEach((to, from, next) => {
- en: // Navigation guard logic
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: // 导航守卫逻辑
- en: if (to.meta.requiresAuth && !auth.isAuthenticated) {
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: if (to.meta.requiresAuth && !auth.isAuthenticated) {
- en: next('/login');
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: next('/login');
- en: '} else {'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: next();
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: next();
- en: '}'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '});'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '});'
- en: new Vue({
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: new Vue({
- en: 'render: h => h(App),'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 'render: h => h(App),'
- en: router
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: router
- en: '}).$mount(''#app'');'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '}).$mount(''#app'');'
- en: In the code snippet, a beforeEach navigation guard is added to the Vue Router
    instance. This guard is executed before each navigation, providing an opportunity
    to perform logic and influence the navigation process.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码片段中，beforeEach 导航守卫被添加到 Vue Router 实例中。此守卫在每次导航前执行，提供了一个机会来执行逻辑并影响导航过程。
- en: 'Global Navigation Guard: Vue.js Authentication Example'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 全局导航守卫：Vue.js 身份验证示例
- en: The global navigation guard illustrated in the example addresses authentication
    requirements. The guard checks whether the destination route (to) requires authentication
    (to.meta.requiresAuth) and whether the user is authenticated (auth.isAuthenticated).
    If authentication is required and the user is not authenticated, the navigation
    is redirected to the login page (next('/login')). Otherwise, the navigation proceeds
    as usual.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 示例中展示的全局导航守卫解决了认证要求。该守卫检查目标路由（to）是否需要认证（to.meta.requiresAuth）以及用户是否已认证（auth.isAuthenticated）。如果需要认证且用户未认证，则导航会重定向到登录页（next('/login')）。否则，导航会按正常流程进行。
- en: // App.vue
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: // App.vue
- en: <template>
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: <template>
- en: <div>
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: <div>
- en: <h1>Vue Router App</h1>
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: <h1>Vue 路由应用</h1>
- en: <router-link to="/">Home</router-link>
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: <router-link to="/">首页</router-link>
- en: <router-link to="/dashboard" v-if="auth.isAuthenticated">Dashboard</router-link>
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: <router-link to="/dashboard" v-if="auth.isAuthenticated">仪表盘</router-link>
- en: <router-link to="/login" v-if="!auth.isAuthenticated">Login</router-link>
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: <router-link to="/login" v-if="!auth.isAuthenticated">登录</router-link>
- en: <router-view></router-view>
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: <router-view></router-view>
- en: </div>
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: </div>
- en: </template>
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: </template>
- en: <script>
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: <script>
- en: export default {
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: export default {
- en: 'computed: {'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 'computed: {'
- en: auth() {
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: auth() {
- en: return this.$store.state.auth;
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: return this.$store.state.auth;
- en: '}'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '};'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '};'
- en: </script>
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: </script>
- en: In the App component, the presence or absence of certain router links is conditionally
    determined based on the authentication state. This Vue.js integration showcases
    how navigation guards can be seamlessly combined with the overall application
    structure to enforce specific navigation behavior.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在 App 组件中，某些路由链接的存在与否是根据认证状态有条件地决定的。这个 Vue.js 集成展示了如何将导航守卫与整体应用结构无缝结合，以强制执行特定的导航行为。
- en: 'Per-Route Navigation Guards: Vue.js Specific Route Control'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 每路由导航守卫：Vue.js 特定路由控制
- en: Navigation guards can also be applied at the per-route level, allowing developers
    to define specific guards for individual routes.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 导航守卫也可以应用于每个路由级别，允许开发人员为单独的路由定义特定的守卫。
- en: // main.js
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: // main.js
- en: const routes = [
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: const routes = [
- en: '{'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '{'
- en: 'path: ''/dashboard'','
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 'path: ''/dashboard'','
- en: 'component: Dashboard,'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 'component: Dashboard,'
- en: 'beforeEnter: (to, from, next) => {'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 'beforeEnter: (to, from, next) => {'
- en: // Per-route guard logic
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: // 每路由守卫逻辑
- en: if (!auth.isAuthenticated) {
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: if (!auth.isAuthenticated) {
- en: next('/login');
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: next('/login');
- en: '} else {'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '} else {'
- en: next();
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: next();
- en: '}'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '}'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '];'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '];'
- en: In this example, the beforeEnter guard is associated directly with the /dashboard
    route. It performs similar authentication checks and redirects the navigation
    accordingly.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，beforeEnter 守卫直接与 /dashboard 路由相关联。它执行类似的认证检查，并根据情况重定向导航。
- en: '"Navigation Guards in Vue Router" within the "Vue Router for Navigation" module
    introduces a powerful mechanism for controlling the flow of navigation in Vue.js
    applications. Whether implementing global guards for authentication requirements
    or defining per-route guards for specific route control, navigation guards offer
    a sophisticated toolset for developers to enforce logic during the navigation
    lifecycle. The detailed code examples demonstrate the practical implementation
    of these guards, providing a comprehensive guide for integrating navigation guards
    into Vue.js applications for enhanced control and security.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '"Vue Router中的导航守卫"在"Vue Router导航"模块中介绍了一种强大的机制，用于控制Vue.js应用程序中的导航流。无论是实现全局守卫来满足身份验证要求，还是为特定路由定义每个路由的守卫，导航守卫为开发者提供了一套复杂的工具集，用于在导航生命周期期间执行逻辑。这些详细的代码示例展示了如何实际实现这些守卫，为将导航守卫集成到Vue.js应用程序中提供了全面的指南，以增强控制和安全性。'
