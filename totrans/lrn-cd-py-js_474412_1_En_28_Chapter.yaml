- en: © The Author(s), under exclusive license to Springer Fachmedien Wiesbaden GmbH,
    part of Springer Nature 2024J. L. ZuckarelliLearn coding with Python and JavaScript
    [https://doi.org/10.1007/978-3-658-42912-6_28](https://doi.org/10.1007/978-3-658-42912-6_28)
  prefs: []
  type: TYPE_NORMAL
- en: '28. Tools & Help: What Do I Need for Programming?'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Joachim L. Zuckarelli^([1](#Aff2)  )(1)München, GermanyOverview
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will look at how JavaScript is executed, what development
    tools are available, and where to find more information about JavaScript. As you
    will see, you don’t need much to get started with programming JavaScript. To keep
    things simple, we will therefore only do with the “basic equipment” of tools and
    not work with a real Integrated Development Environment, as we did with Python.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter you will learn:'
  prefs: []
  type: TYPE_NORMAL
- en: How JavaScript code is interpreted, and what that means for the tools you need
    to run JavaScript code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: how to edit JavaScript code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: where you can get help on the internet if you need it
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 28.1 Interpreter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We had already seen in the introduction to this part of the book that JavaScript
    is a programming language that is widely used in the development of web pages.
    It is therefore clear that the execution of JavaScript programs must function
    somewhat differently than, for example, that of a Python program. After all, the
    user of a website cannot be expected to download an interpreter before he can
    view the website. And in fact, this is not necessary at all. All modern browsers
    come with JavaScript engine that has the ability to interpret JavaScript. That’s
    why you as a developer don’t need to install an interpreter. Your browser does
    the job!
  prefs: []
  type: TYPE_NORMAL
- en: 28.2 Code Editors and Development Environments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are quite a few integrated development environments (IDEs) available on
    the market that support JavaScript (among other things). These include, for example,
    JetBrains’ *WebStorm* (from the same vendor that provides the *PyCharm* used in
    the last part of the book) and *NetBeans* from the Apache Software Foundation.
    Some are commercial (like *WebStorm*), others are available for free (like *NetBeans*).
  prefs: []
  type: TYPE_NORMAL
- en: 'However, we will take a different approach here: After we worked with a sophisticated
    IDE for Python in the last part of this book, we will now make do with a much
    more modest tool for JavaScript, namely a pure code editor. Since our JavaScript
    code will be embedded in a web page anyway and then executed in the browser, we
    don’t need to bother with the question of how exactly to integrate the interpreter
    with the code editor. We simply write the JavaScript code and the web page that
    uses it in our code editor and then look at the result in the web browser.'
  prefs: []
  type: TYPE_NORMAL
- en: The popular editor *SublimeText* is used in the following, which, according
    to the license terms at the time these lines are written, can be used free of
    charge during (a principally indefinite) trial period for trying it out, but requires
    the purchase of a license for long-term use. Alternatively, you can use other
    editors, such as Microsoft’s *Visual Studio Code* or *Notepad++*. At the end of
    the day, all that’s needed is any editor that allows you to edit the actual JavaScript
    code and the web page it’s embedded in, and we’ll do everything else in the web
    browser. So even though you are completely free in choosing an editor, it is recommended
    that you choose a tool that supports syntax highlighting for JavaScript and HTML,
    either out-of-the-box or through an appropriate add-in.
  prefs: []
  type: TYPE_NORMAL
- en: If you just want to try JavaScript first and avoid the hassle of having to embed
    your JavaScript code in a web page as much as possible, then web services like
    *JS Bin*, *JS Do* or *Plunker* are of interest to you. These services allow you
    to type JavaScript code directly and execute it without any further hassle. You
    then see your code and the result of its execution in the same browser window.
    In the following chapter, we’ll take a quick look at these web services. However,
    if you are serious about learning and working with JavaScript, you should opt
    for a code editor or a corresponding IDE.
  prefs: []
  type: TYPE_NORMAL
- en: 28.3 Assistance and Documentation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As with all popular programming languages, there are countless sources of information
    on the Internet for JavaScript. However, there is no official, usable documentation
    for JavaScript. ECMA, which sets the official language standard, provides the
    language specification (for version 13 of ECMAScript from June 2023, available
    at ► [https://​262.​ecma-international.​org/​13.​0/​](https://262.ecma-international.org/13.0/)).
    However, this is rather less enjoyable for practical work.
  prefs: []
  type: TYPE_NORMAL
- en: 'Good application-oriented documentation is provided by the Mozilla Foundation
    (► [https://​developer.​mozilla.​org/​en-US/​docs/​Web/​JavaScript](https://developer.mozilla.org/en-US/docs/Web/JavaScript)),
    the organization that succeeded JavaScript inventor Netscape with its *Firefox*
    browser. Here you can find, among other things, a help page for all standard JavaScript
    functions with a general description, the arguments with which the function must
    be called, the return value it provides and some application examples. In addition,
    the help page also shows an overview of the extent to which version the JavaScript
    interpreters of the most important browsers such as Internet Explorer, Edge, Chrome,
    Safari, Firefox or Opera support the function in each case. As an example, take
    a look at the help page for the **sqrt()** function, which takes the square root
    of a number: ► [https://​developer.​mozilla.​org/​en-US/​docs/​Web/​JavaScript/​Reference/​Global_​Objects/​Math/​sqrt](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sqrt).'
  prefs: []
  type: TYPE_NORMAL
- en: In addition, as with practically all known programming languages, the programmer
    forum *StackOverflow* is an excellent source of information for solving concrete
    problems, where you can find qualitatively very good answers for a multitude of
    frequently (and less frequently) occurring problems and, if this should not be
    the case, you can open your own question thread.
  prefs: []
  type: TYPE_NORMAL
- en: Beyond that, of course, there are countless articles, tutorials, blogs, videos,
    and other formats on the internet that—tailored to a wide range of experience
    levels—highlight every conceivable aspect of the popular JavaScript language.
  prefs: []
  type: TYPE_NORMAL
- en: 28.4 Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we looked at how JavaScript is interpreted and what tools are
    needed to write and run JavaScript code.
  prefs: []
  type: TYPE_NORMAL
- en: 'Be sure to take the following points from this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: JavaScript is interpreted by the Web Browser; therefore, you do not need a separate
    interpreter or compiler.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A text editor is sufficient to edit the JavaScript code (and the web page into
    which it is integrated). Integrated development environments such as *NetBeans*
    or *WebStorm* are also available for JavaScript.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The official documentation of JavaScript is rather limited. The best documentation
    to use is the documentation of the Mozilla Foundation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As with many programming languages, in the case of JavaScript *StackOverflow*
    is a good place to go if you have questions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition, there are a lot of “unofficial” sources of information on the Internet,
    which provide good services for all practical programming problems.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
