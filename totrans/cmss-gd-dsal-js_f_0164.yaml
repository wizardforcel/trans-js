- en: Wrapping Up
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
  zh: 总结
- en: So far, we’ve seen how different types of trees can optimize different types
    of problems. `Binary search trees` kept search fast while minimizing the cost
    of insertions, and `heaps` were the perfect tool for building `priority queues`.
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到不同类型的树如何优化不同类型的问题。`二叉搜索树`在保持搜索快速的同时，最小化插入的成本，而`堆`则是构建`优先队列`的完美工具。
- en: In the next chapter, we’ll explore another tree that’s used to power some of
    the most common text-based operations you use on a day-to-day basis.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在下一章，我们将探讨另一种树，这种树用于支持你日常使用的一些最常见的基于文本的操作。
