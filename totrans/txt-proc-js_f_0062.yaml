- en: '| Recipe 51 | Matching Non-ASCII Numerals with the Unicode Property Escape
    |'
  prefs: []
  type: TYPE_TB
- en: Task
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Let’s say you want to match a number in a language that has a different numeral
    system, such as Persian or Vietnamese. Remember Recipe 29, [*Repeating Part of
    a Regex with Quantifiers*](f_0040.xhtml#rcp.quantifiers), where you validated
    a PIN code with regex?
  prefs: []
  type: TYPE_NORMAL
- en: 'This time you want to allow users to use numerals in their own language to
    create a PIN. But, the problem is that the character class for matching digits
    (\d) matches only ASCII digits:'
  prefs: []
  type: TYPE_NORMAL
- en: '[part_2/unicode_property_escapes_p1/upe_p1_ex1.js](http://media.pragprog.com/titles/fkjavascript/code/part_2/unicode_property_escapes_p1/upe_p1_ex1.js)'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | **const** re = */^**\d{4,6}**$/*; |'
  prefs: []
  type: TYPE_TB
- en: '![images/upe_p1_ex1.png](images/upe_p1_ex1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Even setting the Unicode flag won’t help:'
  prefs: []
  type: TYPE_NORMAL
- en: '[part_2/unicode_property_escapes_p1/upe_p1_ex2.js](http://media.pragprog.com/titles/fkjavascript/code/part_2/unicode_property_escapes_p1/upe_p1_ex2.js)'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | **const** re = */^**\d{4,6}**$/*u; |'
  prefs: []
  type: TYPE_TB
- en: '![images/upe_p1_ex2.png](images/upe_p1_ex2.png)'
  prefs: []
  type: TYPE_IMG
- en: You need a solution that lets you verify digits in any language.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Use a Unicode property escape in the form of \p{Number}:'
  prefs: []
  type: TYPE_NORMAL
- en: '[part_2/unicode_property_escapes_p1/upe_p1_ex3.js](http://media.pragprog.com/titles/fkjavascript/code/part_2/unicode_property_escapes_p1/upe_p1_ex3.js)'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | **const** re = */^**\p**{Number}**{4,6}**$/*u; |'
  prefs: []
  type: TYPE_TB
- en: '![images/upe_p1_ex3.png](images/upe_p1_ex3.png)'
  prefs: []
  type: TYPE_IMG
- en: Success! You’ve matched digits in three different languages.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Symbols in the Unicode standard have various properties and property values.
    With Unicode property escapes, regex can match characters based on their Unicode
    properties.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this recipe, we’re using \p{Number} to match every symbol in the Number
    category, including Roman numerals and numbers classified as compatibly equivalent:'
  prefs: []
  type: TYPE_NORMAL
- en: '[part_2/unicode_property_escapes_p1/upe_p1_ex4.js](http://media.pragprog.com/titles/fkjavascript/code/part_2/unicode_property_escapes_p1/upe_p1_ex4.js)'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | **const** re = */^**\p**{Number}**{4,6}**$/*u; |'
  prefs: []
  type: TYPE_TB
- en: '![images/upe_p1_ex4.png](images/upe_p1_ex4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you want to exclude non-decimal numbers, you can use \p{Decimal_Number}
    instead:'
  prefs: []
  type: TYPE_NORMAL
- en: '[part_2/unicode_property_escapes_p1/upe_p1_ex5.js](http://media.pragprog.com/titles/fkjavascript/code/part_2/unicode_property_escapes_p1/upe_p1_ex5.js)'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | **const** re = */**\p**{Decimal_Number}/*u; |'
  prefs: []
  type: TYPE_TB
- en: '![images/upe_p1_ex5.png](images/upe_p1_ex5.png)'
  prefs: []
  type: TYPE_IMG
- en: Remember, it’s possible to use Unicode property escapes only when the u flag
    is set. If no u flag is present, then the pattern \p is a redundant escape sequence
    for the letter p. This is by design so that existing patterns that might use \p{
    ... } wouldn’t break with the introduction of the Unicode property escapes into
    the language.
  prefs: []
  type: TYPE_NORMAL
- en: '| Negated Unicode Property Escapes |'
  prefs: []
  type: TYPE_TB
- en: '| --- |'
  prefs: []
  type: TYPE_TB
- en: '| ![images/aside-icons/note.png](images/aside-icons/note.png) | Unicode property
    escapes also have a negated version denoted by \P{ ... }, which lets you match
    the opposite of what they normally match. For example, if you wanted to match
    a string that doesn’t have a number, you’d write:/^\P{Number}+$/u |'
  prefs: []
  type: TYPE_TB
- en: In this recipe, we used \p{Number} to match symbols in the Number category,
    but you can also match other types of symbols. The next recipe shows you how to
    take advantage of Unicode property escapes to match a word character.
  prefs: []
  type: TYPE_NORMAL
