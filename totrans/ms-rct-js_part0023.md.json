["```jsjavascript\n\nlet age = 25;\n\nlet price = 9.99;\n\n```", "```jsjavascript\n\nlet name = \"John Doe\";\n\nlet message = 'Welcome to JavaScript!';\n\n```", "```jsjavascript\n\nlet isStudent = true;\n\nlet hasAccount = false;\n\n```", "```jsjavascript\n\nlet user = null;\n\n```", "```jsjavascript\n\nlet city;\n\nconsole.log(city); // Output: undefined\n\n```", "```jsjavascript\n\nconst id = Symbol('unique identifier');\n\n```", "```jsjavascript\n\nlet person = {\n\nname: 'Alice',\n\nage: 30,\n\nisStudent: false\n\n};\n\n```", "```jsjavascript\n\nlet fruits = ['apple', 'banana', 'orange'];\n\n```", "```jsjavascript\n\nfunction add(a, b) {\n\nreturn a + b;\n\n}\n\n```", "```jsjavascript\n\n// Example 1: Using var to declare a variable\n\nvar age = 25;\n\nconsole.log(age); // Output: 25\n\n```", "```jsjavascript\n\n// Example 2: Using let and const to declare variables\n\nlet name = 'John Doe';\n\nconst PI = 3.14;\n\nconsole.log(name); // Output: John Doe\n\nconsole.log(PI); // Output: 3.14\n\n```", "```jsjavascript\n\n// Example 3: Assigning values to variables\n\nlet x = 10;\n\nlet y = 20;\n\nconsole.log(x); // Output: 10\n\nconsole.log(y); // Output: 20\n\n```", "```jsjavascript\n\n// Example 4: Reassigning variables with let\n\nlet count = 5;\n\ncount = 10;\n\nconsole.log(count); // Output: 10\n\n// Example 5: Attempting to reassign a const variable (will throw an error)\n\nconst PI = 3.14;\n\nPI = 3.14159; // TypeError: Assignment to constant variable.\n\n```", "```jsjavascript\n\n// Example 6: Global scope\n\nlet globalVar = 'I am a global variable';\n\nfunction myFunction() {\n\nconsole.log(globalVar); //\n\nOutput: I am a global variable\n\n}\n\nmyFunction();\n\n```", "```jsjavascript\n\n// Example 7: Local scope\n\nfunction myFunction() {\n\nlet localVar = 'I am a local variable';\n\nconsole.log(localVar); // Output: I am a local variable\n\n}\n\nmyFunction();\n\n// console.log(localVar); // ReferenceError: localVar is not defined\n\n```", "```jsjavascript\n\n// Example 8: Hoisting\n\nconsole.log(name); // Output: undefined\n\nvar name = 'John Doe';\n\nconsole.log(name); // Output: John Doe\n\n```", "```jsjavascript\n\n// Example 9: Using constants\n\nconst PI = 3.14;\n\nconsole.log(PI); // Output: 3.14\n\n// Attempting to reassign a constant (will throw an error)\n\nPI = 3.14159; // TypeError: Assignment to constant variable.\n\n```", "```jsjavascript\n\n// Example 10: String conversion\n\nlet num = 42;\n\nlet str = num.toString();\n\nconsole.log(str); // Output: \"42\"\n\nlet value = true;\n\nlet strValue = String(value);\n\nconsole.log(strValue); // Output: \"true\"\n\n```", "```jsjavascript\n\n// Example 11: Number conversion\n\nlet strNum = \"42\";\n\nlet parsedNum = parseInt(strNum);\n\nconsole.log(parsedNum); // Output: 42\n\nlet floatValue = \"3.14\";\n\nlet parsedFloat = parseFloat(floatValue);\n\nconsole.log(parsedFloat); // Output: 3.14\n\nlet boolValue = true;\n\nlet numValue = Number(boolValue);\n\nconsole.log(numValue); // Output: 1\n\n```", "```jsjavascript\n\n// Example 12: Boolean conversion\n\nlet numValue = 42;\n\nlet boolValue = Boolean(numValue);\n\nconsole.log(boolValue); // Output: true\n\nlet emptyString = \"\";\n\nlet isEmpty = Boolean(emptyString);\n\nconsole.log(isEmpty); // Output: false\n\n```", "```jsjavascript\n\n// Example 13: Type coercion\n\nlet result = 10 + \"5\";\n\nconsole.log(result); // Output: \"105\"\n\n```", "```jsjavascript\n\n// Example 14: NaN and type checking\n\nlet result = \"hello\" - 5;\n\nconsole.log(result); // Output: NaN\n\nconsole.log(typeof NaN); // Output: \"number\"\n\nconsole.log(isNaN(result)); // Output: true\n\n```", "```jsjavascript\n\n// Example 15: Using the typeof operator\n\nlet age = 25;\n\nlet name = \"John Doe\";\n\nlet isStudent = true;\n\nlet user = null;\n\nconsole.log(typeof age); // Output: \"number\"\n\nconsole.log(typeof name); // Output: \"string\"\n\nconsole.log(typeof isStudent); // Output: \"boolean\"\n\nconsole.log(typeof user); // Output: \"object\"\n\n```", "```jsjavascript\n\n// Example 16: String methods\n\nlet message = \"Hello, World!\";\n\nconsole.log(message.length); // Output: 13\n\nconsole.log(message.toUpperCase()); // Output: \"HELLO, WORLD!\"\n\nconsole.log(message.toLowerCase()); // Output: \"hello, world!\"\n\nconsole.log(message.indexOf(\"o\")); // Output: 4\n\nconsole.log(message.lastIndexOf(\"o\")); // Output: 8\n\nconsole.log(message.slice(7, 12)); // Output: \"World\"\n\nconsole.log(message.substring(7, 12)); // Output: \"World\"\n\nconsole.log(message.substr(7, 5)); // Output: \"World\"\n\n```", "```jsjavascript\n\n// Example 17: Number methods\n\nlet num = 3.14159;\n\nconsole.log(num.toFixed(2)); // Output: \"3.14\"\n\nconsole.log(num.toPrecision(4)); // Output: \"3.142\"\n\nconsole.log(Math.round(num)); // Output: 3\n\nconsole.log(Math.floor(num)); // Output: 3\n\nconsole.log(Math.ceil(num)); // Output: 4\n\nconsole.log(Math.random()); // Output: A random number between 0 and 1\n\nconsole.log(Math.floor(Math.random() * 10) + 1); // Output: A random integer between 1 and 10\n\n```", "```jsjavascript\n\n// Example 18: Array methods\n\nlet fruits = [\"apple\", \"banana\", \"orange\"];\n\nconsole.log(fruits.length); // Output: 3\n\nfruits.push(\"grape\"); // Adds \"grape\" to the end of the array\n\nconsole.log(fruits); // Output: [\"apple\", \"banana\", \"orange\", \"grape\"]\n\nfruits.pop(); // Removes the last element from the array\n\nconsole.log(fruits); // Output: [\"apple\", \"banana\", \"orange\"]\n\nfruits.unshift(\"pear\"); // Adds \"pear\" to the beginning of the array\n\nconsole.log(fruits); // Output: [\"pear\", \"apple\", \"banana\", \"orange\"]\n\nfruits.shift(); // Removes the first element from the array\n\nconsole.log(fruits); // Output: [\"apple\", \"banana\", \"orange\"]\n\nconsole.log(fruits.indexOf(\"banana\")); // Output: 1\n\nconsole.log(fruits.includes(\"orange\")); // Output: true\n\nlet slicedFruits = fruits.slice(1, 3);\n\nconsole.log(slicedFruits); // Output: [\"banana\", \"orange\"]\n\n```", "```jsjavascript\n\n// Example 19: Working with objects\n\nlet person = {\n\nname: \"John Doe\",\n\nage: 30,\n\nisStudent: false\n\n};\n\nconsole.log(person.name); // Output: \"John Doe\"\n\nconsole.log(person.age); // Output: 30\n\nperson.location = \"New York\"; // Adding a new property to the object\n\nconsole.log(person); // Output: { name: 'John Doe', age: 30, isStudent: false, location: 'New York' }\n\ndelete person.isStudent; // Removing a property from the object\n\nconsole.log(person); // Output: { name: 'John Doe', age: 30, location: 'New York' }\n\nconsole.log(Object.keys(person)); // Output: [ 'name', 'age', 'location' ]\n\nconsole.log(Object.values(person)); // Output: [ 'John Doe', 30, 'New York' ]\n\n```"]