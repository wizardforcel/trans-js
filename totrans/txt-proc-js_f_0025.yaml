- en: '| Recipe 15 | Adding Thousand Separators to Numbers with Intl.NumberFormat()
    |'
  prefs: []
  type: TYPE_TB
- en: Task
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Suppose you aim to add a thousands separator to numbers consisting of four or
    more digits. Perhaps you are retrieving financial data from a database to use
    in an article for a finance publication that is published in multiple languages.
  prefs: []
  type: TYPE_NORMAL
- en: Thousand separators are used in many different languages and countries to make
    large numbers easier to read. However, the character used as the thousand separator
    can vary across languages and cultures.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, let’s say you have the following string:'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | 1000000000 |'
  prefs: []
  type: TYPE_TB
- en: 'And you’d like to format it as:'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | 1,000,000,000 |'
  prefs: []
  type: TYPE_TB
- en: You need to write code to add thousand separators programmatically to the number.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Use the Intl.NumberFormat() constructor:'
  prefs: []
  type: TYPE_NORMAL
- en: '[part_1/adding_thousand_separators/adding_thousand_separators_ex1.js](http://media.pragprog.com/titles/fkjavascript/code/part_1/adding_thousand_separators/adding_thousand_separators_ex1.js)'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | **function** addThousandSeparator(num, locale) { |'
  prefs: []
  type: TYPE_TB
- en: '|   | **const** numFormat = **new** Intl.NumberFormat(locale); |'
  prefs: []
  type: TYPE_TB
- en: '|   | **return** numFormat.format(num); |'
  prefs: []
  type: TYPE_TB
- en: '|   | } |'
  prefs: []
  type: TYPE_TB
- en: '|   |  |'
  prefs: []
  type: TYPE_TB
- en: '|   | addThousandSeparator(1000000000, *"en"*); |'
  prefs: []
  type: TYPE_TB
- en: '|   | *// → "1,000,000,000"* |'
  prefs: []
  type: TYPE_TB
- en: In this code, new Intl.NumberFormat() creates a NumberFormat object. Then, the
    format() method is called on the object, passing the “en” argument to specify
    the English language. The function returns a formatted string with thousand separators
    added based on the locale.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Including thousand separators in numerical values is an easy way to enhance
    the clarity and visual appeal of your data. But, it’s crucial to verify the type
    of the content before proceeding.
  prefs: []
  type: TYPE_NORMAL
- en: The comma (,) is commonly used as a thousand separator in English-speaking countries
    and many other countries. For example, 10,000,000 represents ten million. However,
    in many European countries, such as Germany, Greece, and Italy, the period (.)
    is used as the thousand separator and the comma (,) is used as the decimal separator.
    So, to represent ten million, they use 10.000.000.
  prefs: []
  type: TYPE_NORMAL
- en: In some countries, other symbols or characters are used as the thousand separator.
    For example, the Indian numbering system uses a comma-like symbol called a “separator”
    to separate groups of digits. While the Chinese and Japanese numeral systems use
    different characters to represent thousands, millions, and other large numbers.
  prefs: []
  type: TYPE_NORMAL
- en: Generally, numbers that are less than 1000 don’t need separators. Also, numbers
    in scientific notation, postal codes, and phones do not require separators for
    clarity. As a result, documents and data that consist of such numbers may not
    be suitable for automatic comma inclusion.
  prefs: []
  type: TYPE_NORMAL
- en: 'The solution in this recipe can be adapted to add thousand separators to numbers
    in various numeral systems. For instance, to include thousand separators following
    the German language conventions, you can pass “de-DE” (a BCP-47 language tag)
    to the NumberFormat() constructor, as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '[part_1/adding_thousand_separators/adding_thousand_separators_ex2.js](http://media.pragprog.com/titles/fkjavascript/code/part_1/adding_thousand_separators/adding_thousand_separators_ex2.js)'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | **function** addThousandSeparator(num, locale) { |'
  prefs: []
  type: TYPE_TB
- en: '|   | **const** numFormat = **new** Intl.NumberFormat(locale); |'
  prefs: []
  type: TYPE_TB
- en: '|   | **return** numFormat.format(num); |'
  prefs: []
  type: TYPE_TB
- en: '|   | } |'
  prefs: []
  type: TYPE_TB
- en: '|   |  |'
  prefs: []
  type: TYPE_TB
- en: '|   | addThousandSeparator(1000000000, *"de-DE"*); |'
  prefs: []
  type: TYPE_TB
- en: '|   | *// → "1.000.000.000"* |'
  prefs: []
  type: TYPE_TB
- en: Remember, the thousand separator character is not universal and may differ across
    countries and written languages. Also, the specific formatting conventions may
    vary depending on the context, such as in scientific notation, where commas are
    generally not used. To extract a number with thousand separators from a string,
    see Recipe 69, [*Matching Formatted Numbers with Thousand Separators*](f_0081.xhtml#rcp.matching_thousand_separators).
  prefs: []
  type: TYPE_NORMAL
