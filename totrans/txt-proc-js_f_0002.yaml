- en: Table of Contents
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[ Acknowledgments](f_0004.xhtml#ch.acknowledgements)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[ Preface](f_0005.xhtml#chp.preface)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Who Is This Book For?](f_0006.xhtml#d24e171)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[What You Should Know](f_0007.xhtml#d24e178)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[What’s in This Book?](f_0008.xhtml#d24e194)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Online Resources](f_0009.xhtml#d24e209)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[1\. Part I: Text Processing with Built-in JavaScript Methods](f_0010.xhtml#chp.part_1)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 1\. Determining If a Value Is a String with the typeof Operator](f_0011.xhtml#rcp.typeChecking)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 2\. Checking a String for Specific Words with includes()](f_0012.xhtml#rcp.includes)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 3\. Matching the Beginning or End of a String with startsWith() and
    endsWith()](f_0013.xhtml#rcp.start_end)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 4\. Extracting Lists from Text with slice()](f_0014.xhtml#rcp.slice)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 5\. Converting Color Names to Hexadecimal Values with the Canvas Element](f_0015.xhtml#rcp.color_to_hex)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 6\. Adding Transparency to Hex Colors](f_0016.xhtml#rcp.adding_transparency_to_hex)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 7\. Removing HTML Tags from Text with DOMParser()](f_0017.xhtml#rcp.DOMParser)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 8\. Converting HTML Markup to HTML Entities with replaceAll()](f_0018.xhtml#rcp.entities)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 9\. Intersecting HTML Tables with filter()](f_0019.xhtml#rcp.filter)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 10\. Generating HTML Tables from an Array of Arrays](f_0020.xhtml#rcp.generating_html_table)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 11\. Generating HTML Tables from an Array of Objects](f_0021.xhtml#rcp.generating_html_table_v2)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 12\. Displaying Tabular Data in Console with console.table()](f_0022.xhtml#rcp.displaying_tabular_data)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 13\. Formatting Dates with Intl.DateTimeFormat()](f_0023.xhtml#rcp.DateFormatting)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 14\. Formatting Currencies with Intl.NumberFormat()](f_0024.xhtml#rcp.NumberFormat)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 15\. Adding Thousand Separators to Numbers with Intl.NumberFormat()](f_0025.xhtml#rcp.adding_thousand_separators)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 16\. Creating Language-Sensitive Lists with Intl.ListFormat()](f_0026.xhtml#rcp.ListFormat)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 17\. Determining Letter Case with charAt()](f_0027.xhtml#rcp.charAt)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 18\. Counting Unicode Characters with Intl.Segmenter()](f_0028.xhtml#rcp.charSegmenter)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 19\. Counting Words in a String with Intl.Segmenter()](f_0029.xhtml#rcp.wordSegmenter)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 20\. Counting the Number of a Specific Word with split()](f_0030.xhtml#rcp.counting_specific_word)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 21\. Equalizing Incompatible Characters with normalize()](f_0031.xhtml#rcp.normalize)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 22\. Copying Text to Clipboard with the Clipboard API](f_0032.xhtml#rcp.clipboard)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[2\. Part II: Text Processing with Regular Expressions](f_0033.xhtml#chp.part_2)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 23\. Creating Your First Regular Expression](f_0034.xhtml#rcp.first_regex)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 24\. Asserting the Start or End of a String with ^ and $](f_0035.xhtml#rcp.dollar)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 25\. Looking For Whole Words Only with the Word Boundary (\b)](f_0036.xhtml#rcp.word_boundary)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 26\. Matching One of Several Alternatives with the Vertical Bar (|)](f_0037.xhtml#rcp.vertical_bar)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 27\. Matching One of Several Characters with the Character Class](f_0038.xhtml#rcp.character_class)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 28\. Matching a Range of Characters with Character Classes](f_0039.xhtml#rcp.character_class_range)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 29\. Repeating Part of a Regex with Quantifiers](f_0040.xhtml#rcp.quantifiers)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 30\. Treating Multiple Characters as a Single Unit with the Capturing
    Group](f_0041.xhtml#rcp.capturing_group_p1)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 31\. Extracting a Matched Value with the Capturing Group](f_0042.xhtml#rcp.capturing_group_p2)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 32\. Excluding Groups from Result with the Non-capturing Group](f_0043.xhtml#rcp.non_capturing_group)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 33\. Reading Groups with Ease Using Named Capturing Groups](f_0044.xhtml#rcp.named_capturing_group)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 34\. Using Special Replacement Patterns](f_0045.xhtml#rcp.replacement_patterns)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 35\. Taking Away the Special Meaning of Replacement Patterns](f_0046.xhtml#rcp.neutralizing_replacement)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 36\. Using a Function as the Replacement Pattern](f_0047.xhtml#rcp.replacement_function)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 37\. Escaping Metacharacters with the Backslash](f_0048.xhtml#rcp.backslash)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 38\. Creating Lazy Quantifiers with the Question Mark](f_0049.xhtml#rcp.lazy)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 39\. Global and Case-Insensitive Matching with the g and i Flags](f_0050.xhtml#rcp.flag_ig)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 40\. Generating Indices for Matches with the d Flag](f_0051.xhtml#rcp.flag_d)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 41\. Forcing ^ and $ to Match at the Start and End of a Line with the
    m Flag](f_0052.xhtml#rcp.flag_m)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 42\. Forcing . to Match Newline Characters with the s Flag](f_0053.xhtml#rcp.flag_s)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 43\. Enabling Unicode Features with the u Flag](f_0054.xhtml#rcp.flag_u)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 44\. Searching from a Specific Index with the y Flag](f_0055.xhtml#rcp.flag_y)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 45\. Modifying an Existing Regex Literal](f_0056.xhtml#rcp.modifying_regex)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 46\. Referencing a Matched String with the Backreference](f_0057.xhtml#rcp.backreference)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 47\. Testing a Pattern with the Positive Lookahead](f_0058.xhtml#rcp.positive_lookahead)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 48\. Testing a Pattern with the Negative Lookahead](f_0059.xhtml#rcp.negative_lookahead)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 49\. Testing a Pattern with the Positive Lookbehind](f_0060.xhtml#rcp.positive_lookbehind)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 50\. Testing a Pattern with the Negative Lookbehind](f_0061.xhtml#rcp.negative_lookbehind)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 51\. Matching Non-ASCII Numerals with the Unicode Property Escape](f_0062.xhtml#rcp.unicode_property_escapes_p1)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 52\. Matching Non-ASCII Words with the Unicode Property Escape](f_0063.xhtml#rcp.unicode_property_escapes_p2)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 53\. Matching Unicode Word Boundaries with the Unicode Property Escape](f_0064.xhtml#rcp.unicode_property_escapes_p3)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[3\. Part III: Mastering Text Processing in JavaScript](f_0065.xhtml#chp.part_3)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 54\. Validating Email Addresses](f_0066.xhtml#rcp.email)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 55\. Validating Password Strength](f_0067.xhtml#rcp.password)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 56\. Validating Social Security Numbers](f_0068.xhtml#rcp.ssn)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 57\. Validating ZIP Codes](f_0069.xhtml#rcp.zipcode)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 58\. Validating Canadian Postal Codes](f_0070.xhtml#rcp.ca_postal)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 59\. Removing Duplicate Lines](f_0071.xhtml#rcp.removing_dup_lines_v1)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 60\. Removing Duplicate Lines Separated by Other Lines](f_0072.xhtml#rcp.removing_dup_lines_v2)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 61\. Removing Duplicate Spaces](f_0073.xhtml#rcp.removing_dup_spaces)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 62\. Removing Duplicate Whitespaces](f_0074.xhtml#rcp.removing_dup_whitespaces)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 63\. Replacing Duplicate Whitespaces with the Same Type](f_0075.xhtml#rcp.replacing_whitespaces_same_type)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 64\. Extracting Text Enclosed in Double Quotes](f_0076.xhtml#rcp.extracting_text_in_double_quotes)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 65\. Extracting Text Enclosed in Single Quotes](f_0077.xhtml#rcp.extracting_text_in_single_quotes)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 66\. Escaping a String for Use in a Regex](f_0078.xhtml#rcp.escaping_metacharacters)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 67\. Striping Invalid Characters from Filenames](f_0079.xhtml#rcp.striping_invalid_characters)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 68\. Matching Floating-Point Numbers](f_0080.xhtml#rcp.floating_point)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 69\. Matching Formatted Numbers with Thousand Separators](f_0081.xhtml#rcp.matching_thousand_separators)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 70\. Matching Nearby Words](f_0082.xhtml#rcp.proximity_search)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 71\. Highlighting Sentences Containing a Specific Word](f_0083.xhtml#rcp.highlighting_sentences)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 72\. Highlighting Text in Real Time](f_0084.xhtml#rcp.highlighting_in_realtime)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Recipe 73\. Converting Plain Text into HTML-Ready Markup](f_0085.xhtml#rcp.converting_text_to_html)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Wrapping Up](f_0086.xhtml#d24e26621)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[May I Request a Favor from You?](f_0087.xhtml#d24e26719)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[A1\. What Is Unicode?](f_0088.xhtml#apx1)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[A2\. Implementing Regex in JavaScript](f_0089.xhtml#apx2)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[test()](f_0090.xhtml#d24e27025)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[exec()](f_0091.xhtml#d24e27179)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[match()](f_0092.xhtml#d24e27474)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[matchAll()](f_0093.xhtml#d24e27652)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[search()](f_0094.xhtml#d24e27792)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[replace()](f_0095.xhtml#d24e27856)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[replaceAll()](f_0096.xhtml#d24e27937)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[split()](f_0097.xhtml#d24e28132)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Conclusion](f_0098.xhtml#d24e28266)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[A3\. Testing Regex with Specialized Tools](f_0099.xhtml#apx3)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[RegexPal](f_0100.xhtml#d24e28403)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[RegExr](f_0101.xhtml#d24e28420)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Regex101](f_0102.xhtml#d24e28437)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[RegexBuddy](f_0103.xhtml#d24e28457)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Regex Vis](f_0104.xhtml#d24e28481)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[A4\. Regular Expression Cheat Sheet](f_0105.xhtml#apx4)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Character Classes](f_0106.xhtml#d24e28527)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Quantifiers](f_0107.xhtml#d24e28589)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Boundary Assertions](f_0108.xhtml#d24e28634)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Lookaround Assertions](f_0109.xhtml#d24e28664)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Groups and Backreferences](f_0110.xhtml#d24e28704)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Flags](f_0111.xhtml#d24e28750)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[Unicode Property Escapes](f_0112.xhtml#d24e28810)'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Copyright © 2024, The Pragmatic Bookshelf.
  prefs: []
  type: TYPE_NORMAL
