- en: The Base Case
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s continue our walk-through of the countdown function. We’ll skip a few
    steps for brevity…
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 21: We call countdown(0).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 22: We print number (that is, 0) to the console.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 23: We call countdown(-1).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Step 24: We print number (that is, -1) to the console.'
  prefs: []
  type: TYPE_NORMAL
- en: Uh-oh. As you can see, our solution isn’t perfect, as we’ll end up infinitely
    printing negative numbers.
  prefs: []
  type: TYPE_NORMAL
- en: To perfect our solution, we need a way to end our countdown at 0 and prevent
    the recursion from continuing on forever.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can solve this problem by adding a conditional statement that ensures that
    if number is currently 0, we don’t call countdown() again:'
  prefs: []
  type: TYPE_NORMAL
- en: '| ​  | ​**function**​ countdown(number) { |'
  prefs: []
  type: TYPE_TB
- en: '| ​  | console.log(number); |'
  prefs: []
  type: TYPE_TB
- en: '| ​  |  |'
  prefs: []
  type: TYPE_TB
- en: '| ​  | ​**if**​ (number === 0) { |'
  prefs: []
  type: TYPE_TB
- en: '| ​  | ​**return**​; |'
  prefs: []
  type: TYPE_TB
- en: '| ​  | } ​**else**​ { |'
  prefs: []
  type: TYPE_TB
- en: '| ​  | countdown(number - 1); |'
  prefs: []
  type: TYPE_TB
- en: '| ​  | } |'
  prefs: []
  type: TYPE_TB
- en: '| ​  | } |'
  prefs: []
  type: TYPE_TB
- en: Now when number is 0, our code will not call the countdown() function again
    but instead just return, thereby preventing another call of countdown().
  prefs: []
  type: TYPE_NORMAL
- en: In recursion terminology, the case in which our function will not recurse is
    known as the base case. So 0 is the base case for our countdown() function. Again,
    every recursive function needs at least one base case to prevent it from calling
    itself indefinitely.
  prefs: []
  type: TYPE_NORMAL
