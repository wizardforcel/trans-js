- en: Searching
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
  zh: 搜索
- en: As you know, searching means looking for a value within the list and returning
    its index. We’ve seen that linear search on an array has a speed of O(N), since
    the computer needs to inspect each value one at a time.
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 正如你所知道的，搜索意味着在列表中查找一个值并返回它的索引。我们已经看到，数组的线性搜索速度为 O(N)，因为计算机需要逐个检查每个值。
- en: Linked lists also have a search speed of O(N). To search for a value, we need
    to go through a similar process to the one we did with reading; that is, we begin
    with the head and follow the links of each node to the next one. Along the way,
    we inspect each value until we find what we’re looking for.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 链表的搜索速度也是 O(N)。为了搜索一个值，我们需要经过一个类似于读取的过程；也就是说，我们从头节点开始，沿着每个节点的链接前往下一个节点。在这个过程中，我们检查每个值，直到找到我们要找的内容。
- en: 'Code Implementation: Linked List Search'
  id: totrans-3
  prefs:
  - PREF_H3
  stylish: true
  type: TYPE_NORMAL
  zh: 代码实现：链表搜索
- en: 'Here’s how we can implement the search operation in JavaScript. We’ll call
    this method `search` and pass in the value we’re searching for:'
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 下面是我们如何在 JavaScript 中实现搜索操作。我们将这个方法称为`search`，并传入我们要搜索的值：
- en: '| ​  | `search(value) {` |'
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `search(value) {` |'
- en: '| ​  | `let` currentNode = `this`.firstNode; |'
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `let` currentNode = `this`.firstNode; |'
- en: '| ​  | `let` currentIndex = 0; |'
  id: totrans-7
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `let` currentIndex = 0; |'
- en: '| ​  |  |'
  id: totrans-8
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `while` (`true`) { |'
  id: totrans-9
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `while` (`true`) { |'
- en: '| ​  | `if` (currentNode.data === value) { |'
  id: totrans-10
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `if` (currentNode.data === value) { |'
- en: '| ​  | `return` currentIndex; |'
  id: totrans-11
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` currentIndex; |'
- en: '| ​  | } |'
  id: totrans-12
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  |  |'
  id: totrans-13
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | currentNode = currentNode.nextNode; |'
  id: totrans-14
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | currentNode = currentNode.nextNode; |'
- en: '| ​  |  |'
  id: totrans-15
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `if` (!currentNode) { |'
  id: totrans-16
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `if` (!currentNode) { |'
- en: '| ​  | `break`; |'
  id: totrans-17
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `break`; |'
- en: '| ​  | } |'
  id: totrans-18
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  |  |'
  id: totrans-19
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | currentIndex += 1; |'
  id: totrans-20
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | currentIndex += 1; |'
- en: '| ​  | } |'
  id: totrans-21
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  |  |'
  id: totrans-22
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `return` `null`; |'
  id: totrans-23
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` `null`; |'
- en: '| ​  | } |'
  id: totrans-24
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: 'We can then search for any value within the list, like so:'
  id: totrans-25
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 然后，我们可以在列表中搜索任何值，如下所示：
- en: '| ​  | `list.search`(`''time''`); |'
  id: totrans-26
  prefs: []
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `list.search`(`''time''`); |'
- en: Using this, we would get back the index of where `time` is located within the
    list. In our example above, this would be 3.
  id: totrans-27
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 使用这个方法，我们可以得到`time`在列表中的索引。在我们上面的例子中，这个索引是 3。
- en: As you can see, the mechanics of searching are similar to reading. The main
    difference is that the loop doesn’t stop at a particular index but runs until
    we either find the value or reach the end of the list.
  id: totrans-28
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 正如你所看到的，搜索的机制类似于读取。主要的区别在于循环并不会停在特定的索引，而是一直运行，直到我们找到值或到达列表的末尾。
