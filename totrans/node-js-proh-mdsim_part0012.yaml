- en: 'Chapter 8: Implementing Search in our Blogging Application'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章：在我们的博客应用中实现搜索
- en: In this chapter, we'll enhance our blogging application by adding a search functionality
    that allows users to search for specific blog posts based on keywords. Implementing
    search will improve the user experience and make it easier for users to find relevant
    content. Let's get started!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将通过添加搜索功能来增强我们的博客应用，允许用户根据关键词搜索特定的博客文章。实现搜索将改善用户体验，并使用户更容易找到相关内容。让我们开始吧！
- en: 8.1 Setting Up Search Index
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.1 设置搜索索引
- en: 'To enable search functionality, we''ll use a powerful search engine called
    Elasticsearch. Follow these steps to set up Elasticsearch in your application:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 为了启用搜索功能，我们将使用一个强大的搜索引擎——Elasticsearch。按照以下步骤在你的应用中设置Elasticsearch：
- en: 8.1.1 Install Elasticsearch
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 8.1.1 安装Elasticsearch
- en: First, you'll need to install Elasticsearch on your system. Visit the official
    Elasticsearch website (https://www.elastic.co/downloads/elasticsearch) and download
    the appropriate version for your operating system. Follow the installation instructions
    provided by Elasticsearch to complete the installation process.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要在你的系统上安装Elasticsearch。访问Elasticsearch的官方网站（https://www.elastic.co/downloads/elasticsearch）并下载适用于你操作系统的版本。按照Elasticsearch提供的安装说明完成安装过程。
- en: 8.1.2 Create Elasticsearch Index
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 8.1.2 创建Elasticsearch索引
- en: 'Once Elasticsearch is installed, you need to create an index to store your
    blog posts. An index is similar to a database table and is used to organize and
    store your data. In your terminal, run the following command to create an index
    named "blog_posts":'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了Elasticsearch，你需要创建一个索引来存储你的博客文章。索引类似于数据库表，用于组织和存储数据。在终端中运行以下命令来创建一个名为"blog_posts"的索引：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 8.1.3 Install Elasticsearch Client Library
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 8.1.3 安装Elasticsearch客户端库
- en: 'To interact with Elasticsearch from our Node.js application, we''ll use the
    official Elasticsearch JavaScript client library called "elasticsearch". Install
    it by running the following command in your project directory:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在我们的Node.js应用中与Elasticsearch进行交互，我们将使用官方的Elasticsearch JavaScript客户端库，名为"elasticsearch"。在你的项目目录中运行以下命令来安装它：
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: With Elasticsearch set up and the client library installed, we can proceed to
    implement the search functionality.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 设置好Elasticsearch并安装客户端库后，我们可以继续实现搜索功能。
- en: 8.2 Implementing Search Route
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.2 实现搜索路由
- en: 'Let''s start by creating a new route to handle search requests. In the `routes/search.js`
    file, add the following code:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们先从创建一个新路由来处理搜索请求开始。在`routes/search.js`文件中，添加以下代码：
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In this code, we create a new route that handles GET requests to the `/search`
    endpoint. We extract the search query from the request query parameters.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，我们创建了一个新路由来处理对`/search`端点的GET请求。我们从请求的查询参数中提取搜索查询。
- en: Using the Elasticsearch client, we perform a search query on the "blog_posts"
    index. We use a match query to search for the provided query in the "content"
    field of the blog posts. The search results are returned as hits, and we map them
    to extract the source (the blog post data).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Elasticsearch客户端，我们对"blog_posts"索引执行搜索查询。我们使用匹配查询在博客帖子的"content"字段中搜索提供的查询内容。搜索结果作为命中返回，我们将其映射以提取源数据（即博客帖子的内容）。
- en: If the search is successful, we return a 200 status code with the hits as JSON.
    If there's an error, we return a 500 status code with an error message.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果搜索成功，我们返回一个200状态码，并将命中结果以JSON格式返回。如果出现错误，我们返回一个500状态码，并附带错误信息。
- en: 8.3 Updating Blog Post Creation Route
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.3 更新博客帖子创建路由
- en: 'To keep the search index up to date, we need to update the route that creates
    new blog posts. In the `routes/posts.js` file, update the create route as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持搜索索引的最新状态，我们需要更新创建新博客帖子的路由。在`routes/posts.js`文件中，按以下方式更新创建路由：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In this code, after saving the new post to the database, we index the post in
    Elasticsearch using the client's `index` method. We specify the index as "blog_posts"
    and provide the post's title and content as the body of the index request.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，在将新帖子保存到数据库后，我们使用客户端的`index`方法将帖子索引到Elasticsearch中。我们指定索引为"blog_posts"，并将帖子的标题和内容作为索引请求的主体。
- en: This ensures that the newly created post is added to the search index, allowing
    it to be searchable.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这确保了新创建的帖子被添加到搜索索引中，从而使其可以被搜索。
- en: 8.4 Adding Search Form to Frontend
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.4 将搜索表单添加到前端
- en: 'To allow users to perform searches, we''ll add a search form to the frontend.
    Update your blog''s homepage template (e.g., `views/home.ejs`) with the following
    code:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了允许用户进行搜索，我们将在前端添加一个搜索表单。更新你博客的主页模板（例如，`views/home.ejs`），并添加以下代码：
- en: '[PRE4]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This code adds a simple search form with an input field for the search query
    and a submit button. The form's action is set to the `/search` endpoint, which
    we defined in the backend.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码添加了一个简单的搜索表单，其中包括一个用于输入搜索查询的文本框和一个提交按钮。表单的`action`设置为`/search`端点，这是我们在后端定义的。
- en: 8.5 Displaying Search Results
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.5 显示搜索结果
- en: 'To display the search results on a dedicated search results page, create a
    new template file called `search_results.ejs` in your views directory. Add the
    following code to the file:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要在专用的搜索结果页面上显示搜索结果，请在你的视图目录中创建一个新的模板文件，命名为`search_results.ejs`。在文件中添加以下代码：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In this code, we iterate over the `results` array passed from the server and
    display each search result's title and content. If no results are found, we display
    a message indicating that no results were found.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，我们遍历从服务器传递过来的`results`数组，并显示每个搜索结果的标题和内容。如果没有找到结果，我们会显示一条消息，指示未找到任何结果。
- en: 8.6 Summary
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 8.6 总结
- en: Congratulations! In this chapter, we implemented search functionality in our
    blogging application using Elasticsearch. Users can now search for specific blog
    posts based on keywords, enhancing the overall user experience.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！在这一章节中，我们通过Elasticsearch在博客应用中实现了搜索功能。现在用户可以根据关键词搜索特定的博客文章，从而提升整体用户体验。
- en: We set up Elasticsearch, created a search route, updated the blog post creation
    route to index posts, added a search form to the frontend, and displayed the search
    results on a dedicated page.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设置了Elasticsearch，创建了搜索路由，更新了博客文章创建路由以便索引文章，添加了一个搜索表单到前端，并在专门的页面上展示了搜索结果。
