["```jsbash\n\nnpm init\n\n```", "```jsbash\n\nnpm install express\n\n```", "```jsjavascript\n\n// Example 1: Creating a Simple HTTP Server with Express\n\nconst express = require('express');\n\nconst app = express();\n\nconst port = 3000;\n\napp.get('/', (req, res) => {\n\nres.send('Hello, World!');\n\n});\n\napp.listen(port, () => {\n\nconsole.log(`Server is running on http://localhost:${port}`);\n\n});\n\n```", "```jsjavascript\n\n// Example 2: Handling Different HTTP Requests\n\napp.get('/users', (req, res) => {\n\n// Code to retrieve and send a list of users\n\n});\n\napp.post('/users', (req, res) => {\n\n// Code to create a new user\n\n});\n\napp.put('/users/:id', (req, res) => {\n\n// Code to update a user with the given ID\n\n});\n\napp.delete('/users/:id', (req, res) => {\n\n// Code to delete a user with the given ID\n\n});\n\n```", "```jsjavascript\n\n// Example 3: Using Middleware\n\napp.use((req, res, next) => {\n\nconsole.log('Middleware executed');\n\nnext();\n\n});\n\napp.get('/', (req, res) => {\n\nres.send('Hello, World!');\n\n});\n\n```", "```jsjavascript\n\n// Example 4: Connecting to MongoDB with Mongoose\n\nconst mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost/mydatabase', {\n\nuseNewUrlParser: true,\n\nuseUnifiedTopology: true,\n\n});\n\nconst db = mongoose.connection;\n\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\n\ndb.once('open', () => {\n\nconsole.log('Connected to MongoDB');\n\n});\n\n```", "```jsjavascript\n\n// Example 5: Error Handling Middleware\n\napp.use((err, req, res, next) => {\n\nconsole.error(err.stack);\n\nres.status(500).send('Something went wrong!');\n\n});\n\n```", "```jsjavascript\n\n// Example 6: Authentication Middleware\n\nconst authenticateUser = (req, res, next) => {\n\n// Check if the user is authenticated\n\nif (req.isAuthenticated()) {\n\nreturn next();\n\n}\n\nres.redirect('/login');\n\n};\n\napp.get('/profile', authenticateUser, (req, res) => {\n\nres.send('Welcome to your profile!');\n\n});\n\n```", "```jsjavascript\n\n// Example 7: RESTful API for Managing Books\n\nconst books = [\n\n{ id: 1, title: 'Node.js in Action' },\n\n{ id: 2, title: 'Eloquent JavaScript' },\n\n];\n\napp.get('/api/books', (req, res) => {\n\nres.json(books);\n\n});\n\napp.post('/api/books', (req, res) => {\n\nconst newBook = req.body;\n\nbooks.push(newBook);\n\nres.status(201).json(newBook);\n\n});\n\n// Implement PUT and DELETE routes for updating and deleting books\n\n```"]