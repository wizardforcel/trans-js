["```jsjavascript\n\nif (condition) {\n\n// code to be executed if the condition is true\n\n}\n\n```", "```jsjavascript\n\nvar age = 18;\n\nif (age >= 18) {\n\nconsole.log(\"You are eligible to vote.\");\n\n}\n\n```", "```jsjavascript\n\nif (condition) {\n\n// code to be executed if the condition is true\n\n} else {\n\n// code to be executed if the condition is false\n\n}\n\n```", "```jsjavascript\n\nvar age = 16;\n\nif (age >= 18) {\n\nconsole.log(\"You are eligible to vote.\");\n\n} else {\n\nconsole.log(\"You are not eligible to vote yet.\");\n\n}\n\n```", "```jsjavascript\n\nswitch (expression) {\n\ncase value1:\n\n// code to be executed if the expression matches value1\n\nbreak;\n\ncase value2:\n\n// code to be executed if the expression matches value2\n\nbreak;\n\ndefault:\n\n// code to be executed if the expression doesn't match any case\n\nbreak;\n\n}\n\n```", "```jsjavascript\n\nvar day = \"Monday\";\n\nswitch (day) {\n\ncase \"Monday\":\n\nconsole.log(\"It's the first day of the week.\");\n\nbreak;\n\ncase \"Tuesday\":\n\nconsole.log(\"It's the second day of the week.\");\n\nbreak;\n\n// ... more cases ...\n\ndefault:\n\nconsole.log(\"It's an unknown\n\nday.\");\n\nbreak;\n\n}\n\nIn this example, if the value of the `day` variable is \"Monday,\" the message \"It's the first day of the week\" will be displayed. If the value is \"Tuesday,\" the message \"It's the second day of the week\" will be displayed. If the value doesn't match any of the cases, the default message \"It's an unknown day\" will be displayed.\n\n# 3.2 Looping Statements\n\nLooping statements allow us to repeat a block of code multiple times. They are useful when we want to perform a task repeatedly or iterate over a collection of data. JavaScript provides several looping statements, including the `for` loop, the `while` loop, and the `do...while` loop.\n\n# 3.2.1 The for Loop\n\nThe `for` loop is commonly used when we know the number of iterations in advance. It consists of three parts: initialization, condition, and update. Here's the syntax:\n\n```", "```js\n\nLet's see an example of a `for` loop:\n\n```", "```js\n\nIn this example, the loop will iterate five times, and the numbers 1 to 5 will be displayed.\n\n# 3.2.2 The while Loop\n\nThe `while` loop is used when we don't know the exact number of iterations in advance. It continues to execute a block of code as long as the specified condition is true. Here's the syntax:\n\n```", "```js\n\nLet's see an example of a `while` loop:\n\n```", "```js\n\nIn this example, the loop will iterate five times, similar to the previous `for` loop example.\n\n# 3.2.3 The do...while Loop\n\nThe `do...while` loop is similar to the `while` loop but guarantees that the code block is executed at least once before checking the condition. Here's the syntax:\n\n```", "```js\n\nLet's see an example of a `do...while` loop:\n\n```"]