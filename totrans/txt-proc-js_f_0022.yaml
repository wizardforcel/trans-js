- en: '| Recipe 12 | Displaying Tabular Data in Console with console.table() |'
  prefs: []
  type: TYPE_TB
- en: Task
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Suppose you have been performing additions and subtractions on an array, but
    you are encountering some problems. You want to inspect the contents of the array
    at a particular line in your script so you can pinpoint the problem.
  prefs: []
  type: TYPE_NORMAL
- en: You need a way to quickly print the array’s content to the console.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Use the console.table() method:'
  prefs: []
  type: TYPE_NORMAL
- en: '[part_1/displaying_tabular_data/displaying_tabular_data_ex1.js](http://media.pragprog.com/titles/fkjavascript/code/part_1/displaying_tabular_data/displaying_tabular_data_ex1.js)'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | **const** data = [ |'
  prefs: []
  type: TYPE_TB
- en: '|   | {quarter: *"Q1 FY22"*, revenue: 45962, netIncome: 20820, eps: 2.71},
    |'
  prefs: []
  type: TYPE_TB
- en: '|   | {quarter: *"Q2 FY22"*, revenue: 44845, netIncome: 20610, eps: 2.71},
    |'
  prefs: []
  type: TYPE_TB
- en: '|   | {quarter: *"Q3 FY22"*, revenue: 46151, netIncome: 16027, eps: 2.03},
    |'
  prefs: []
  type: TYPE_TB
- en: '|   | {quarter: *"Q4 FY22"*, revenue: 46822, netIncome: 16244, eps: 2.11},
    |'
  prefs: []
  type: TYPE_TB
- en: '|   | {quarter: *"Q1 FY23"*, revenue: 45215, netIncome: 20256, eps: 2.64} |'
  prefs: []
  type: TYPE_TB
- en: '|   | ]; |'
  prefs: []
  type: TYPE_TB
- en: '|   |  |'
  prefs: []
  type: TYPE_TB
- en: '|   | console.table(data); |'
  prefs: []
  type: TYPE_TB
- en: 'The console.table() method outputs an array in a readable format for human
    interpretation on the console:'
  prefs: []
  type: TYPE_NORMAL
- en: '![images/tabular_data_ex1.png](images/tabular_data_ex1.png)'
  prefs: []
  type: TYPE_IMG
- en: Discussion
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The console.table() method deserves more recognition from JavaScript developers.
    While many developers use a for loop to log an array’s items to the console, JavaScript
    already has the console.table() method that provides a more straightforward approach
    to achieve the same result.
  prefs: []
  type: TYPE_NORMAL
- en: The table’s initial column will be designated as (index). If the data is in
    the form of an array, its values will correspond to the array indices. On the
    other hand, if the data is in the form of an object, its values will align with
    the property names as shown in the [table](#fig.part1.tabular_data_ex2).
  prefs: []
  type: TYPE_NORMAL
- en: '[part_1/displaying_tabular_data/displaying_tabular_data_ex2.js](http://media.pragprog.com/titles/fkjavascript/code/part_1/displaying_tabular_data/displaying_tabular_data_ex2.js)'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | **const** data = { |'
  prefs: []
  type: TYPE_TB
- en: '|   | *"Q1 FY22"*: {revenue: 45962, netIncome: 20820, eps: 2.71}, |'
  prefs: []
  type: TYPE_TB
- en: '|   | *"Q2 FY22"*: {revenue: 44845, netIncome: 20610, eps: 2.71}, |'
  prefs: []
  type: TYPE_TB
- en: '|   | *"Q3 FY22"*: {revenue: 46151, netIncome: 16027, eps: 2.03}, |'
  prefs: []
  type: TYPE_TB
- en: '|   | *"Q4 FY22"*: {revenue: 46822, netIncome: 16244, eps: 2.11}, |'
  prefs: []
  type: TYPE_TB
- en: '|   | *"Q1 FY23"*: {revenue: 45215, netIncome: 20256, eps: 2.64} |'
  prefs: []
  type: TYPE_TB
- en: '|   | }; |'
  prefs: []
  type: TYPE_TB
- en: '|   |  |'
  prefs: []
  type: TYPE_TB
- en: '|   | console.table(data); |'
  prefs: []
  type: TYPE_TB
- en: '![images/tabular_data_ex2.png](images/tabular_data_ex2.png)'
  prefs: []
  type: TYPE_IMG
- en: Here, the quarter value is used as the table heading, and the object with revenue,
    netIncome, and eps properties is used as the row value.
  prefs: []
  type: TYPE_NORMAL
- en: 'The console.table() method also takes one additional optional parameter that
    lets you restrict the columns displayed. For example, if you want to only display
    the the netIncome column, you can use this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[part_1/displaying_tabular_data/displaying_tabular_data_ex3.js](http://media.pragprog.com/titles/fkjavascript/code/part_1/displaying_tabular_data/displaying_tabular_data_ex3.js)'
  prefs: []
  type: TYPE_NORMAL
- en: '|   | **const** data = { |'
  prefs: []
  type: TYPE_TB
- en: '|   | *"Q1 FY22"*: {revenue: 45962, netIncome: 20820, eps: 2.71}, |'
  prefs: []
  type: TYPE_TB
- en: '|   | *"Q2 FY22"*: {revenue: 44845, netIncome: 20610, eps: 2.71}, |'
  prefs: []
  type: TYPE_TB
- en: '|   | *"Q3 FY22"*: {revenue: 46151, netIncome: 16027, eps: 2.03}, |'
  prefs: []
  type: TYPE_TB
- en: '|   | *"Q4 FY22"*: {revenue: 46822, netIncome: 16244, eps: 2.11}, |'
  prefs: []
  type: TYPE_TB
- en: '|   | *"Q1 FY23"*: {revenue: 45215, netIncome: 20256, eps: 2.64} |'
  prefs: []
  type: TYPE_TB
- en: '|   | }; |'
  prefs: []
  type: TYPE_TB
- en: '|   |  |'
  prefs: []
  type: TYPE_TB
- en: '|   | console.table(data, *"netIncome"*); |'
  prefs: []
  type: TYPE_TB
- en: '![images/tabular_data_ex3.png](images/tabular_data_ex3.png)'
  prefs: []
  type: TYPE_IMG
- en: The console.table() method enables you to generate a clear and concise plaintext
    representation of tabular data. The benefit of using console.table() becomes particularly
    apparent when dealing with multidimensional arrays (that is, arrays that comprise
    other arrays). Remember to take advantage of it when debugging arrays and objects.
  prefs: []
  type: TYPE_NORMAL
