- en: Chapter 5
  id: totrans-0
  prefs:
  - PREF_H1
  stylish: true
  type: TYPE_NORMAL
- en: Array and Object Manipulation
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Let's continue our journey exploring the manipulation of arrays and objects,
    two fundamental pillars of JavaScript programming. These concepts are essential
    for handling data efficiently, allowing you to store, access, and manipulate collections
    of information in a powerful and flexible way.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Creating and manipulating arrays
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Arrays are ordered lists of values that can store multiple items in a single
    variable. They are incredibly versatile and offer an efficient way to manage datasets.
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Creating an array:  In JavaScript, you can create an array using square brackets.'
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Accessing elements:  Each item in an array has an index, starting at zero.
    You can access individual elements using these indexes.'
  id: totrans-7
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Modifying elements:  You can modify the elements of an array directly through
    their indexes.'
  id: totrans-9
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Adding and removing elements:  JavaScript offers several methods for adding
    and removing elements from an array.'
  id: totrans-11
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Array methods (``map``, ``filter``, ``reduce``, etc.)
  id: totrans-13
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Array methods in JavaScript are powerful tools that allow you to perform complex
    operations in a concise and readable way.
  id: totrans-14
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'map:  The ``map`` method creates a new array with the results of calling a
    function for each element of the original array.'
  id: totrans-15
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'filter:  The ``filter`` method creates a new array with all elements that pass
    a test implemented by a provided function.'
  id: totrans-17
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'reduce:  The ``reduce`` method applies a function to an accumulator and each
    value in the array (from left to right) to reduce it to a single value.'
  id: totrans-19
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'forEach:  The ``forEach`` method executes a given function once for each element
    of the array.'
  id: totrans-21
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'find:  The ``find`` method returns the first element of the array that satisfies
    the given test function. Otherwise, returns ``undefined``.'
  id: totrans-23
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'some e every: ``some`` tests whether at least one of the elements in the array
    passes the test implemented by the provided function. ``every`` tests whether
    all elements in the array pass the test implemented by the provided function.'
  id: totrans-25
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Creating and manipulating objects
  id: totrans-27
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Objects are collections of properties, and a property is an association between
    a name (or key) and a value. They are used to represent more complex entities
    with diverse characteristics.
  id: totrans-28
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Creating an object:  An object can be created using keys ``{}`` and is composed
    of key and value pairs.'
  id: totrans-29
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Accessing properties:  An object''s properties can be accessed using dot or
    square bracket notation.'
  id: totrans-31
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Modifying properties:  Properties of an object can be added or modified using
    dot notation or square brackets.'
  id: totrans-33
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Object methods:  Objects can have methods, which are functions stored as properties.'
  id: totrans-35
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Iterating over properties:  We can use a ``for...in`` loop to iterate over
    the properties of an object.'
  id: totrans-37
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Destructuring:  Destructuring allows you to extract data from arrays or objects
    into different variables.'
  id: totrans-39
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 操作数组和对象是任何JavaScript开发者必备的技能。数组使你能够高效地管理数据集合，而对象则提供了一种结构化的方式来存储和操作更复杂的数据。借助可用的强大方法，如`map`、`filter`和`reduce`，你可以以复杂的方式转换和分析数据。同样，理解如何创建和操作对象使你能够在代码中建模现实世界，为你的应用程序增加功能性和灵活性。随着我们继续，这些技能将作为使用JavaScript进行更高级和创新开发的方法的基础。
  id: totrans-41
  prefs: []
  stylish: true
  type: TYPE_NORMAL
