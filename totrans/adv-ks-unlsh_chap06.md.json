["```js\n 1 const student = {\n 2  id: 123,\n 3  name: \"John Doe\",\n 4  email: \"john@email.com\",\n 5  printInfo: function () {\n 6    console.log(`${this.id} - ${this.name} - ${this.email}`);\n 7  }\n 8 };\n 9 \n10 student.printInfo();\n11 // 123 - John Doe - john@email.com\n\n```", "```js\n1 function orderFood() {\n2   console.log(\"Order confirmed against the name: \" + this.fullName);\n3 }\n4 \n5 orderFood();\n6 // Order confirmed against the name: undefined\n\n```", "```js\n1 \"use strict\";\n2 \n3 function orderFood() {\n4   console.log(\"Order confirmed against the name: \" + this.fullName);\n5 }\n6 \n7 orderFood();\n8 // Uncaught TypeError: this is undefined\n\n```", "```js\n1 function Recipe(name, ingredients) {\n2   this.name = name;\n3   this.ingredients = ingredients;\n4 }\n\n```", "```js\n 1 class Shape {\n 2  constructor(color) {\n 3    this.color = color;\n 4  }\n 5 \n 6  printColor() {\n 7    console.log(this.color);\n 8  }\n 9 }\n10 \n11 const circle = new Shape(\"Red\");\n12 const printColorFn = circle.printColor;\n13 printColorFn();\n14 // Error: this is undefined\n\n```", "```js\n 1 <button>Submit</button>\n 2 \n 3 <script>\n 4  const btn = document.querySelector(\"button\");\n 5 \n 6  class FormHandler {\n 7    constructor(submitBtn) {\n 8      submitBtn.addEventListener(\"click\", this.submitForm);\n 9    }\n10 \n11     submitForm() {\n12       console.log(\"form submitted\");\n13       console.log(this);\n14     }\n15   }\n16 \n17   new FormHandler(btn);\n18 </script>\n\n```", "```js\n 1 <button>Submit</button>\n 2 \n 3 <script>\n 4  const btn = document.querySelector(\"button\");\n 5 \n 6  class FormHandler {\n 7    constructor(submitBtn) {\n 8      submitBtn.addEventListener(\"click\", this.submitForm);\n 9    }\n10 \n11     submitForm() {\n12       this.sendRequest();\n13       // ERROR: this.sendRequest is not a function\n14     }\n15 \n16     sendRequest() {\n17       console.log(\"sending request...\");\n18     }\n19   }\n20 \n21   new FormHandler(btn);\n22 </script>\n\n```", "```js\n 1 function Counter(startingValue) {\n 2  this.value = startingValue;\n 3 }\n 4 \n 5 Counter.prototype.incrementFactory = function (incrementStep) {\n 6  return function () {\n 7    this.value += incrementStep;\n 8    console.log(this.value);\n 9  };\n10 };\n11 \n12 const counter = new Counter(0);\n13 const increment5 = counter.incrementFactory(5);\n14 increment5(); // NaN\n15 increment5(); // NaN\n16 increment5(); // NaN\n\n```", "```js\n 1 function Counter(startingValue) {\n 2  this.value = startingValue;\n 3 }\n 4 \n 5 Counter.prototype.incrementFactory = function (incrementStep) {\n 6  const thisVal = this; // save `this` value\n 7  return function () {\n 8    // use `thisVar` variable instead of `this`\n 9    thisVal.value += incrementStep;\n10     console.log(thisVal.value);\n11   };\n12 };\n13 \n14 const counter = new Counter(0);\n15 const increment5 = counter.incrementFactory(5);\n16 increment5(); // 5\n17 increment5(); // 10\n18 increment5(); // 15\n\n```", "```js\n 1 function Counter(startingValue) {\n 2  this.value = startingValue;\n 3 }\n 4 \n 5 Counter.prototype.incrementFactory = function (incrementStep) {\n 6  // use an arrow function\n 7  return () => {\n 8    this.value += incrementStep;\n 9    console.log(this.value);\n10   };\n11 };\n12 \n13 const counter = new Counter(0);\n14 const increment5 = counter.incrementFactory(5);\n15 increment5(); // 5\n16 increment5(); // 10\n17 increment5(); // 15\n\n```", "```js\n 1 <button>Submit</button>\n 2 \n 3 <script>\n 4  const btn = document.querySelector(\"button\");\n 5 \n 6  class FormHandler {\n 7    constructor(submitBtn) {\n 8      submitBtn.addEventListener(\"click\", this.submitForm);\n 9    }\n10 \n11     submitForm() {\n12       this.sendRequest();\n13       // ERROR: this.sendRequest is not a function\n14     }\n15 \n16     sendRequest() {\n17       console.log(\"sending request...\");\n18     }\n19   }\n20 \n21   new FormHandler(btn);\n22 </script>\n\n```", "```js\n1 class FormHandler {\n2   constructor(submitBtn) {\n3     submitBtn.addEventListener(\"click\", () => this.submitForm());\n4   }\n5 \n6   // methods...\n7 }\n\n```", "```js\n 1 function Counter(startingValue) {\n 2  this.value = startingValue;\n 3 }\n 4 \n 5 Counter.prototype.incrementFactory = function (incrementStep) {\n 6  return function () {\n 7    this.value += incrementStep;\n 8    console.log(this.value);\n 9  };\n10 };\n11 \n12 const counter = new Counter(0);\n13 const increment5 = counter.incrementFactory(5);\n14 increment5(); // NaN\n15 increment5(); // NaN\n16 increment5(); // NaN\n\n```", "```js\n 1 function Counter(startingValue) {\n 2  this.value = startingValue;\n 3 }\n 4 \n 5 Counter.prototype.incrementFactory = function (incrementStep) {\n 6  const incrementFn = function () {\n 7    this.value += incrementStep;\n 8    console.log(this.value);\n 9  };\n10 \n11   // return a function with `this` bound\n12   // to the object used to invoke the\n13   // `incrementFactory` method\n14   return incrementFn.bind(this);\n15 };\n16 \n17 const counter = new Counter(0);\n18 const increment5 = counter.incrementFactory(5);\n19 increment5(); // 5\n20 increment5(); // 10\n21 increment5(); // 15\n\n```", "```js\n 1 const john = {\n 2  name: \"John\",\n 3  sayHello() {\n 4    console.log(\"Hello, I am \" + this.name);\n 5  }\n 6 };\n 7 \n 8 const sarah = {\n 9  name: \"Sarah\"\n10 };\n11 \n12 // borrow method from john\n13 const sayHello = john.sayHello;\n14 sayHello.call(sarah);\n15 // Hello, I am Sarah\n\n```", "```js\n 1 function Employee(name, age, id) {\n 2  this.name = name;\n 3  this.age = age;\n 4  this.id = id;\n 5 }\n 6 \n 7 function BankEmployee(name, age, id, bankName) {\n 8  // delegate the responsibility of adding\n 9  // \"name\", \"age\", and \"id\" properties to\n10   // the Person constructor\n11   Employee.call(this, name, age, id);\n12   this.bankName = bankName;\n13 }\n\n```", "```js\n 1 <button>Submit</button>\n 2 \n 3 <script>\n 4  const btn = document.querySelector(\"button\");\n 5 \n 6  class FormHandler {\n 7    constructor(submitBtn) {\n 8      submitBtn.addEventListener(\"click\", this.submitForm);\n 9    }\n10 \n11     submitForm() {\n12       this.sendRequest();\n13       // ERROR: this.sendRequest is not a function\n14     }\n15 \n16     sendRequest() {\n17       console.log(\"sending request...\");\n18     }\n19   }\n20 \n21   new FormHandler(btn);\n22 </script>\n\n```", "```js\n1 class FormHandler {\n2   constructor(submitBtn) {\n3     submitBtn.addEventListener(\"click\", this.submitForm.bind(this));\n4   }\n5 \n6   // methods...\n7 }\n\n```", "```js\n1 if (typeof window !== \"undefined\" && window.secretProperty) {\n2   // execute code for browser\n3 } else if (typeof global !== \"undefined\" && global.secretProperty) {\n4   // execute code for nodejs\n5 }\n\n```", "```js\n1 if (globalThis.secretProperty) {\n2   // execute code\n3 }\n\n```"]