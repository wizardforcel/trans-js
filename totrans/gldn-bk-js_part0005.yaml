- en: '`Chapter 1`'
  id: totrans-0
  prefs:
  - PREF_H1
  stylish: true
  type: TYPE_NORMAL
  zh: '`第 1 章`'
- en: '`Introduction to JavaScript`'
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`JavaScript 简介`'
- en: 想象一下，我们坐在一个舒适的咖啡馆里，周围弥漫着新鲜咖啡的香气，讨论着世界上最重要和多功能的编程语言之一：JavaScript。这是我们旅程的基调：开放、轻松，最重要的是，富有启发性的对话。
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 想象一下，我们坐在一个舒适的咖啡馆里，周围弥漫着新鲜咖啡的香气，讨论着世界上最重要和多功能的编程语言之一：JavaScript。这是我们旅程的基调：开放、轻松，最重要的是，富有启发性的对话。
- en: '`History and evolution of JavaScript`'
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`JavaScript 的历史与演变`'
- en: JavaScript 诞生于互联网历史上的关键时刻。1995 年，当网络开始获得关注时，人们越来越需要让网页更具互动性。大多数页面都是静态的，只提供文本和图像。在这种情况下，Netscape
    Communications 的开发者 Brendan Eich 在短短 10 天内创造了 JavaScript。最初称为 Mocha，后来改名为 LiveScript，选择
    JavaScript 这个名称是为了利用当时另一种编程语言 Java 的流行。
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: JavaScript 诞生于互联网历史上的关键时刻。1995 年，当网络开始获得关注时，人们越来越需要让网页更具互动性。大多数页面都是静态的，只提供文本和图像。在这种情况下，Netscape
    Communications 的开发者 Brendan Eich 在短短 10 天内创造了 JavaScript。最初称为 Mocha，后来改名为 LiveScript，选择
    JavaScript 这个名称是为了利用当时另一种编程语言 Java 的流行。
- en: JavaScript 的第一个版本相当有限，但它引入了今天仍在使用的基本概念。随着时间的推移，JavaScript 显著演变。1996 年，Netscape
    将 JavaScript 提交给 ECMA（欧洲计算机制造商协会）进行标准化，最终创建了 ECMAScript。1997 年发布的 ECMAScript 1.0
    标志着这一语言新时代的开始。
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: JavaScript 的第一个版本相当有限，但它引入了今天仍在使用的基本概念。随着时间的推移，JavaScript 显著演变。1996 年，Netscape
    将 JavaScript 提交给 ECMA（欧洲计算机制造商协会）进行标准化，最终创建了 ECMAScript。1997 年发布的 ECMAScript 1.0
    标志着这一语言新时代的开始。
- en: 从那时起，JavaScript 经历了几次更新和改进。1999 年发布的 ECMAScript 3 版本带来了许多改进，包括对正则表达式的支持和更好的异常处理。然而，真正使
    JavaScript 确立为一种强大而多功能语言的是 2009 年发布的 ECMAScript 5 版本。该版本引入了几个重要特性，例如严格模式、getter
    和 setter，以及高阶函数。
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 从那时起，JavaScript 经历了几次更新和改进。1999 年发布的 ECMAScript 3 版本带来了许多改进，包括对正则表达式的支持和更好的异常处理。然而，真正使
    JavaScript
- en: 但真正的革命发生在 ECMAScript 6，也称为 ES6 或 ECMAScript 2015。此更新带来了一系列新特性，改变了开发者编写 JavaScript
    的方式。其中的新特性包括箭头函数、类、模块、Promise 等等。这些新增功能使得 JavaScript 更加稳健、高效和现代，使得开发复杂的动态 web
    应用成为可能。
  id: totrans-7
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 但真正的革命发生在 ECMAScript 6，也称为 ES6 或 ECMAScript 2015。此更新带来了一系列新特性，改变了开发者编写 JavaScript
    的方式。其中的新特性包括箭头函数、类、模块、Promise 等等。这些新增功能使得 JavaScript 更加稳健、高效和现代，使得开发复杂的动态 web
    应用成为可能。
- en: 从那时起，JavaScript 继续发展，每年发布新版本的 ECMAScript，每个版本都带来增量改进和新功能，以满足开发社区日益增长的需求。如今，JavaScript
    是一种成熟且广泛采用的语言，全球数百万开发者使用它创建各种应用，从简单的网页脚本到复杂的服务器应用。
  id: totrans-8
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 从那时起，JavaScript 继续发展，每年发布新版本的 ECMAScript，每个版本都带来增量改进和新功能，以满足开发社区日益增长的需求。如今，JavaScript
    是一种成熟且广泛采用的语言，全球数百万开发者使用它创建各种应用，从简单的网页脚本到复杂的服务器应用。
- en: '`Importance and applications in modern web development`'
  id: totrans-9
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`在现代 web 开发中的重要性与应用`'
- en: JavaScript 在现代 web 开发中的重要性不容小觑。它是三大主要 web 技术之一，与 HTML 和 CSS 并列。虽然 HTML 定义了内容的结构，CSS
    负责表现形式，但 JavaScript 增加了互动性和动态性，使得 web 变得丰富而引人入胜。
  id: totrans-10
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: JavaScript 在现代 web 开发中的重要性不容小觑。它是三大主要 web 技术之一，与 HTML 和 CSS 并列。虽然 HTML 定义了内容的结构，CSS
    负责表现形式，但 JavaScript 增加了互动性和动态性，使得 web 变得丰富而引人入胜。
- en: '`JavaScript` allows developers to create rich, interactive user experiences.
    With it, you can validate forms, create animations, manipulate `DOM` (Document
    Object Model) elements, respond to user events and much more. Essentially, `JavaScript`
    is what makes the web alive and responsive.'
  id: totrans-11
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`JavaScript` 使开发者能够创建丰富、互动的用户体验。借助它，你可以验证表单、创建动画、操作 `DOM`（文档对象模型）元素、响应用户事件以及更多。基本上，`JavaScript`
    使得 web 变得生动和响应。'
- en: One of the biggest leaps in the use of `JavaScript` was the introduction of
    frameworks and libraries that facilitated and accelerated web development. Libraries
    like `jQuery` have simplified DOM manipulation and event management, making `JavaScript`
    more accessible for developers of all skill levels. Frameworks like `Angular`,
    `React`, and `Vue.js` have taken this a step further, providing powerful frameworks
    for building complex, scalable web applications.
  id: totrans-12
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`JavaScript` 使用中的一个重大飞跃是引入了框架和库，这些框架和库简化并加速了 web 开发。像 `jQuery` 这样的库简化了 DOM
    操作和事件管理，使 `JavaScript` 对各个技能水平的开发者变得更加可及。像 `Angular`、`React` 和 `Vue.js` 这样的框架更进一步，为构建复杂、可扩展的
    web 应用提供了强大的框架。'
- en: With the advent of `Node.js` in 2009, `JavaScript` expanded beyond the browser,
    allowing developers to write server-side code in `JavaScript`. This opened up
    new possibilities, allowing a single language to be used on both the frontend
    and backend. `Node.js` has brought benefits such as high performance and scalability,
    making it a popular choice for developing servers, APIs and microservices.
  id: totrans-13
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 随着 `Node.js` 在 2009 年的出现，`JavaScript` 超越了浏览器，使开发者能够用 `JavaScript` 编写服务器端代码。这开启了新的可能性，使得单一语言可以在前端和后端同时使用。`Node.js`
    带来了高性能和可扩展性等优势，使其成为开发服务器、API 和微服务的热门选择。
- en: In addition to web development, `JavaScript` has also found applications in
    other areas. It is widely used in `game development`, `mobile applications`, and
    even the `Internet of Things (IoT)`. Frameworks like `React Native` allow you
    to create native mobile apps using `JavaScript`, while libraries like `Three.js`
    make it possible to develop 3D graphics and complex visualizations directly in
    the browser.
  id: totrans-14
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 除了 web 开发，`JavaScript` 还在其他领域找到了应用。它广泛用于 `游戏开发`、`移动应用`，甚至是 `物联网（IoT）`。像 `React
    Native` 这样的框架允许你使用 `JavaScript` 创建原生移动应用，而像 `Three.js` 这样的库则使得直接在浏览器中开发 3D 图形和复杂可视化成为可能。
- en: Overview of main features
  id: totrans-15
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 主要特性的概述
- en: Now that we have an understanding of the history and importance of `JavaScript`,
    let's explore some of its key features that make it such a powerful and versatile
    language.
  id: totrans-16
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 现在我们已经了解了`JavaScript`的历史和重要性，接下来让我们探讨一些使其成为如此强大和多功能语言的关键特性。
- en: 'DOM Manipulation: One of the most powerful features of `JavaScript` is the
    ability to manipulate the DOM. This allows developers to dynamically select, modify,
    and create HTML elements. With the DOM, you can change the content of a web page
    without having to reload it, providing a more fluid and interactive user experience.'
  id: totrans-17
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: DOM 操作：`JavaScript`最强大的特性之一是操作DOM的能力。这使得开发者可以动态选择、修改和创建HTML元素。通过DOM，你可以在不重新加载网页的情况下更改网页内容，从而提供更流畅和互动的用户体验。
- en: 'Events:  `JavaScript` is excellent at handling events. From button clicks and
    mouse movements to page loading and keyboard actions, `JavaScript` can respond
    to virtually any event that occurs on a web page. This is key to creating responsive
    and interactive user interfaces.'
  id: totrans-18
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 事件：`JavaScript`在处理事件方面表现出色。从按钮点击和鼠标移动到页面加载和键盘操作，`JavaScript`几乎可以响应网页上发生的任何事件。这是创建响应式和交互式用户界面的关键。
- en: 'Functions:  Functions are reusable blocks of code that can be called whenever
    necessary. `JavaScript` supports `anonymous functions`, `high-order functions`,
    and `arrow functions`, providing great flexibility in writing modular and reusable
    code.'
  id: totrans-19
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 函数：函数是可以在需要时调用的可重用代码块。`JavaScript`支持`匿名函数`、`高阶函数`和`箭头函数`，为编写模块化和可重用代码提供了极大的灵活性。
- en: 'Asynchronous Programming:  Asynchronous programming is a fundamental feature
    of `JavaScript`, allowing long-running operations such as network calls to be
    executed without blocking the main flow of the program. With `promises` and the
    `async/await` syntax, writing asynchronous code becomes clearer and more manageable.'
  id: totrans-20
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 异步编程：异步编程是`JavaScript`的一项基本特性，它允许像网络调用这样的长时间运行的操作在不阻塞程序主流程的情况下执行。通过`promises`和`async/await`语法，编写异步代码变得更加清晰和易于管理。
- en: 'Arrays and Objects:  JavaScript provides powerful data structures like arrays
    and objects. Arrays allow you to store and manipulate collections of data, while
    objects allow you to create complex data structures with properties and methods.'
  id: totrans-21
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 数组和对象：`JavaScript`提供了强大的数据结构，如数组和对象。数组允许你存储和操作数据集合，而对象则允许你创建具有属性和方法的复杂数据结构。
- en: 'Classes and Inheritance:  With the introduction of `ES6`, JavaScript now supports
    classes and inheritance. This makes it easier to create objects and implement
    object-oriented design patterns, making code more organized and reusable.'
  id: totrans-22
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 类和继承：随着`ES6`的引入，`JavaScript`现在支持类和继承。这使得创建对象和实现面向对象设计模式变得更加简单，使代码更加有组织和可重用。
- en: 'Modules:  Modules allow you to divide code into smaller, reusable parts. This
    is especially useful in large projects where modularity and code organization
    are crucial for maintainability and scalability.'
  id: totrans-23
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 模块：模块允许你将代码分割成更小、可重用的部分。这在大型项目中尤其有用，因为模块化和代码组织对于可维护性和可扩展性至关重要。
- en: In this chapter, we explore the rich history and evolution of JavaScript, its
    importance in modern web development, and an overview of its main features. JavaScript
    is not just a programming language; is an essential tool that empowers developers
    to create incredible, innovative web experiences. As we progress through this
    book, we will continue to deepen our JavaScript knowledge and skills, exploring
    everything from the fundamentals to advanced applications. Let's turn challenges
    into opportunities for growth and innovation together.
  id: totrans-24
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了JavaScript的丰富历史和演变，它在现代网页开发中的重要性，以及其主要特性的概述。JavaScript不仅仅是一种编程语言；它是一个重要工具，使开发者能够创建出色、创新的网页体验。随着我们在本书中的深入学习，我们将继续加深对JavaScript的知识和技能，探索从基础到高级应用的所有内容。让我们共同将挑战转化为成长和创新的机会。
- en: Chapter 2
  id: totrans-25
  prefs:
  - PREF_H1
  stylish: true
  type: TYPE_NORMAL
  zh: 第二章
- en: Development Environment Configuration
  id: totrans-26
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 开发环境配置
- en: 'Imagine that we are once again sitting in a cafe, with the comforting aroma
    of fresh coffee all around us, ready to dive into a fundamental aspect of developing
    with JavaScript: setting up your development environment. This is a crucial step,
    as a well-configured environment not only increases your productivity, but also
    makes your work more enjoyable and efficient. Let''s explore together essential
    tools, how to set up your local environment, and get started with`Node.js` and
    `npm`.'
  id: totrans-27
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 想象一下我们再次坐在咖啡馆，周围弥漫着新鲜咖啡的香气，准备深入了解使用JavaScript开发的一个基本方面：设置您的开发环境。这是一个关键步骤，因为良好的环境配置不仅可以提高您的生产力，还能让您的工作更愉快和高效。让我们一起探索必需的工具，如何设置您的本地环境，并开始使用`Node.js`和`npm`。
- en: Essential tools (`IDEs`, text editors, browsers)
  id: totrans-28
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 基本工具（`IDEs`、文本编辑器、浏览器）
- en: Choosing the right tools is like selecting the perfect instruments for a symphony.
    They need to be tuned to work in harmony and facilitate your development process.
  id: totrans-29
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 选择合适的工具就像为交响乐挑选完美的乐器。它们需要调谐以协同工作，促进您的开发过程。
- en: '`IDEs` (Integrated Development Environments):'
  id: totrans-30
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`IDEs`（集成开发环境）：'
- en: A good `IDE` can be the backbone of your daily work. `IDEs` offer a range of
    features that simplify the process of writing, debugging and testing your code.
    Among the most popular are `Visual Studio Code`, `WebStorm` and `Sublime Text`.
  id: totrans-31
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 一个好的`IDE`可以成为您日常工作的支柱。`IDEs`提供了一系列功能，简化了编写、调试和测试代码的过程。其中最受欢迎的有`Visual Studio
    Code`、`WebStorm`和`Sublime Text`。
- en: '- `Visual Studio Code` (`VS Code`):  Free and open source, `VS Code` is highly
    customizable with extensions that support JavaScript and many other frameworks
    and libraries. It offers autocompletion, syntax highlighting, and `Git` integration.'
  id: totrans-32
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `Visual Studio Code`（`VS Code`）：免费且开源，`VS Code`可以高度自定义，并支持JavaScript和许多其他框架和库的扩展。它提供自动补全、语法高亮和`Git`集成。'
- en: '- `WebStorm`:  A paid but powerful `IDE` developed by `JetBrains`, known for
    its robust features for JavaScript development, including built-in support for
    frameworks such as `React`, `Angular` and `Vue.js`.'
  id: totrans-33
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `WebStorm`：由`JetBrains`开发的付费但强大的`IDE`，以其对JavaScript开发的强大功能而闻名，包括对`React`、`Angular`和`Vue.js`等框架的内置支持。'
- en: '- `Sublime Text`:  Light and fast, `Sublime Text` is a text editor that, with
    the right plugins, can be transformed into an efficient development environment
    for JavaScript.'
  id: totrans-34
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `Sublime Text`：轻量快速的`Sublime Text`是一个文本编辑器，配合合适的插件，可以转变为高效的JavaScript开发环境。'
- en: 'Text editors:'
  id: totrans-35
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 文本编辑器：
- en: 对于那些喜欢轻量级方法的人，文本编辑器是一个很好的选择。它们快速、可配置，并且与终端结合时可以非常强大。
  id: totrans-36
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 对于那些喜欢轻量级方法的人，文本编辑器是一个很好的选择。它们快速、可配置，并且与终端结合时可以非常强大。
- en: '- `Atom`：由`GitHub`制作的可黑客化文本编辑器，适合21世纪。`Atom`现代、实惠，并且本质上可黑客化。通过像`teletype`这样的包，您可以实时协作。'
  id: totrans-37
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `Atom`：由`GitHub`制作的可黑客化文本编辑器，适合21世纪。`Atom`现代、实惠，并且本质上可黑客化。通过像`teletype`这样的包，您可以实时协作。'
- en: '- `Brackets`：一个专注于Web开发的现代代码编辑器，具有集成实时预览，允许您在浏览器中实时查看代码更改。'
  id: totrans-38
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `Brackets`：一个专注于Web开发的现代代码编辑器，具有集成实时预览，允许您在浏览器中实时查看代码更改。'
- en: 'Browsers:'
  id: totrans-39
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 浏览器：
- en: 浏览器不仅对于查看您的应用程序至关重要，还用于调试和测试代码。主要浏览器提供强大的开发者工具。
  id: totrans-40
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 浏览器不仅对于查看您的应用程序至关重要，还用于调试和测试代码。主要浏览器提供强大的开发者工具。
- en: '- `Google Chrome`：凭借其`DevTools`，`Chrome`是许多开发人员的最爱。它允许您检查元素、调试`JavaScript`、监控网络性能等。'
  id: totrans-41
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `Google Chrome`：凭借其`DevTools`，`Chrome`是许多开发人员的最爱。它允许您检查元素、调试`JavaScript`、监控网络性能等。'
- en: '- `Firefox`：它也具有出色的开发者工具，尤其是其`JavaScript`控制台和元素检查器。'
  id: totrans-42
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `Firefox`：它也具有出色的开发者工具，尤其是其`JavaScript`控制台和元素检查器。'
- en: 配置本地开发环境
  id: totrans-43
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 配置本地开发环境
- en: 拥有一个配置良好的本地开发环境对高效工作和避免仅在生产环境中出现的问题至关重要。让我们逐步了解如何设置理想的环境。
  id: totrans-44
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 拥有一个配置良好的本地开发环境对高效工作和避免仅在生产环境中出现的问题至关重要。让我们逐步了解如何设置理想的环境。
- en: 1\. `Node.js`和`npm`的安装：`Node.js`是一个服务器端`JavaScript`执行环境，而`npm`（`Node Package
    Manager`）是`Node.js`的包管理器。它们对现代`JavaScript`开发至关重要。
  id: totrans-45
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 1\. `Node.js`和`npm`的安装：`Node.js`是一个服务器端`JavaScript`执行环境，而`npm`（`Node Package
    Manager`）是`Node.js`的包管理器。它们对现代`JavaScript`开发至关重要。
- en: '- 安装：前往官方`Node.js`网站（`https://nodejs.org/`）并下载`LTS`（长期支持）版本。安装`Node.js`也会自动安装`npm`。'
  id: totrans-46
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- 安装：前往官方`Node.js`网站（`https://nodejs.org/`）并下载`LTS`（长期支持）版本。安装`Node.js`也会自动安装`npm`。'
- en: '- 验证：安装后，打开您的终端并运行以下命令以检查一切是否正常：'
  id: totrans-47
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- 验证：安装后，打开您的终端并运行以下命令以检查一切是否正常：'
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 这些命令应分别返回已安装的`Node.js`和`npm`的版本。
  id: totrans-49
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 这些命令应分别返回已安装的`Node.js`和`npm`的版本。
- en: 2\. `Git`配置：`Git`是一个版本控制系统，允许您跟踪代码随时间的变化。它对于协作项目的工作和管理代码版本至关重要。
  id: totrans-50
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 2\. `Git`配置：`Git`是一个版本控制系统，允许您跟踪代码随时间的变化。它对于协作项目的工作和管理代码版本至关重要。
- en: '- 安装：从官方网站（`https://git-scm.com/`）下载`Git`并按照安装说明进行操作。'
  id: totrans-51
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- 安装：从官方网站（`https://git-scm.com/`）下载`Git`并按照安装说明进行操作。'
- en: '- 初始设置：安装后，配置您的用户名和电子邮件：'
  id: totrans-52
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- 初始设置：安装后，配置您的用户名和电子邮件：'
- en: '[PRE1]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 3\. `VS Code Setup`：如果您选择了`Visual Studio Code`，配置一些扩展可以提高工作效率。
  id: totrans-54
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 3\. `VS Code设置`：如果您选择了`Visual Studio Code`，配置一些扩展可以提高工作效率。
- en: '- 推荐的扩展：'
  id: totrans-55
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- 推荐的扩展：'
- en: '- `ESLint`：帮助维护代码一致性并识别错误。'
  id: totrans-56
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `ESLint`：帮助维护代码一致性并识别错误。'
- en: '- `Prettier`：自动格式化您的代码，使其整洁且一致。'
  id: totrans-57
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `Prettier`：自动格式化您的代码，使其整洁且一致。'
- en: '- `Live Server`：启动一个具有自动重载的本地服务器，非常适合Web开发。'
  id: totrans-58
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `Live Server`：启动一个具有自动重载的本地服务器，非常适合Web开发。'
- en: '- `GitLens`：直接在编辑器中提供对源代码的洞察，使跟踪更改和作者变得更容易。'
  id: totrans-59
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `GitLens`：直接在编辑器中提供对源代码的洞察，使跟踪更改和作者变得更容易。'
- en: 4\. 终端配置：配置良好的终端可以提高您的生产力。像`zsh`和`Oh My Zsh`这样的工具可以提供高级自动完成和可定制主题。
  id: totrans-60
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 4\. 终端配置：配置良好的终端可以提高您的生产力。像`zsh`和`Oh My Zsh`这样的工具可以提供高级自动完成和可定制主题。
- en: '- `zsh`和`Oh My Zsh`的安装：'
  id: totrans-61
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- `zsh`和`Oh My Zsh`的安装：'
- en: '[PRE2]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 5. 测试项目：为了确保一切正常工作，让我们创建一个简单的测试项目。
  id: totrans-63
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 5\. 测试项目：为了确保一切正常工作，让我们创建一个简单的测试项目。
- en: '- 创建项目目录：'
  id: totrans-64
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- 创建项目目录：'
- en: '[PRE3]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '- Node.js项目初始化：'
  id: totrans-66
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- Node.js项目初始化：'
- en: '[PRE4]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '- 创建一个简单的JavaScript文件：'
  id: totrans-68
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- 创建一个简单的JavaScript文件：'
- en: 在项目目录中创建一个名为`index.js`的文件，并添加以下代码：
  id: totrans-69
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 在项目目录中创建一个名为`index.js`的文件，并添加以下代码：
- en: '[PRE5]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '- 文件执行：'
  id: totrans-71
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- 文件执行：'
- en: '[PRE6]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 你应该在终端看到消息“Hello World！”。
  id: totrans-73
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 你应该在终端看到消息“Hello World！”。
- en: Node.js和npm简介
  id: totrans-74
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: Node.js和npm简介
- en: '`Node.js`通过允许语言在服务器端运行，彻底改变了JavaScript开发。这意味着你可以仅使用JavaScript编写完整的应用程序，包括前端和后端。让我们探索基础知识，以便你可以开始利用`Node.js`和`npm`的强大功能。'
  id: totrans-75
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`Node.js`通过允许语言在服务器端运行，彻底改变了JavaScript开发。这意味着你可以仅使用JavaScript编写完整的应用程序，包括前端和后端。让我们探索基础知识，以便你可以开始利用`Node.js`和`npm`的强大功能。'
- en: '`Node.js`：'
  id: totrans-76
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`Node.js`：'
- en: '`Node.js`是一个基于Chrome的V8引擎构建的JavaScript运行环境。它因其高性能和高效处理异步I/O（输入/输出）操作的能力而闻名，这使得它非常适合用于实时应用程序，如聊天机器人、在线游戏和API。'
  id: totrans-77
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`Node.js`是一个基于Chrome的V8引擎构建的JavaScript运行环境。它因其高性能和高效处理异步I/O（输入/输出）操作的能力而闻名，这使得它非常适合用于实时应用程序，如聊天机器人、在线游戏和API。'
- en: '`npm`（Node Package Manager）：'
  id: totrans-78
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`npm`（Node 包管理器）：'
- en: '`npm`是Node.js的默认包管理器。它允许你安装、分享和管理JavaScript项目的依赖。npm库中有超过一百万个可用包，你可以找到几乎任何你需要的功能库。'
  id: totrans-79
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '`npm`是Node.js的默认包管理器。它允许你安装、分享和管理JavaScript项目的依赖。npm库中有超过一百万个可用包，你可以找到几乎任何你需要的功能库。'
- en: '- 安装包：使用`npm`安装包很简单。例如，要安装`Express`，一个流行的Node.js框架，你可以使用：'
  id: totrans-80
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- 安装包：使用`npm`安装包很简单。例如，要安装`Express`，一个流行的Node.js框架，你可以使用：'
- en: '[PRE7]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '- 脚本创建：在`package.json`文件中，你可以定义脚本来自动化常见任务。例如：'
  id: totrans-82
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- 脚本创建：在`package.json`文件中，你可以定义脚本来自动化常见任务。例如：'
- en: '[PRE8]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '- 脚本执行：要运行上面定义的脚本，你可以使用：'
  id: totrans-84
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: '- 脚本执行：要运行上面定义的脚本，你可以使用：'
- en: '[PRE9]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 通过这些设置和工具，你已经准备好开始你的JavaScript开发之旅。一个良好配置的开发环境不仅可以使你的日常工作更加轻松，还可以提高你的效率和生产力。随着我们的进步，我们将继续深化知识，从基础到JavaScript的最先进应用程序，探索一切。让我们一起把挑战转化为成长和创新的机会。
  id: totrans-86
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 通过这些设置和工具，你已经准备好开始你的JavaScript开发之旅。一个良好配置的开发环境不仅可以使你的日常工作更加轻松，还可以提高你的效率和生产力。随着我们的进步，我们将继续深化知识，从基础到JavaScript的最先进应用程序，探索一切。让我们一起把挑战转化为成长和创新的机会。
