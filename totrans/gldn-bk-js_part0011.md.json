["```jsjavascript\n\nfunction buscarDados(url, callback) {\n\nconst xhr = new XMLHttpRequest();\n\nxhr.open(\"GET\", url);\n\nxhr.onload = function() {\n\nif (xhr.status === 200) {\n\ncallback(null, xhr.responseText);\n\n} else {\n\ncallback(`Erro: ${xhr.status}`);\n\n}\n\n};\n\nxhr.send();\n\n}\n\nfetchData(\"https://api.exemplo.com/dados\", function(error, data) {\n\nif (error) {\n\nconsole.error(error);\n\n} else {\n\nconsole.log(JSON.parse(data));\n\n}\n\n});\n\n```", "```jsjavascript\n\nfunction fetchData(url) {\n\nreturn new Promise(function(resolve, reject) {\n\nconst xhr = new XMLHttpRequest();\n\nxhr.open(\"GET\", url);\n\nxhr.onload = function() {\n\nif (xhr.status === 200) {\n\nresolve(xhr.responseText);\n\n} else {\n\nreject(`Erro: ${xhr.status}`);\n\n}\n\n};\n\nxhr.send();\n\n});\n\n}\n\nfetchData(\"https://api.exemplo.com/dados\")\n\n.then(function(dados) {\n\nconsole.log(JSON.parse(data));\n\n})\n\n.catch(function(erro) {\n\nconsole.error(error);\n\n});\n\n```", "```jsjavascript\n\nasync function fetchData(url) {\n\ntry {\n\nconst response = await fetch(url);\n\nif (!response.ok) {\n\nthrow new Error(`Error: ${response.status}`);\n\n}\n\nconst data = await response.json();\n\nreturn data;\n\n} catch (error) {\n\nconsole.error(error);\n\n}\n\n}\n\nasync function displayData() {\n\nconst data = await fetchData(\"https://api.exemplo.com/dados\");\n\nconsole.log(data);\n\n}\n\ndisplayData();\n\n```", "```jsjavascript\n\nfunction buscarDados(url, callback) {\n\nconst xhr = new XMLHttpRequest();\n\nxhr.open(\"GET\", url);\n\nxhr.onload = function() {\n\nif (xhr.status === 200) {\n\ncallback(null, xhr.responseText);\n\n} else {\n\ncallback(`Erro: ${xhr.status}`);\n\n}\n\n};\n\nxhr.onerror = function() {\n\ncallback(\"Network error\");\n\n};\n\nxhr.send();\n\n}\n\nfetchData(\"https://api.exemplo.com/dados\", function(error, data) {\n\nif (error) {\n\nconsole.error(error);\n\n} else {\n\nconsole.log(JSON.parse(data));\n\n}\n\n});\n\n```", "```jsjavascript\n\nfunction fetchData(url) {\n\nreturn new Promise(function(resolve, reject) {\n\nconst xhr = new XMLHttpRequest();\n\nxhr.open(\"GET\", url);\n\nxhr.onload = function() {\n\nif (xhr.status === 200) {\n\nresolve(xhr.responseText);\n\n} else {\n\nreject(`Erro: ${xhr.status}`);\n\n}\n\n};\n\nxhr.onerror = function() {\n\nreject(\"Network error\");\n\n};\n\nxhr.send();\n\n});\n\n}\n\nfetchData(\"https://api.exemplo.com/dados\")\n\n.then(function(dados) {\n\nconsole.log(JSON.parse(data));\n\n})\n\n.catch(function(erro) {\n\nconsole.error(error);\n\n});\n\n```", "```jsjavascript\n\nasync function fetchData(url) {\n\ntry {\n\nconst response = await fetch(url);\n\nif (!response.ok) {\n\nthrow new Error(`Error: ${response.status}`);\n\n}\n\nconst data = await response.json();\n\nreturn data;\n\n} catch (error) {\n\nconsole.error(error);\n\n}\n\n}\n\nasync function displayData() {\n\ntry {\n\nconst data = await fetchData(\"https://api.exemplo.com/dados\");\n\nconsole.log(data);\n\n} catch (error) {\n\nconsole.error(\"Error displaying data:\", error);\n\n}\n\n}\n\ndisplayData();\n\n```"]