- en: 'Chapter 2: Setting Up Your Development Environment'
  id: totrans-0
  prefs:
  - PREF_H1
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章：设置你的开发环境
- en: In the world of web development, a well-configured development environment is
    the foundation upon which you build your digital creations. Whether you're a seasoned
    developer or just beginning your journey, setting up your development environment
    for React JS is a crucial first step. In this chapter, we'll guide you through
    the process of creating a robust React development environment, ensuring that
    you have the tools and knowledge needed to start building dynamic web applications
    with ease.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在网页开发的世界中，一个配置良好的开发环境是你构建数字创作的基础。无论你是经验丰富的开发者，还是刚刚开始旅程，设置React JS的开发环境都是一个至关重要的第一步。在这一章中，我们将指导你完成创建一个稳健的React开发环境的过程，确保你拥有开始构建动态网页应用所需的工具和知识。
- en: The Importance of a Proper Development Environment
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 合适的开发环境的重要性
- en: 'Before we dive into the specifics of setting up your React development environment,
    let''s take a moment to understand why it matters. A well-structured development
    environment offers several advantages:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入探讨如何设置你的React开发环境之前，让我们先花点时间了解一下为什么它很重要。一个结构良好的开发环境有几个优势：
- en: '1\. **Efficiency**: An optimized environment streamlines your workflow, allowing
    you to write code, test, and debug more efficiently. This leads to faster development
    cycles and increased productivity.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. **效率**：一个优化的环境简化了你的工作流程，使你能够更高效地编写代码、进行测试和调试。这将带来更快的开发周期和更高的生产力。
- en: '2\. **Consistency**: A standardized environment ensures that your project''s
    setup remains consistent across team members and different development stages.
    This reduces the likelihood of compatibility issues and unexpected errors.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. **一致性**：一个标准化的环境确保你的项目设置在团队成员和不同开发阶段之间保持一致。这减少了兼容性问题和意外错误的可能性。
- en: '3\. **Reproducibility**: With a well-documented environment, you can recreate
    it on different machines or share it with colleagues. This is especially valuable
    in collaborative projects.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. **可重复性**：一个文档完备的环境，可以在不同的机器上重建，或者与你的同事共享。这在协作项目中特别有价值。
- en: '4\. **Debugging**: A properly configured environment provides essential debugging
    tools and error messages, making it easier to identify and fix issues in your
    code.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. **调试**：一个正确配置的环境提供必要的调试工具和错误信息，使得更容易识别和修复代码中的问题。
- en: '5\. **Scalability**: As your project grows, you''ll need tools and practices
    that can scale with it. A well-designed development environment anticipates future
    needs and accommodates them seamlessly.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. **可扩展性**：随着项目的增长，你将需要能够与之扩展的工具和实践。一个设计良好的开发环境会预见未来的需求并无缝地满足这些需求。
- en: Now that you appreciate the significance of a robust development environment,
    let's get started on setting up your React development environment.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经理解了稳健开发环境的重要性，接下来让我们开始设置你的React开发环境。
- en: Prerequisites
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前提条件
- en: 'Before we jump into the setup process, there are a few prerequisites you should
    have in place. Ensure that you have:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始设置过程之前，有一些先决条件你需要准备好。确保你已经具备以下条件：
- en: '1\. **Node.js and npm**: React relies on Node.js and npm (Node Package Manager)
    for package management. You can download and install Node.js from the official
    website (https://nodejs.org/). npm comes bundled with Node.js.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 1. **Node.js 和 npm**：React 依赖于 Node.js 和 npm（Node 包管理器）来进行包管理。你可以从官方网站（https://nodejs.org/）下载并安装
    Node.js。npm 已经捆绑在 Node.js 中。
- en: '2\. **Text Editor or IDE**: You''ll need a text editor or integrated development
    environment (IDE) to write React code. Popular choices include Visual Studio Code,
    Sublime Text, and WebStorm.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 2. **文本编辑器或 IDE**：你需要一个文本编辑器或集成开发环境（IDE）来编写 React 代码。常见的选择包括 Visual Studio Code、Sublime
    Text 和 WebStorm。
- en: '3\. **Basic Knowledge of JavaScript**: React is built on JavaScript, so having
    a solid understanding of JavaScript fundamentals is essential.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 3. **JavaScript 基础知识**：React 是建立在 JavaScript 之上的，因此扎实的 JavaScript 基础知识非常重要。
- en: With these prerequisites in check, let's proceed with setting up your React
    development environment.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在确保这些先决条件之后，我们可以继续设置你的 React 开发环境。
- en: 'Create React App: A Quick Start'
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Create React App：快速入门
- en: The quickest and most convenient way to set up a React development environment
    is by using Create React App. Create React App is a command-line tool developed
    by Facebook that sets up a new React project with a pre-configured development
    environment. It simplifies the setup process and provides a solid foundation for
    your React applications.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 React 开发环境最快、最方便的方法是使用 Create React App。Create React App 是一个由 Facebook 开发的命令行工具，它可以为你设置一个预配置的开发环境并初始化一个新的
    React 项目。它简化了设置过程，并为你的 React 应用程序提供了坚实的基础。
- en: 'Step 1: Installation'
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 1：安装
- en: 'To get started with Create React App, open your terminal or command prompt
    and run the following command:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 Create React App，打开你的终端或命令提示符并运行以下命令：
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Replace `my-react-app` with the name you want to give to your project. This
    command initializes a new React project in a directory with the specified name.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `my-react-app` 替换为你想要给项目起的名字。这个命令会在指定名称的目录中初始化一个新的 React 项目。
- en: 'Step 2: Project Structure'
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 步骤 2：项目结构
- en: 'Once the installation process is complete, navigate to your project folder
    using the `cd` command. You''ll find that Create React App has generated a project
    structure with the following files and folders:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装过程完成，使用 `cd` 命令导航到你的项目文件夹。你会发现 Create React App 已经生成了一个包含以下文件和文件夹的项目结构：
- en: '- `node_modules`: This folder contains all the project dependencies.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '- `node_modules`：这个文件夹包含了所有的项目依赖。'
- en: '- `public`: This folder houses the public assets of your application, including
    the HTML file that serves as the entry point.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '- `public`：这个文件夹包含了你的应用程序的公共资源，包括作为入口点的 HTML 文件。'
- en: '- `src`: The `src` folder is where you''ll spend most of your time coding.
    It contains the source code of your React application.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '- `src`：`src` 文件夹是你大部分时间会用来编写代码的地方。它包含了你 React 应用程序的源代码。'
- en: '- `package.json`: This file lists the project''s dependencies, scripts, and
    other metadata.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '- `package.json`：此文件列出了项目的依赖、脚本和其他元数据。'
- en: '- `README.md`: A readme file with information about your project.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '- `README.md`：一个包含项目相关信息的自述文件。'
- en: '- Other configuration files and folders.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '- 其他配置文件和文件夹。'
- en: 'Step 3: Starting the Development Server'
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第三步：启动开发服务器
- en: 'With your project set up, you''re ready to start the development server. In
    your terminal, run the following command within your project directory:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的项目设置完成后，你已经准备好启动开发服务器。在终端中，在项目目录下运行以下命令：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This command launches the development server and opens your React application
    in a web browser. Any changes you make to your code will trigger an automatic
    refresh of the application in the browser, allowing you to see your updates in
    real-time.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令启动开发服务器，并在 Web 浏览器中打开你的 React 应用程序。你对代码所做的任何更改都会触发应用程序在浏览器中的自动刷新，让你能够实时查看更新。
- en: Exploring Create React App
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索 Create React App
- en: Now that you have your React project up and running, let's explore some of the
    features and tools that Create React App provides.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的 React 项目已经启动，让我们来探索一下 Create React App 提供的一些功能和工具。
- en: Development Server
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 开发服务器
- en: Create React App includes a development server that offers hot reloading. This
    means that as you make changes to your code, the server automatically refreshes
    the application in your browser. This feature greatly speeds up the development
    process.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Create React App 包含一个提供热重载功能的开发服务器。这意味着，当你对代码进行更改时，服务器会自动刷新浏览器中的应用程序。这项功能大大加快了开发过程。
- en: ESLint Integration
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: ESLint 集成
- en: Create React App comes with ESLint preconfigured. ESLint is a static code analysis
    tool that helps you maintain consistent code quality and adhere to best practices.
    It will highlight any code issues or style violations in your code editor.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Create React App 默认预配置了 ESLint。ESLint 是一个静态代码分析工具，帮助你保持代码质量的一致性并遵循最佳实践。它会在你的代码编辑器中突出显示任何代码问题或风格违规。
- en: Babel Configuration
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Babel 配置
- en: Babel is a JavaScript compiler that allows you to use the latest ECMAScript
    features in your code. Create React App configures Babel to work seamlessly with
    React, so you can write modern JavaScript without worrying about compatibility
    issues.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Babel 是一个 JavaScript 编译器，它允许你在代码中使用最新的 ECMAScript 特性。Create React App 配置了 Babel，使其能够与
    React 无缝工作，这样你就可以编写现代 JavaScript，而无需担心兼容性问题。
- en: CSS Modules
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: CSS 模块
- en: For styling your React components, Create React App supports CSS Modules out
    of the box. CSS Modules provide scoped CSS, preventing styles from bleeding into
    other parts of your application. This makes it easier to manage styles in larger
    projects.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了给你的 React 组件添加样式，Create React App 开箱即用地支持 CSS 模块。CSS 模块提供了作用域样式，防止样式泄漏到应用程序的其他部分。这使得在大型项目中管理样式更加容易。
- en: Testing Setup
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试设置
- en: Create React App includes a testing setup with Jest, a popular JavaScript testing
    framework, and React Testing Library. You can write unit tests and integration
    tests for your components to ensure their functionality remains intact as you
    make changes.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Create React App 包含了一个测试设置，使用 Jest 这个流行的 JavaScript 测试框架和 React Testing Library。你可以为你的组件编写单元测试和集成测试，以确保在进行更改时它们的功能保持不变。
- en: Production Build
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 生产构建
- en: 'When you''re ready to deploy your React application to production, Create React
    App provides an easy way to build an optimized production bundle. You can create
    a production-ready build of your application using the following command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当你准备将 React 应用部署到生产环境时，Create React App 提供了一个简便的方式来构建一个优化的生产版本。你可以使用以下命令创建生产就绪的应用版本：
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This command generates a `build` folder containing optimized and minified assets
    that are ready for deployment to a web server or hosting platform.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令会生成一个 `build` 文件夹，其中包含优化过且压缩过的资源，准备部署到 Web 服务器或托管平台。
- en: Customizing Your Environment
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义环境
- en: While Create React App offers a fantastic starting point, you may find yourself
    needing custom configurations or additional tools for your project. Thankfully,
    Create React App allows for easy ejection.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Create React App 提供了一个极好的起点，但你可能会发现自己需要为项目添加自定义配置或额外的工具。幸运的是，Create React
    App 允许轻松弹出（eject）。
- en: Ejecting
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 弹出
- en: 'Ejecting from Create React App means that you''re taking full control of your
    project''s configuration. This is a one-way operation, so make sure you understand
    the implications. To eject, run the following command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Create React App 中弹出意味着你将完全控制项目的配置。这是一个不可逆操作，因此请确保理解其影响。要弹出，请运行以下命令：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: After ejecting, you'll have access to all the configuration files and dependencies
    used by Create React App. This gives you the flexibility to add, modify, or remove
    configurations as needed.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 弹出后，你将能够访问 Create React App 使用的所有配置文件和依赖项。这将赋予你添加、修改或移除配置的灵活性。
- en: Keep in mind that ejecting should be done with caution, as it increases the
    complexity of your project and may require more manual maintenance.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，弹出操作应谨慎进行，因为它会增加项目的复杂性，并可能需要更多的手动维护。
- en: Additional Tools and Extensions
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外工具和扩展
- en: 'To further enhance your React development environment, consider installing
    additional tools and extensions for your text editor or IDE. Here are some popular
    choices:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步提升你的 React 开发环境，考虑为你的文本编辑器或 IDE 安装额外的工具和扩展。以下是一些流行的选择：
- en: '1\. **Visual Studio Code**: If you''re using Visual Studio Code, you can install
    extensions like "ESLint" for code linting, "Prettier" for code formatting, and
    "React Snippets" for efficient React code completion.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. **Visual Studio Code**：如果你正在使用 Visual Studio Code，可以安装像 "ESLint" 这样的扩展来进行代码检查，"Prettier"
    来进行代码格式化，和 "React Snippets" 来提高 React 代码补全效率。
- en: '2\. **React Developer Tools**: This browser extension is available for Chrome
    and Firefox. It allows you to inspect the component hierarchy, view component
    state, and track component updates in real-time.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 2. **React 开发者工具**：此浏览器扩展程序可用于 Chrome 和 Firefox。它允许你检查组件层次结构，查看组件状态，并实时跟踪组件更新。
- en: '3'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '3'
- en: '. **Redux DevTools**: If you plan to use Redux for state management in your
    React application, the Redux DevTools extension is invaluable. It provides a comprehensive
    view of your application''s state and actions.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: . **Redux DevTools**：如果你计划在 React 应用中使用 Redux 进行状态管理，那么 Redux DevTools 扩展是非常宝贵的。它提供了你应用状态和动作的全面视图。
- en: Conclusion
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Congratulations! You've successfully set up your React development environment
    using Create React App. With a well-configured environment in place, you're ready
    to start building dynamic web applications with React. Whether you're working
    on a personal project or collaborating with a team, your development environment
    is the cornerstone of your productivity and code quality.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已成功使用 Create React App 设置了 React 开发环境。配置好开发环境后，你可以开始使用 React 构建动态 Web 应用程序。无论是个人项目还是团队协作，你的开发环境都是生产力和代码质量的基石。
