["```jsjavascript\n\n// Example 1: Creating arrays\n\nconst fruits = [\"apple\", \"banana\", \"orange\"];\n\nconst numbers = new Array(1, 2, 3, 4, 5);\n\n```", "```jsjavascript\n\n// Example 2: Accessing array elements\n\nconst fruits = [\"apple\", \"banana\", \"orange\"];\n\nconsole.log(fruits[0]); // Output: \"apple\"\n\nconsole.log(fruits[1]); // Output: \"banana\"\n\n```", "```jsjavascript\n\n// Example 3: Modifying array elements\n\nconst fruits = [\"apple\", \"banana\", \"orange\"];\n\nfruits[1] = \"grape\";\n\nconsole.log(fruits); // Output: [\"apple\", \"grape\", \"orange\"]\n\n```", "```jsjavascript\n\n// Example 4: Array length\n\nconst fruits = [\"apple\", \"banana\", \"orange\"];\n\nconsole.log(fruits.length); // Output: 3\n\n```", "```jsjavascript\n\n// Example 5: Iterating through arrays (for loop)\n\nconst fruits = [\"apple\", \"banana\", \"orange\"];\n\nfor (let i = 0; i < fruits.length; i++) {\n\nconsole.log(fruits[i]);\n\n}\n\n// Output:\n\n// \"apple\"\n\n// \"banana\"\n\n// \"orange\"\n\n```", "```jsjavascript\n\n// Example 6: Iterating through arrays (for...of loop)\n\nconst fruits = [\"apple\", \"banana\", \"orange\"];\n\nfor (let fruit of fruits) {\n\nconsole.log(fruit);\n\n}\n\n// Output:\n\n// \"apple\"\n\n// \"banana\"\n\n// \"orange\"\n\n```", "```jsjavascript\n\n// Example 7: Adding elements (push)\n\nconst fruits = [\"apple\", \"banana\"];\n\nfruits.push(\"orange\", \"grape\");\n\nconsole.log(fruits); // Output: [\"apple\", \"banana\", \"orange\", \"grape\"]\n\n```", "```jsjavascript\n\n// Example 8: Adding elements (unshift)\n\nconst fruits = [\"apple\", \"banana\"];\n\nfruits.unshift(\"orange\", \"grape\");\n\nconsole.log(fruits); // Output: [\"orange\", \"grape\", \"apple\", \"banana\"]\n\n```", "```jsjavascript\n\n// Example 9: Removing elements (pop)\n\nconst fruits = [\"apple\", \"banana\", \"orange\"];\n\nconst removedFruit = fruits.pop();\n\nconsole.log(removedFruit); // Output: \"orange\"\n\nconsole.log(fruits); // Output: [\"apple\", \"banana\"]\n\n```", "```jsjavascript\n\n// Example 10: Removing elements (shift)\n\nconst fruits = [\"apple\", \"banana\", \"orange\"];\n\nconst removedFruit = fruits.shift();\n\nconsole.log(removedFruit); // Output: \"apple\"\n\nconsole.log(fruits); // Output: [\"banana\", \"orange\"]\n\n```", "```jsjavascript\n\n// Example 11: Modifying elements (splice)\n\nconst fruits = [\"apple\", \"banana\", \"orange\"];\n\nfruits.splice(1, 1, \"grape\", \"kiwi\");\n\nconsole.log(fruits); // Output: [\"apple\", \"grape\", \"kiwi\", \"orange\"]\n\n```", "```jsjavascript\n\n// Example 12: Searching for elements (indexOf)\n\nconst fruits = [\"apple\", \"banana\", \"orange\"];\n\nconst index = fruits.indexOf(\"banana\");\n\nconsole.log(index); // Output: 1\n\n```", "```jsjavascript\n\n// Example 13: Searching for elements (lastIndexOf)\n\nconst fruits = [\"apple\", \"banana\", \"orange\", \"banana\"];\n\nconst index = fruits.lastIndexOf(\"banana\");\n\nconsole.log(index); // Output: 3\n\n```", "```jsjavascript\n\n// Example 14: Slicing arrays\n\nconst fruits = [\"apple\", \"banana\", \"orange\", \"grape\"];\n\nconst slicedFruits = fruits.slice(1, 3);\n\nconsole.log(slicedFruits); //\n\nOutput: [\"banana\", \"orange\"]\n\n```", "```jsjavascript\n\n// Example 15: Concatenating arrays\n\nconst fruits = [\"apple\", \"banana\"];\n\nconst vegetables = [\"carrot\", \"tomato\"];\n\nconst combined = fruits.concat(vegetables);\n\nconsole.log(combined); // Output: [\"apple\", \"banana\", \"carrot\", \"tomato\"]\n\n```", "```jsjavascript\n\n// Example 16: Mapping array elements\n\nconst numbers = [1, 2, 3, 4, 5];\n\nconst squaredNumbers = numbers.map((num) => num * num);\n\nconsole.log(squaredNumbers); // Output: [1, 4, 9, 16, 25]\n\n```", "```jsjavascript\n\n// Example 17: Filtering array elements\n\nconst numbers = [1, 2, 3, 4, 5];\n\nconst evenNumbers = numbers.filter((num) => num % 2 === 0);\n\nconsole.log(evenNumbers); // Output: [2, 4]\n\n```", "```jsjavascript\n\n// Example 18: Reducing array elements\n\nconst numbers = [1, 2, 3, 4, 5];\n\nconst sum = numbers.reduce((acc, num) => acc + num, 0);\n\nconsole.log(sum); // Output: 15\n\n```"]