- en: © The Author(s), under exclusive license to Springer Fachmedien Wiesbaden GmbH,
    part of Springer Nature 2024J. L. ZuckarelliLearn coding with Python and JavaScript
    [https://doi.org/10.1007/978-3-658-42912-6_18](https://doi.org/10.1007/978-3-658-42912-6_18)
  prefs: []
  type: TYPE_NORMAL
- en: '18. Tools & Help: What Do I Need for Programming?'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Joachim L. Zuckarelli^([1](#Aff2)  )(1)München, GermanyOverview
  prefs: []
  type: TYPE_NORMAL
- en: First, we’ll look at what you need to program with Python. Fortunately, this
    is not much at all, so we can quickly get started with the actual work.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter you will learn:'
  prefs: []
  type: TYPE_NORMAL
- en: How to install the Python interpreter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: how to install the PyCharm development environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: how to use the Help function of Python
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: how to use non-official sources of help for Python.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 18.1 Installing the Python Interpreter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can conveniently download the Python installer from ► [http://​www.​python.​org](http://www.python.org).
    The website is operated by the *Python Software Foundation*, the organization
    that coordinates the further development of Python. On the website, under “Downloads,”
    simply choose the latest Python version for your operating system. We’re working
    with Python for Windows here in the book, but everything we’ll discuss here applies
    to the macOS and Linux versions in much the same way. The Python that you then
    install is called *CPython*, the “official” Python version, if you will, in whose
    development Python inventor *Guido van Rossum* is involved. In addition, there
    are numerous other Python implementations. There are even Python interpreters
    that are written in Python themselves! *CPython*, on the other hand, was developed
    in the C programming language. And it is exactly this *CPython* that you are downloading
    now, even though it is not listed under this name on the ► [python.​org](http://python.org)
    website.
  prefs: []
  type: TYPE_NORMAL
- en: When the download is complete, run the installer and follow the instructions
    on the screen. Make a note of the path where Python will be installed. You do
    not need to change anything in the default settings that the setup program provides.
    The installation is usually complete within a few minutes.
  prefs: []
  type: TYPE_NORMAL
- en: By the way, *CPython* only exists in English, which means that all messages,
    warnings, and other output are only generated in English; the Python programming
    language also uses only English terms. In this respect, you didn’t miss the dialog
    where you can select the language during installation, because there isn’t one!
    Apart from that, it is recommended to install the English version of all tools
    anyway, because this makes it much easier to search for help on the Internet if
    you don’t understand an error message or want to find out how to perform a certain
    operation with the tool.
  prefs: []
  type: TYPE_NORMAL
- en: After the installation you are ready to go. If you change to the directory where
    Python has been installed, you can invoke the **Python** program there. A window
    will open that looks like the one in ◘ Fig. [18.1](#Fig1).![](../images/474412_1_En_18_Chapter/474412_1_En_18_Fig1_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: A screenshot of the Python console. It displays a list of words that the user
    can input to acquire extra information, such as help, copyright, credits, and
    license.
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 18.1
  prefs: []
  type: TYPE_NORMAL
- en: The Python console after the first startup
  prefs: []
  type: TYPE_NORMAL
- en: This is the *Python console*. It allows you to run Python in *interactive mode*,
    that is, to type in a statement and execute it directly (scroll back to ► Chap.
    [9](474412_1_En_9_Chapter.xhtml) if you no longer remember the difference between
    interactive and script mode). One such command that the console processes is **quit()**;
    it exits the Python console and closes the window.
  prefs: []
  type: TYPE_NORMAL
- en: 'Besides this interactive mode, Python of course also offers a script mode that
    allows us to write and run longer programs. Python code files usually have the
    extension **.py**. So if you have a program **myprogram.py** and want to run it,
    you go to the Python directory in the terminal/console of your operating system
    and type there:'
  prefs: []
  type: TYPE_NORMAL
- en: python myprogram.pyOf course, it is more convenient to use an integrated development
    environment than to use the Python interpreter directly. Python comes with such
    an environment in the form of *IDLE*. However, it is rather rudimentary, even
    if it supports features such as syntax highlighting. You can get an impression
    of *IDLE* in ◘ Fig. [18.2](#Fig2). In the following section, we will work with
    *PyCharm,* a much more powerful development environment, which we will install
    next.![](../images/474412_1_En_18_Chapter/474412_1_En_18_Fig2_HTML.jpg)
  prefs: []
  type: TYPE_NORMAL
- en: A screenshot of the Python development environment denotes a few lines of text.
    The menu bar at the top includes file, edit, shell, debug, options, window, and
    help. A line at the bottom asks to type help, copyright, credits, and license
    for more information.
  prefs: []
  type: TYPE_NORMAL
- en: Fig. 18.2
  prefs: []
  type: TYPE_NORMAL
- en: The Python development environment IDLE
  prefs: []
  type: TYPE_NORMAL
- en: 18.2 Installing the *PyCharm* IDE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*PyCharm* is a popular integrated development environment (IDE) for Python,
    developed by the Czech software company *JetBrains*, headquartered in Prague.
    JetBrains specializes in development tools and offers some well-known IDEs such
    as *IntelliJ IDEA* (especially for Java), *WebStorm* (for web development, especially
    JavaScript), *PHPStorm* (for PHP) or *RubyMine* (for Ruby). They have also developed
    a programming language called *Kotlin,* which is mainly used in mobile app development.'
  prefs: []
  type: TYPE_NORMAL
- en: You can download the free community version of *PyCharm* from the ► [https://​www.​jetbrains.​com/​PyCharm/​](https://www.jetbrains.com/PyCharm/)
    website. This is limited in functionality, but already offers considerably more
    features than we will ever be able to use in this book. Click the “Download” button
    and then choose your operating system; Windows, MacOS and Linux are supported.
    After downloading the setup program, start the installation process. You can leave
    the default settings here as well; however, it is recommended to at least associate
    **.py** files with *PyCharm* in the "Create Associations" section of the installer,
    so that they are always opened automatically with the IDE from now on. The installation
    usually does not take long but requires over 1.6 GB of free hard disk space. The
    times when you could install MS-DOS development environments from three or four
    3.5-inch floppy disks with 1.44 MB capacity each are definitely over!
  prefs: []
  type: TYPE_NORMAL
- en: When you start *PyCharm* for the first time, you can configure in the "Customize"
    section whether you want to use the dark or the light color scheme. All illustrations
    in this book were created in the light color scheme for better printability; however,
    the author otherwise works in dark mode, which is a little less straining on the
    eyes. It’s best to exit *PyCharm* at this point first by closing the dialog. In
    the next chapter, we will start our first Python project. Then we will continue
    at this point.
  prefs: []
  type: TYPE_NORMAL
- en: 18.3 Getting Help with Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: On the Internet
  prefs: []
  type: TYPE_NORMAL
- en: Python is one of the most popular programming languages around. So, it’s no
    wonder that you can find countless resources around Python on the internet. One
    of these resources is the aforementioned platform *Stack Overflow*, where you’ll
    find a ton of Python questions and answers that leave little to be desired. As
    of this writing, there are more than 2.1 million questions tagged **Python** on
    *Stack Overflow.* Today alone, 1,039 have been added. The probability that your
    question is also among the 2 million should be high. Therefore, *Stack Overflow*
    is a good place to start for most questions. The *Stack Overflow* hits are also
    regularly listed among the top search results on Google. You can, of course, add
    the **site** keyword to the Google search (**site:**► [**StackOverflow.com**](http://stackoverflow.com))
    to narrow the search to *Stack Overflow*. But even beyond *Stack Overflow,* the
    internet is full of posts, blogs, tutorials, videos, and every other content format
    imaginable related to Python.
  prefs: []
  type: TYPE_NORMAL
- en: “Official” Python Help
  prefs: []
  type: TYPE_NORMAL
- en: 'Python itself also comes with official help. If you want to know how a particular
    element of the programming language works, you can refer to the documentation
    of classes and functions that is automatically installed with Python. You do this
    by calling the **help(element)** function in the Python console and giving it
    as an argument the name of the module, package, class, or function for which you
    want to see information. For example, calling **help(print)** returns the following
    help information:'
  prefs: []
  type: TYPE_NORMAL
- en: '**>>>** help(print)**print(...)****print(value, ..., sep='' '', end=''\n'',
    file=sys.stdout, flush=False)****Prints the values to a stream, or to sys.stdout
    by default.****Optional keyword arguments:****file: a file-like object (stream);
    defaults to the current sys.stdout.****sep: string inserted between values, default
    a space.****end: string appended after the last value, default a newline.****flush:
    whether to forcibly flush the stream.**'
  prefs: []
  type: TYPE_NORMAL
- en: Start the console again as in ► Sect. [18.1](#Sec1) and try it out! Do not include
    the **>>>** as this is the prompt, indicating that the console is ready to accept
    your input. By the way, if you type **help()** without an argument, the console
    switches to the Python help system. The modified prompt **help>** indicates that
    you can now enter terms, which will then display matching help entries. You can
    leave the help system and return to the Python console by typing **quit** (without
    brackets).
  prefs: []
  type: TYPE_NORMAL
- en: The output of our **help()** call gives us some information about what the arguments
    of the **print()** function are, and most importantly, what **print()** does in
    the first place. However, this help is rather rudimentary. If you want more details,
    it is best to search the Internet yourself.
  prefs: []
  type: TYPE_NORMAL
- en: 'The *Python Software Foundation* also offers a lot of information about the
    Python standard library (including the **print()** function) on its website ►
    [python.​org](http://python.org), under the heading “Library Reference”: ► [https://​docs.​python.​org/​3/​library/​functions.​html#print](https://docs.python.org/3/library/functions.html%2523print)).
    (Note, this is the same website from which we downloaded the Python interpreter.)
    The “Language Reference” explains the structure and syntax of the language, but
    is rather technical. The “Tutorial” section contains an introduction to Python,
    which is probably difficult to digest without prior knowledge of other programming
    languages.'
  prefs: []
  type: TYPE_NORMAL
- en: 18.4 Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this chapter, we have looked at how to install Python as well as the *PyCharm
    IDE*. We have also learned about the most important ways to get help with Python.
  prefs: []
  type: TYPE_NORMAL
- en: 'Be sure to take the following points from this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: The “official” Python implementation, *CPython*, is further developed by the
    *Python Software Foundation* and is the variant of Python that you install by
    default when you download Python from ► [python.​org.​](http://python.org)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python comes with the Python interpreter program called **python**, which can
    be used either as an interactive Python console or to interpret entire Python
    scripts.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With *IDLE,* Python also supplies a rudimentary IDE.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*PyCharm* by *JetBrains* is a very powerful Python development environment,
    of which a limited community version is available for free.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Help for Python is provided by Python itself with the **help(*****element*****)**
    function. It provides help texts for Python modules, classes, or functions, but
    they are often not very detailed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further “official” help is available mainly in the form of the Language Reference
    and the Python Standard Library Reference at ► [python.​org](http://python.org).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition, given the high popularity of Python, there are many rich sources
    of information available on the Internet; one of the most important—as for most
    other programming languages—is the developer forum *Stack Overflow*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
