- en: '| Recipe 8 | Converting HTML Markup to HTML Entities with replaceAll() |'
  id: totrans-0
  prefs: []
  type: TYPE_TB
  zh: '| 配方 8 | 使用 replaceAll() 将 HTML 标记转换为 HTML 实体 |'
- en: Task
  id: totrans-1
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 任务
- en: Imagine you want to publish programming tutorials on your website that contain
    HTML markup. But you encounter an issue where web browsers interpret the HTML
    tags in your examples instead of displaying them. This happens because browsers
    assume that you use the tags to structure your web page.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想在你的网站上发布包含 HTML 标记的编程教程。但你遇到一个问题，浏览器会解释你示例中的 HTML 标签，而不是显示它们。这是因为浏览器认为你使用这些标签来构建网页。
- en: You need to represent the markup in a way that prevents the browser from interpreting
    it.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要以一种方式表示这些标记，以防止浏览器对其进行解析。
- en: Solution
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Use the replaceAll() method to replace the components of HTML tags with entities:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 replaceAll() 方法将 HTML 标签的组件替换为实体：
- en: '[part_1/converting_html_to_entities/entities_ex1.js](http://media.pragprog.com/titles/fkjavascript/code/part_1/converting_html_to_entities/entities_ex1.js)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '[part_1/converting_html_to_entities/entities_ex1.js](http://media.pragprog.com/titles/fkjavascript/code/part_1/converting_html_to_entities/entities_ex1.js)'
- en: '|   | **function** escapeHTML(str) { |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '|   | **function** escapeHTML(str) { |'
- en: '|   | **return** str |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '|   | **return** str |'
- en: '|   | .replaceAll(*''&''*, *''&amp;''*) |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '|   | .replaceAll(*''&''*, *''&amp;''*) |'
- en: '|   | .replaceAll(*''<''*, *''&lt;''*) |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '|   | .replaceAll(*''<''*, *''&lt;''*) |'
- en: '|   | .replaceAll(*''>''*, *''&gt;''*) |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '|   | .replaceAll(*''>''*, *''&gt;''*) |'
- en: '|   | .replaceAll(*''"''*, *''&quot;''*) |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '|   | .replaceAll(*''"''*, *''&quot;''*) |'
- en: '|   | .replaceAll(*"''"*, *''&apos;''*); |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '|   | .replaceAll(*"''"*, *''&apos;''*); |'
- en: '|   | } |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '|   | } |'
- en: '|   |  |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '|   |  |'
- en: '|   | escapeHTML(*''<a href="test.htm">foo</a>''*); |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '|   | escapeHTML(*''<a href="test.htm">foo</a>''*); |'
- en: '|   | *// → "&lt;a href=&quot;test.htm&quot;&gt;foo&lt;/a&gt;"* |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '|   | *// → "&lt;a href=&quot;test.htm&quot;&gt;foo&lt;/a&gt;"* |'
- en: replaceAll() lets you replace all occurrences of a pattern in a string. With
    each call, it returns a new string so you can chain multiple replaceAll() methods
    to replace several patterns in a single statement.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: replaceAll() 方法允许你替换字符串中所有匹配的模式。每次调用时，它都会返回一个新的字符串，因此你可以链式调用多个 replaceAll()
    方法，在一个语句中替换多个模式。
- en: Discussion
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 讨论
- en: 'By using HTML entities, we can display certain characters that would otherwise
    be interpreted by web browsers as HTML code. The table below shows the list of
    characters and their respective HTML entities:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用 HTML 实体，我们可以显示某些字符，否则这些字符会被浏览器解析为 HTML 代码。下表显示了字符及其对应的 HTML 实体：
- en: '| Character | Entity |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 字符 | 实体 |'
- en: '| --- | --- |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| & | &amp; |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| & | &amp; |'
- en: '| < | &lt; |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| < | &lt; |'
- en: '| > | &gt; |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| > | &gt; |'
- en: '| " | &quot; |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| " | &quot; |'
- en: '| ’ | &apos; |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| ’ | &apos; |'
- en: Keep in mind that HTML entities are case sensitive, so &amp; and &AMP; are not
    the same entity.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，HTML 实体是区分大小写的，所以 &amp; 和 &AMP; 不是同一个实体。
- en: 'There are two types of HTML entities: named entities and numeric entities.
    Named entities are represented by a string of letters enclosed in an ampersand
    (&) and a semicolon (;). Numeric entities, on the other hand, are represented
    by an ampersand (&), followed by a pound sign (#), and either a decimal or hexadecimal
    code, and end with a semicolon (;).'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: HTML 实体有两种类型：命名实体和数字实体。命名实体由一串字母组成，字母之间用与符号（&）和分号（;）包围。而数字实体则由与符号（&）开头，后跟井号（#），再接十进制或十六进制代码，并以分号（;）结束。
- en: 'Here’s the table above with the named entities converted to their corresponding
    numeric entities:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这是上面的表格，将命名实体转换为相应的数字实体：
- en: '| Character | Entity |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| 字符 | 实体 |'
- en: '| --- | --- |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| & | &#38; |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| & | &#38; |'
- en: '| < | &#60; |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| < | &#60; |'
- en: '| > | &#62; |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| > | &#62; |'
- en: '| " | &#34; |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| " | &#34; |'
- en: '| ’ | &#39; |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| ’ | &#39; |'
- en: You can use both named and numeric entities to display special characters in
    HTML documents. But named entities are generally preferred over numeric ones because
    they are more human-readable and easier to remember.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用命名实体和数字实体在 HTML 文档中显示特殊字符。但通常优先使用命名实体，因为它们更具可读性，也更容易记住。
- en: Besides displaying characters that have special meanings, HTML entities are
    also useful to display characters that are difficult to type using a standard
    keyboard, such as foreign language characters, mathematical symbols, or emojis.
    By using HTML entities, we can ensure that these characters are displayed correctly
    on web pages.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 除了显示具有特殊意义的字符，HTML 实体还可以用于显示那些在标准键盘上难以输入的字符，例如外语字符、数学符号或表情符号。通过使用 HTML 实体，我们可以确保这些字符在网页上正确显示。
