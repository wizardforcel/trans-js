- en: Chapter 1
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
  zh: 第1章
- en: These are the solutions to the exercises found in the section [​`Exercises`](f_0023.xhtml#why.data.structures.matter.exercises).
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 这些是本节中练习的解决方案，链接为 [​`练习`](f_0023.xhtml#why.data.structures.matter.exercises)。
- en: 'Let’s break down each of the cases:'
  id: totrans-2
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 让我们逐一分析每种情况：
- en: Reading from an array always takes just one step.
  id: totrans-3
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 从数组读取操作始终只需一步。
- en: Searching for a nonexistent element within an array of size 100 will take 100
    steps, as the computer needs to inspect each element of the array before determining
    the element cannot be found.
  id: totrans-4
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 在大小为100的数组中搜索一个不存在的元素将需要100步，因为计算机需要检查数组中的每个元素，以确定该元素无法找到。
- en: 'The insertion will take 101 steps: 100 shifts of each element to the right,
    and one step to insert the new element at the front of the array.'
  id: totrans-5
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 插入操作将需要101步：将每个元素向右移动100步，然后一步将新元素插入数组的开头。
- en: Insertion at the end of an array always takes one step.
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 在数组末尾插入操作始终只需一步。
- en: 'The deletion will take 100 steps: first the computer deletes the first element
    and then shifts the remaining 99 elements to the left, one at a time.'
  id: totrans-7
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 删除操作将需要100步：首先计算机删除第一个元素，然后将剩余的99个元素逐个向左移动。
- en: Deletion at the end of an array always takes one step.
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 在数组末尾删除操作始终只需一步。
- en: 'Let’s break down each of the cases:'
  id: totrans-9
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 让我们逐一分析每种情况：
- en: Like the array, reading from the array-based set will take just one step.
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 与数组一样，从基于数组的集合读取只需一步。
- en: Like the array, searching the array-based set will take 100 steps, as we inspect
    each element before concluding that the element isn’t there.
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 与数组一样，搜索基于数组的集合将需要100步，因为我们在确认元素不存在之前要检查每个元素。
- en: To insert into the set, we first need to conduct a full search to make sure
    the value doesn’t already exist within the set. This search will take 100 steps.
    Then we need to shift all 100 elements to the right to make room for the new value.
    Finally, we drop the new value at the beginning of the set. This is a total of
    201 steps.
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 为了插入集合，我们首先需要进行一次完整搜索，以确保该值不在集合中。此搜索将需要100步。然后，我们需要将所有100个元素向右移动，以为新值腾出空间。最后，我们将新值放在集合的开头。这总共需要201步。
- en: This insertion takes 101 steps. Again, we need to conduct a full search before
    inserting, which takes 100 steps. We then conclude with the final step of inserting
    the new value at the end of the set.
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 此次插入需要101步。同样，我们需要在插入之前进行一次完整搜索，这需要100步。最后一步是在集合的末尾插入新值。
- en: The deletion will take 100 steps, just like a classic array.
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 删除操作将需要100步，和经典数组一样。
- en: The deletion will take one step, just like a classic array.
  id: totrans-15
  prefs:
  - PREF_IND
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 删除操作将只需一步，和经典数组一样。
- en: If the array contains `N` elements, searching for all instances of the string
    `"apple"` in an array will take `N` steps. When searching for just one instance,
    we can cut our search short as soon as we find it. But if we need to find all
    instances, we have no choice but to inspect each element of the entire array.
  id: totrans-16
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 如果数组包含`N`个元素，在数组中搜索字符串`"apple"`的所有实例将需要`N`步。当只搜索一个实例时，我们可以在找到它后立即结束搜索。但如果我们需要找到所有实例，就必须检查整个数组的每个元素。
