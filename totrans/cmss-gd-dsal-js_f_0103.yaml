- en: Exercises
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The following exercises provide you with the opportunity to practice with recursion.
    The solutions to these exercises are found in the section [​*Chapter 10*​](f_0215.xhtml#recursively.recurse.with.recursion.solutions).
  prefs: []
  type: TYPE_NORMAL
- en: 'The following function prints every other number from a low number to a high
    number. For example, if low is 0 and high is 10, it would print:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| ​  | 0 |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | 2 |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | 4 |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | 6 |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | 8 |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | 10 |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'Identify the base case in the function:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '| ​  | ​**function**​ printEveryOther(low, high) { |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | ​**if**​ (low > high) { ​**return**​; } |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  |  |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | console.log(low); |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | printEveryOther(low + 2, high); |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | } |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'My kid was playing with my computer and changed my factorial function so that
    it computes factorial based on (number - 2) instead of (number - 1). He also changed
    number <= 1 to number === 1. Predict what will happen when we run factorial(10)
    using this function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| ​  | ​**function**​ factorial(number) { |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | ​**if**​ (number === 1) { |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | ​**return**​ 1; |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | } ​**else**​ { |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | ​**return**​ number * factorial(number - 2); |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | } |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | } |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'Following is a function in which we pass in two numbers called low and high.
    The function returns the sum of all the numbers from low to high. For example,
    if low is 1 and high is 10, the function will return the sum of all numbers from
    1 to 10, which is 55. However, our code is missing the base case and will run
    indefinitely! Fix the code by adding the correct base case:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| ​  | ​**function**​ sum(low, high) { |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | ​**return**​ high + sum(low, high - 1); |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | } |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: 'Here’s an array containing both numbers and arrays, which in turn contain numbers
    and arrays:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '| ​  | array = [ 1, |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | 2, |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | 3, |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | [4, 5, 6], |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | 7, |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | [8, |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | [9, 10, 11, |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | [12, 13, 14] |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | ] |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | ], |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | [15, 16, 17, 18, 19, |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | [20, 21, 22, |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | [23, 24, 25, |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | [26, 27, 29] |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | ], 30, 31 |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | ], 32 |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | ], 33 |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| ​  | ] |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: Write a recursive function that prints all the numbers (and just numbers).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Copyright © 2024, The Pragmatic Bookshelf.
  prefs: []
  type: TYPE_NORMAL
