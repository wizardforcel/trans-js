- en: Exercises
  id: totrans-0
  prefs:
  - PREF_H2
  stylish: true
  type: TYPE_NORMAL
  zh: 练习
- en: The following exercises provide you with the opportunity to practice with Big
    O notation. The solutions to these exercises are found in the section [`Chapter
    3`](f_0208.xhtml#big.o.notation.solutions).
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 以下练习为你提供了用大 O 符号进行练习的机会。这些练习的答案在 [`第 3 章`](f_0208.xhtml#big.o.notation.solutions)
    中可以找到。
- en: 'Use Big O notation to describe the time complexity of the following function
    that determines whether a given year is a leap year:'
  id: totrans-2
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 使用大 O 符号描述以下函数的时间复杂度，该函数用于确定给定年份是否为闰年：
- en: '| ​  | `function` isLeapYear(year) { |'
  id: totrans-3
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `function` isLeapYear(year) { |'
- en: '| ​  | `if` (year % 100 === 0) { |'
  id: totrans-4
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `if` (year % 100 === 0) { |'
- en: '| ​  | `if` (year % 400 === 0) { |'
  id: totrans-5
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `if` (year % 400 === 0) { |'
- en: '| ​  | `return` `true`; |'
  id: totrans-6
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` `true`; |'
- en: '| ​  | } `else` { |'
  id: totrans-7
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } `else` { |'
- en: '| ​  | `return` `false`; |'
  id: totrans-8
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` `false`; |'
- en: '| ​  | } |'
  id: totrans-9
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  | } |'
  id: totrans-10
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  | `return` year % 4 === 0; |'
  id: totrans-11
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` year % 4 === 0; |'
- en: '| ​  | } |'
  id: totrans-12
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: 'Use Big O notation to describe the time complexity of the following function
    that sums up all the numbers from a given array:'
  id: totrans-13
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 使用大 O 符号描述以下函数的时间复杂度，该函数计算给定数组中所有数字的总和：
- en: '| ​  | `function` arraySum(array) { |'
  id: totrans-14
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `function` arraySum(array) { |'
- en: '| ​  | `let` sum = 0; |'
  id: totrans-15
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `let` sum = 0; |'
- en: '| ​  |  |'
  id: totrans-16
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `for` (`const` number `of` array) { |'
  id: totrans-17
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `for` (`const` number `of` array) { |'
- en: '| ​  | sum += number; |'
  id: totrans-18
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | sum += number; |'
- en: '| ​  | }; |'
  id: totrans-19
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | }; |'
- en: '| ​  |  |'
  id: totrans-20
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `return` sum; |'
  id: totrans-21
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` sum; |'
- en: '| ​  | } |'
  id: totrans-22
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: 'The following function is based on the age-old analogy used to describe the
    power of compounding interest:'
  id: totrans-23
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 以下函数基于古老的类比，用于描述复利的威力：
- en: Imagine you have a chessboard, and put a single grain of rice on one square.
    On the second square, you put two grains of rice, since that is double the amount
    of rice on the previous square. On the third square, you put four grains. On the
    fourth square, you put eight grains, and on the fifth square, you put sixteen
    grains, and so on.
  id: totrans-24
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_NORMAL
  zh: 想象一下你有一个棋盘，在一个方格上放置一粒米。在第二个方格上，你放置两粒米，因为那是前一个方格米粒数量的两倍。在第三个方格上，你放置四粒米。在第四个方格上，你放置八粒米，在第五个方格上放置十六粒米，依此类推。
- en: The following function calculates which square you’ll need to place a certain
    number of rice grains. For example, for sixteen grains, the function will return
    5, since you will place the sixteen grains on the fifth square.
  id: totrans-25
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_NORMAL
  zh: 以下函数计算需要放置多少粒米的方格。例如，对于十六粒米，函数将返回 5，因为你将在第五个方格上放置这十六粒米。
- en: 'Use Big O notation to describe the time complexity of this function, which
    is below:'
  id: totrans-26
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_NORMAL
  zh: 使用大 O 符号描述以下函数的时间复杂度，该函数如下：
- en: '| ​  | `function` chessboardSpace(numberOfGrains) { |'
  id: totrans-27
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `function` chessboardSpace(numberOfGrains) { |'
- en: '| ​  | `let` chessboardSpaces = 1; |'
  id: totrans-28
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `let` chessboardSpaces = 1; |'
- en: '| ​  | `let` placedGrains = 1; |'
  id: totrans-29
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `let` placedGrains = 1; |'
- en: '| ​  |  |'
  id: totrans-30
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `while` (placedGrains < numberOfGrains) { |'
  id: totrans-31
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `while` (placedGrains < numberOfGrains) { |'
- en: '| ​  | placedGrains *= 2; |'
  id: totrans-32
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | placedGrains *= 2; |'
- en: '| ​  | chessboardSpaces += 1; |'
  id: totrans-33
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | chessboardSpaces += 1; |'
- en: '| ​  | } |'
  id: totrans-34
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  |  |'
  id: totrans-35
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `return` chessboardSpaces; |'
  id: totrans-36
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` chessboardSpaces; |'
- en: '| ​  | } |'
  id: totrans-37
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: 'The following function accepts an array of strings and returns a new array
    that only contains the strings that start with the character ’a’. Use Big O notation
    to describe the time complexity of the function:'
  id: totrans-38
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 以下函数接受一个字符串数组，并返回一个只包含以字符 ’a’ 开头的字符串的新数组。请用大 O 符号描述该函数的时间复杂度：
- en: '| ​  | `function` selectAStrings(array) { |'
  id: totrans-39
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `function` selectAStrings(array) { |'
- en: '| ​  | `const` newArray = []; |'
  id: totrans-40
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `const` newArray = []; |'
- en: '| ​  |  |'
  id: totrans-41
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `for` (`const` string `of` array) { |'
  id: totrans-42
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `for` (`const` string `of` array) { |'
- en: '| ​  | `if` (string[0] === `''a''`) { newArray.push(string); } |'
  id: totrans-43
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `if` (string[0] === `''a''`) { newArray.push(string); } |'
- en: '| ​  | }; |'
  id: totrans-44
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | }; |'
- en: '| ​  |  |'
  id: totrans-45
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `return` newArray; |'
  id: totrans-46
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` newArray; |'
- en: '| ​  | } |'
  id: totrans-47
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: 'The following function calculates the median from an ordered array. Describe
    its time complexity in terms of Big O notation:'
  id: totrans-48
  prefs:
  - PREF_OL
  stylish: true
  type: TYPE_NORMAL
  zh: 以下函数计算有序数组的中位数。请用大 O 符号描述其时间复杂度：
- en: '| ​  | `function` median(array) { |'
  id: totrans-49
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `function` median(array) { |'
- en: '| ​  | `if` (array.length === 0) { `return` `null`; } |'
  id: totrans-50
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `if` (array.length === 0) { `return` `null`; } |'
- en: '| ​  |  |'
  id: totrans-51
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `const` middle = Math.floor(array.length / 2); |'
  id: totrans-52
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `const` middle = Math.floor(array.length / 2); |'
- en: '| ​  |  |'
  id: totrans-53
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  |  |'
- en: '| ​  | `// If array has even amount of numbers:` |'
  id: totrans-54
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `// 如果数组中的数字数量为偶数:` |'
- en: '| ​  | `if` (array.length % 2 === 0) { |'
  id: totrans-55
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `if` (array.length % 2 === 0) { |'
- en: '| ​  | `return` (array[`middle - 1`] + array[`middle`]) / 2; |'
  id: totrans-56
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` (array[`middle - 1`] + array[`middle`]) / 2; |'
- en: '| ​  | } `else` { `// If array has odd amount of numbers:` |'
  id: totrans-57
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } `else` { `// 如果数组中的数字数量为奇数:` |'
- en: '| ​  | `return` array[`middle`]; |'
  id: totrans-58
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | `return` array[`middle`]; |'
- en: '| ​  | } |'
  id: totrans-59
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: '| ​  | } |'
  id: totrans-60
  prefs:
  - PREF_IND
  stylish: true
  type: TYPE_TB
  zh: '| ​  | } |'
- en: Copyright © 2024, The Pragmatic Bookshelf.
  id: totrans-61
  prefs: []
  stylish: true
  type: TYPE_NORMAL
  zh: 版权 © 2024, The Pragmatic Bookshelf.
