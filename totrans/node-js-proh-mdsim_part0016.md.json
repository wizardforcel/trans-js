["```jsbash\n\nnpm install express-validator\n\n```", "```jsjavascript\n\nconst { body, validationResult } = require('express-validator');\n\n// User registration route\n\nrouter.post(\n\n'/register',\n\n// Input validation rules\n\nbody('username').notEmpty().withMessage('Username is required'),\n\nbody('email').isEmail().withMessage('Invalid email address'),\n\nbody('password').isLength({ min: 8 }).withMessage('Password must be at least 8 characters long'),\n\nasync (req, res) => {\n\n// Check for validation errors\n\nconst errors = validationResult(req);\n\nif (!errors.isEmpty()) {\n\nreturn res.status(400).json({ errors: errors.array() });\n\n}\n\n// Registration logic\n\n// ...\n\n}\n\n);\n\n```", "```jsjavascript\n\nconst errorHandler = (err, req, res, next) => {\n\nconsole.error(err);\n\n// Handle specific error types\n\nif (err.name === 'ValidationError') {\n\nreturn res.status(400).json({ error: 'Validation error' });\n\n}\n\n// Handle other errors\n\nreturn res.status(500).json({ error: 'Internal server error' });\n\n};\n\nmodule.exports = errorHandler;\n\n```", "```jsjavascript\n\nconst errorHandler = require('./middleware/errorHandler');\n\n// ...\n\n// Error handling middleware\n\napp.use(errorHandler);\n\n```"]