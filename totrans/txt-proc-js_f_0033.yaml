- en: Chapter 2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Part II: Text Processing with Regular Expressions'
  prefs: []
  type: TYPE_NORMAL
- en: JavaScript’s built-in string methods are excellent for basic text manipulation
    tasks. But they may not suffice when you need more advanced functionality, such
    as validating user inputs. This is where regular expressions (commonly abbreviated
    as regex) become an essential tool in your JavaScript programming toolkit. Regular
    expressions provide sophisticated pattern-matching capabilities that you can use
    for complex text validation.
  prefs: []
  type: TYPE_NORMAL
- en: There are several popular implementations of regular expressions, each with
    its own unique matching algorithm. The behavior of a particular implementation
    is referred to as its flavor. Regex flavors have distinct syntax and feature sets
    and varying degrees of compatibility with each other.
  prefs: []
  type: TYPE_NORMAL
- en: In Part II, you’ll master JavaScript’s regex flavor by working through different
    recipes. If you’re new to writing regex in JavaScript, read through the introductory
    section to familiarize yourself with implementing the patterns in your code; otherwise,
    you can jump straight into recipes.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, you’ll want to test your patterns with a modern tool, which we
    talk about in Appendix 3\. So, if you don’t yet have a tool in place, take a moment
    to read through Appendix 3, [*Testing Regex with Specialized Tools*](f_0099.xhtml#apx3),
    and then select and set up a regex tool. You’ll be glad to have the tool, especially
    when building complicated regular expressions, to help you avoid errors.
  prefs: []
  type: TYPE_NORMAL
