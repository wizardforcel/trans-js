- en: Chapter 16
  id: totrans-0
  prefs:
  - PREF_H1
  stylish: true
  type: TYPE_NORMAL
- en: Security in JavaScript Applications
  id: totrans-1
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Security is a crucial aspect in software development. JavaScript applications,
    due to their nature and popularity, are often the target of attacks. Ensuring
    your application is secure is vital to protecting sensitive data and maintaining
    user trust. We'll explore common vulnerabilities in JavaScript applications, security
    practices on both the frontend and backend, and tools and libraries that can help
    strengthen the security of your applications.
  id: totrans-2
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Common vulnerabilities and how to mitigate them
  id: totrans-3
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: There are several known vulnerabilities that can affect JavaScript applications.
    Let's discuss some of the most common ones and how to mitigate them.
  id: totrans-4
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Cross-Site Scripting (`XSS`)
  id: totrans-5
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '`XSS` is a vulnerability that allows an attacker to inject malicious scripts
    into web pages viewed by other users. This can result in the theft of cookies,
    login credentials and other sensitive information.'
  id: totrans-6
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Mitigation:'
  id: totrans-7
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '1. Escape user inputs: Always escape user input before displaying it on the
    page. Use specific escaping functions for HTML, JavaScript, and URLs.'
  id: totrans-8
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '2. Utilizar `Content Security Policy (CSP)`: `CSP` helps prevent `XSS` attacks
    by restricting the sources from which scripts can be loaded.'
  id: totrans-10
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Cross-Site Request Forgery (`CSRF`)
  id: totrans-12
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '`CSRF` is an attack that forces a user to perform unwanted actions in an application
    in which they are authenticated.'
  id: totrans-13
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Mitigation:'
  id: totrans-14
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '1. Tokens `CSRF`: Use `CSRF` tokens to validate the authenticity of requests.'
  id: totrans-15
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '2. Referer Headers: Check the referer/origin headers to ensure the request
    comes from a trusted domain.'
  id: totrans-17
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Injection
  id: totrans-18
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Injection attacks occur when untrusted input is sent to an interpreter as part
    of a command or query. This can lead to the execution of malicious commands or
    SQL queries.
  id: totrans-19
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: 'Mitigation:'
  id: totrans-20
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '1. Validation of inputs: Always validate and sanitize user input.'
  id: totrans-21
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '2. Using parameterized queries: Instead of concatenating strings to create
    SQL queries, use parameterized queries.'
  id: totrans-23
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Frontend and backend security practices
  id: totrans-25
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Both on the frontend and backend, there are security practices that must be
    followed to protect the application.
  id: totrans-26
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Frontend
  id: totrans-27
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '1. `HTTPS`: Always use `HTTPS` to ensure that data transmitted between the
    client and server is encrypted.'
  id: totrans-28
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '2. Client-Side Validation: Although client-side validation does not replace
    server-side validation, it can improve user experience and prevent some common
    errors.'
  id: totrans-29
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '3. Use of trusted libraries: Make sure you use well-maintained and trusted
    open source libraries. Check regularly for security updates.'
  id: totrans-30
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '4. Protection against clickjacking attacks: Use the `X-Frame-Options` HTTP
    header to prevent your application from being embedded in other websites'' iframes.'
  id: totrans-31
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Backend
  id: totrans-33
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '1. Authentication and authorization: Implement robust authentication and authorization
    controls. Use established libraries and frameworks to manage sessions and tokens.'
  id: totrans-34
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '`2.` Error management:  Do not expose internal system details in error messages.
    Log errors in detail on the server and show generic messages to the user.'
  id: totrans-35
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '`3.` Rate limiting:  Implement rate limiting to prevent brute force attacks.'
  id: totrans-37
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '`4.` Dependency Management:  Use tools like `npm audit` to identify and fix
    vulnerabilities in dependencies.'
  id: totrans-39
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: Security tools and libraries
  id: totrans-40
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: There are several tools and libraries that can help improve the security of
    your `JavaScript` applications.
  id: totrans-41
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '`Helmet`'
  id: totrans-42
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '`Helmet` is a library that helps secure `Express.js` applications by setting
    various HTTP headers.'
  id: totrans-43
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '`Express-rate-limit`'
  id: totrans-45
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '`Express-rate-limit` is a library for implementing rate limiting in `Express.js`
    applications.'
  id: totrans-46
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '`CSURF`'
  id: totrans-48
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '`CSURF` is a library to protect against CSRF attacks in `Express.js` applications.'
  id: totrans-49
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '`npm audit`'
  id: totrans-51
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '`npm audit` is a tool that checks project dependencies to identify known vulnerabilities.'
  id: totrans-52
  prefs: []
  stylish: true
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Ensuring the security of your `JavaScript` applications is essential to protect
    sensitive data and maintain user trust. We explore common vulnerabilities and
    how to mitigate them, security practices on both the frontend and backend, and
    various tools and libraries that can help strengthen the security of your applications.
    By applying these practices and tools, you will be well equipped to develop secure
    and robust applications. Continue improving your security skills and stay up to
    date with best practices to protect your applications against emerging threats.
  id: totrans-54
  prefs: []
  stylish: true
  type: TYPE_NORMAL
