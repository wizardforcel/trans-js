- en: 'Chapter 2: Setting Up a Node.js Project and Exploring JavaScript Fundamentals'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章：设置 Node.js 项目并探索 JavaScript 基础
- en: In this chapter, we will take the next steps in our Node.js journey by setting
    up a Node.js project and diving deeper into JavaScript fundamentals. By the end
    of this chapter, you will have a solid foundation to start building your own Node.js
    applications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将继续进行 Node.js 之旅，通过设置 Node.js 项目并深入探讨 JavaScript 基础知识。到本章结束时，你将具备坚实的基础，可以开始构建自己的
    Node.js 应用程序。
- en: 2.1 Initializing a Node.js Project
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.1 初始化 Node.js 项目
- en: 'To start a new Node.js project, we will utilize a package manager called npm
    (Node Package Manager), which is bundled with Node.js. Follow these steps to initialize
    a new Node.js project:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动一个新的 Node.js 项目，我们将使用一个名为 npm（Node 包管理器）的包管理工具，它与 Node.js 一起捆绑提供。按照以下步骤初始化一个新的
    Node.js 项目：
- en: 2.1.1 Creating a Project Directory
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.1.1 创建项目目录
- en: 'First, create a new directory for your project. Open your command prompt or
    terminal and navigate to the desired location where you want to create the project
    directory. Use the following command to create a new directory:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为你的项目创建一个新目录。打开命令提示符或终端，导航到你希望创建项目目录的位置。使用以下命令创建一个新目录：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This command will create a directory named "my-node-project" in your current
    location.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令将在你当前的位置创建一个名为 "my-node-project" 的目录。
- en: 2.1.2 Navigating into the Project Directory
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.1.2 进入项目目录
- en: 'Next, navigate into the project directory using the following command:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用以下命令进入项目目录：
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You are now inside the "my-node-project" directory.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经进入 "my-node-project" 目录。
- en: 2.1.3 Initializing the Project
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.1.3 初始化项目
- en: 'To initialize the project and create a "package.json" file, which will store
    project-specific metadata and dependencies, run the following command:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要初始化项目并创建一个 "package.json" 文件，该文件将存储项目特定的元数据和依赖项，请运行以下命令：
- en: '[PRE2]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You will be prompted to provide information about your project, such as the
    project name, version, description, entry point, and more. You can either fill
    in the details or press Enter to accept the default values for each prompt.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 系统将提示你提供有关项目的信息，例如项目名称、版本、描述、入口点等。你可以填写详细信息或按 Enter 键接受每个提示的默认值。
- en: Once you have provided the necessary information, npm will generate the "package.json"
    file in your project directory.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你提供了必要的信息，npm 将在你的项目目录中生成 "package.json" 文件。
- en: 2.2 Exploring JavaScript Fundamentals
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.2 探索 JavaScript 基础
- en: Since Node.js is built on JavaScript, it is crucial to have a solid understanding
    of JavaScript fundamentals. In this section, we will cover some essential concepts
    to get you started.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Node.js 是基于 JavaScript 构建的，因此拥有扎实的 JavaScript 基础至关重要。在本节中，我们将介绍一些基本概念，帮助你入门。
- en: 2.2.1 Variables and Data Types
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.2.1 变量和数据类型
- en: 'In JavaScript, you can declare variables using the "var", "let", or "const"
    keywords. JavaScript supports various data types, including numbers, strings,
    booleans, objects, arrays, and more. Here''s an example:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在 JavaScript 中，你可以使用 "var"、"let" 或 "const" 关键字来声明变量。JavaScript 支持多种数据类型，包括数字、字符串、布尔值、对象、数组等。以下是一个例子：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 2.2.2 Control Flow and Looping
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.2.2 控制流和循环
- en: 'JavaScript provides control flow statements like "if-else" and "switch" to
    make decisions based on conditions. You can also use looping structures like "for"
    and "while" to repeat code blocks. Here''s an example:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 提供了控制流语句，如 "if-else" 和 "switch"，用于根据条件做出决策。你还可以使用 "for" 和 "while"
    等循环结构来重复执行代码块。以下是一个例子：
- en: '[PRE4]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 2.2.3 Functions and Modules
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.2.3 函数和模块
- en: 'Functions in JavaScript allow you to encapsulate reusable code blocks. You
    can define functions using the "function" keyword and call them as needed. Additionally,
    you can modularize your code by organizing functions into separate files and exporting
    them as modules. Here''s an example:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript 中的函数允许你封装可重用的代码块。你可以使用 "function" 关键字定义函数，并根据需要调用它们。此外，你可以通过将函数组织到单独的文件中并将其作为模块导出，来实现代码的模块化。以下是一个例子：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '2'
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '2'
- en: .3 Summary
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: .3 总结
- en: In this chapter, we learned how to set up a new Node.js project using npm and
    initialize a "package.json" file. We also explored some fundamental concepts of
    JavaScript, such as variables, data types, control flow, looping, functions, and
    modules.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何使用 npm 设置一个新的 Node.js 项目并初始化一个 "package.json" 文件。我们还探讨了 JavaScript
    的一些基本概念，如变量、数据类型、控制流、循环、函数和模块。
- en: By now, you should have a solid understanding of how to start a Node.js project
    and work with JavaScript fundamentals. In the next chapter, we will delve deeper
    into Node.js modules and the Node Package Manager (NPM), which will expand your
    capabilities in building Node.js applications.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你应该对如何启动一个 Node.js 项目并掌握 JavaScript 基础有了扎实的理解。在下一章，我们将深入探讨 Node.js 模块和
    Node 包管理器（NPM），这将拓展你构建 Node.js 应用的能力。
